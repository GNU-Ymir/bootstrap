in core_;

use std::fs::path;

pub enum
| ALLOC_CLASS        = "_yrt_alloc_class"
| ALLOC_NO_SET_SLICE = "_yrt_alloc_slice_no_set"
| ALLOC_SET_SLICE    = "_yrt_alloc_slice"
| APPEND_SLICE       = "_yrt_append_slice"
| BEGIN_CATCH        = "_yrt_exc_begin_catch"
| CALL_FPTR_AS_DG    = "_yrt_call_fptr_as_dg"
| CALL_LAZY          = "_yrt_call_lazy"
| CHECK_FUTURE       = "_yrt_check_finished_future"
| CMP_CLASS_OF_TYPE  = "_yrt_cmp_class_of_type"
| CONCAT_SLICE       = "_yrt_concat_slices"
| DUPLICATE_SLICE    = "_yrt_dup_slice"
| DUPLICATE_TUPLE    = "_yrt_dup_tuple"
| MAP_COPY           = "_yrt_dup_map"
| MAP_EMPTY          = "_yrt_map_empty"
| MAP_FIND           = "_yrt_map_find"
| MAP_INSERT         = "_yrt_map_insert"
| MAP_ITER_BEGIN     = "_yrt_map_iter_begin"
| MAP_ITER_DEL       = "_yrt_map_iter_del"
| MAP_ITER_END       = "_yrt_map_iter_end"
| MAP_ITER_KEY       = "_yrt_map_iter_key"
| MAP_ITER_NEXT      = "_yrt_map_iter_next"
| MAP_ITER_VAL       = "_yrt_map_iter_val"
| PANIC              = "_yrt_exc_panic"
| REGISTER_UNIT_TEST = "_yrt_register_unittest"
| RUN_MAIN_DEBUG     = "_yrt_run_main_debug"
| RUN_MAIN_RELEASE   = "_yrt_run_main"
| RUN_UNITTESTS      = "_yrt_run_unittests"
| SPAWN_FUTURE       = "_yrt_spawn_future"
| THROW_EXCEPT       = "_yrt_exc_throw"
| WAIT_FUTURE        = "_yrt_wait_future"
 -> YRuntimeFuncs;

pub enum
| BIN                = "opBinary"
| BIN_RIGHT          = "opBinaryRight"
| CMP                = "opCmp"
| CONTAINS           = "opContains"
| DOLLAR             = "opDollar"
| EQUALS             = "opEquals"
| INDEX_ASSIGN       = "opIndexAssign"
| INDEX              = "opIndex"
| RANGE              = "opRange"
| RANGE_RIGHT        = "opRangeRight"
| UNARY              = "opUnary"
| BEGIN              = "begin"
| END                = "end"
| NEXT               = "next"
| GET_ITER           = "get"
| LEN                = "len"
| DCOPY              = "deepCopy"
 -> OpOverrideNames;

pub enum
| ARRAY              = "ARRAY"
| BOOL               = "BOOL"
| CHAR               = "CHAR"
| CLOSURE            = "CLOSURE"
| DELEGATE           = "DELEGATE"
| FLOAT              = "FLOAT"
| FPTR               = "FUNC_PTR"
| MAP                = "MAP"
| OBJECT             = "OBJECT"
| OPTION             = "OPTION"
| POINTER            = "POINTER"
| RANGE              = "RANGE"
| SIGNED_INT         = "SIGNED_INT"
| SLICE              = "SLICE"
| STRUCT             = "STRUCT"
| TUPLE              = "TUPLE"
| UNSIGNED_INT       = "UNSIGNED_INT"
| VOID               = "VOID"
 -> TypeInfoIDS;

pub enum
| EXCEPTION          = Path ("core/exception")
| ASSERT_EXCEPTION   = Path ("core/exception/assertion")
| IO_EXCEPTION       = Path ("core/exception/io")
| OPTION_EXCEPTION   = Path ("core/exception/option")
| TYPES              = Path ("core/types")
 -> UseCoreModules;

pub enum
| LOCK_GLOBAL        = Path ("core/atom/_yrt_lock_global")
| UNLOCK_GLOBAL      = Path ("core/atom/_yrt_unlock_global")
| LOCK_MONITOR       = Path ("core/atom/atomicMonitorEnter")
| UNLOCK_MONITOR     = Path ("core/atom/atomicMonitorExit")
 -> AtomicUtils;

pub enum
| OP_CONTAINS_FUNC   = Path ("core/types/range/opContains")
| STEP_BY_FUNC       = Path ("core/types/range/stepBy")
| REVERSE_FUNC       = Path ("core/types/range/reverse")
 -> RangeUtils;

pub enum
| ITERABLE_TRAIT     = Path ("core/types/Iterable")
| HASHABLE_TRAIT     = Path ("core/types/Hashable")
| COPIABLE_TRAIT     = Path ("core/types/Copiable")
 -> GlobalTraitUtils;

pub enum
| FFMOD_FUNC         = Path ("core/math/ffmod")
| IPOW_FUNC          = Path ("core/math/ipow")
| FIPOW_FUNC         = Path ("core/math/fipow")
| FFPOW_FUNC         = Path ("core/math/ffpow")
| FLOAT_CMP_FUNC     = Path ("core/math/fcmp")
 -> MathUtils;

pub enum
| HASH_KEY_FUNC      = Path ("core/types/map/hashKey")
| CMP_KEY_FUNC       = Path ("core/types/map/compareKeys")
| REMOVE_FUNC        = Path ("core/types/map/removeKey")
| LEN_FUNC           = Path ("core/types/map/len")
| DCOPY_FUNC         = Path ("core/types/map/deepCopyMap")
 -> MapUtils;

pub enum
| CAST_FPTR_TO_DG    = Path ("core/types/function/castToDG")
 -> DelegateUtils;

pub enum
| EMPTY_VAL_OPTION   = Path ("core/exception/option/EmptyValOption")
| EMPTY_ERR_OPTION   = Path ("core/exception/option/EmptyErrOption")
| OPTION_ERR         = Path ("core/exception/option/OptionException")
| IO_ERR             = Path ("core/exception/io/IOError")
| ASSERT_ERR         = Path ("core/exception/assertion/AssertError")
| EXCEPTION          = Path ("core/exception/Exception")
 -> ExceptionUtils;

pub enum
| OP_CMP_FUNC        = Path ("core/types/array/opCmp")
| OP_EQUALS_FUNC     = Path ("core/types/array/opEquals")
| OP_CONTAINS_FUNC   = Path ("core/types/array/opContains")
| DCOPY_FUNC         = Path ("core/types/array/deepCopySlice")
 -> SliceUtils;

pub enum
| TYPEINFO_TYPE      = Path ("core/types/info/TypeInfo")
| TYPEIDS_TYPE       = Path ("core/types/info/TypeIDs")
| FIELDINFO_TYPE     = Path ("core/types/info/FieldInfo")
 -> TypeUtils;
