mod ymirc::semantic::symbol::macro_::_;

import ymirc::utils::format;
import ymirc::lexing::word;
import ymirc::lexing::tokens;
import ymirc::semantic::symbol::_;

import std::io;

pub class MacroSymbol over Symbol {

    pub self (loc : &Word, comm : [c8])
        with super (loc, comm)
    {}

    /**
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable {


        pub over format (self, dmut stream : &Formatter) {
            import std::conv;
            stream:.write (self.to![c8]());
        }        
    }    
    
}

pub import ymirc::semantic::symbol::macro_::rule;
pub import ymirc::semantic::symbol::macro_::constructor;
