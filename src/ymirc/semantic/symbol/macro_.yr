in macro_;

pub mod ::constructor;
pub mod ::rule;

use ymirc::utils::format;
use ymirc::lexing::{word, tokens};
use ymirc::semantic::symbol::_;
use ymirc::syntax::declaration::{macro_, protection};

use std::stream;


pub class MacroSymbol over Symbol {

    let _decl : &MacroDecl;

    pub self (loc : &Word, comm : [c8], decl : &MacroDecl, protection : Protection)
        with super (loc, comm, protection-> protection)
        , _decl = decl
    {}

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ====================================          GETTERS          =====================================
     * ====================================================================================================
     * ====================================================================================================
     */

    pub fn getDeclaration (self)-> &MacroDecl {
        self._decl
    }

    /*!
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;

}
