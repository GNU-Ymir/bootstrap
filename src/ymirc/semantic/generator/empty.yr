mod ymirc::semantic::generator::empty;

import ymirc::semantic::generator::base;
import ymirc::utils::format;
import ymirc::lexing::word;
import std::io;

pub class @final EmptyGenerator over Generator {

    pub self () with super (EOF_WORD) {}


    /**
     * ================================================================================
     * ================================================================================
     * =========================          COMPARISON          =========================
     * ================================================================================
     * ================================================================================
     */

    pub over opEquals (self, o : &Generator)-> bool {
        match o {
            EmptyGenerator () => { true }
            _ => { false }
        }
    }    
    
    /**
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable {

        pub over format (self, dmut stream : &Formatter) {
            stream:.write ("<empty-generator>");
        }
    }
    

}
