in void_;

use ymirc::lexing::word;
use ymirc::utils::format;
use ymirc::syntax::keys;
use std::stream;

pub lazy VOID_TYPE = copy VoidType (EOF_WORD);

/**
 * Void type
 */
@final
pub class VoidType over ScalarType {

    /**
     * @params: 
     *    - loc: the location of the type
     */
    pub self (loc : &Word, isMutable : bool = false)
        with super (loc, isMutable-> isMutable)
    {}

    /*!
     * ================================================================================
     * ================================================================================
     * =========================          COMPARISON          =========================
     * ================================================================================
     * ================================================================================
     */

    pub over opEquals (self, o : &Generator)-> bool {
        match o {
            VoidType () => { true }
            _ => { false }
        }
    }

    pub over isCompatible (self, o : &Type)-> bool {
        self == o
    }
    
    /*!
     * ================================================================================
     * ================================================================================
     * =========================           CLONING            =========================
     * ================================================================================
     * ================================================================================
     */

    pub over clone (self, mutLevel : u32)-> &Type {
        if (self._isMutable && mutLevel != 0u32) {
            self
        } else {
            copy VoidType (self._loc, isMutable-> (mutLevel != 0u32))
        }
    }

    /*!
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */


    impl Streamable;
    impl Formattable {

        pub over format (self, dmut stream : &Formatter) {
            stream:.write (NativeTypes::VOID);
        }                
    }
    
}
