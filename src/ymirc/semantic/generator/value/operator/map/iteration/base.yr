mod ymirc::semantic::generator::value::operator::map::iteration::base;

import ymirc::lexing::word;
import ymirc::syntax::keys;
import ymirc::utils::format;

import std::io;
import std::collection::vec;

import ymirc::semantic::generator::value::operator::map::base;
import ymirc::semantic::generator::base;
import ymirc::semantic::generator::type::base;
import ymirc::semantic::generator::type::temporary::mapiterator;
import ymirc::semantic::generator::value::base;


pub class @abstract MapIteratorValue over MapOperatorValue {

    pub self (loc : &Word, type : &Type, isReduced : bool = false)
        with super (loc, type, isReduced-> isReduced)
    {}

    pub over opEquals (self, _ : &Generator)-> bool {
        false
    }

    pub over isFullLiteral (self)-> bool {
        false
    }

}
