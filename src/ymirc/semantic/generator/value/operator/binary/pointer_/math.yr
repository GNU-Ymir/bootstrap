in math;

use ymirc::lexing::word;
use ymirc::syntax::keys;
use ymirc::utils::format;
use std::stream;

use ymirc::semantic::generator::value::operator::binary::base;
use ymirc::semantic::generator::{base,
                                 type::base,
                                 value::base,
                                 type::native::scalar::bool_};

/**
 * Binary math operator that assume that the operands are pointer like values (or int value for the right operand)
 */
@final
pub class BinaryMathPointerOperatorValue over BinaryOperatorValue {

    pub self (loc : &Word, type : &Type, operator : BinaryOperators, left : &Value, right : &Value, isReduced : bool = false)
        with super (loc, type, operator, left, right, isReduced-> isReduced)
    {}

    pub over clone (self)-> &Value {
        copy BinaryMathPointerOperatorValue (self._loc, self._type,
                                             self._op,
                                             self._left.clone (),
                                             self._right.clone (),
                                             isReduced-> self._isReduced)
    }

    impl Streamable;
    
}
