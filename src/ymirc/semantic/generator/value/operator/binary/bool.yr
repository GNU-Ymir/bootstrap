mod ymirc::semantic::generator::value::operator::binary::bool;

import ymirc::lexing::word;
import ymirc::syntax::keys;
import ymirc::utils::format;

import std::io;

import ymirc::semantic::generator::value::operator::binary::base;
import ymirc::semantic::generator::base;
import ymirc::semantic::generator::type::base;
import ymirc::semantic::generator::type::native::scalar::bool_;
import ymirc::semantic::generator::value::base;


/**
 * Binary operator that assume that the operands are boolean like values
 * Or they can be casted implicitly
 * Assume the operator is either == or !=
 */
pub class CmpBoolOperatorValue over BinaryOperatorValue {

    pub self (loc : &Word, operator : BinaryOperators, left : &Value, right : &Value, isReduced : bool = false)
        with super (loc, BoolType::new (loc), operator, left, right, isReduced-> isReduced)
    {}

    /*!
     * ================================================================================
     * ================================================================================
     * ==========================           CLONE            ==========================
     * ================================================================================
     * ================================================================================
     */

    pub over clone (self)-> &Value {
        CmpBoolOperatorValue::new (self._loc, self._op, self._left.clone (), self._right.clone (), isReduced-> self._isReduced)
    }

    impl Streamable;    
}

/**
 * Binary operator that assume that the operands are boolean like values
 * Or they can be casted implicitly
 * Assume the operator is either || or &&
 */
pub class LogicalBinBoolOperatorValue over BinaryOperatorValue {

    pub self (loc : &Word, operator : BinaryOperators, left : &Value, right : &Value, isReduced : bool = false)
        with super (loc, BoolType::new (loc), operator, left, right, isReduced-> isReduced)
    {}

    /*!
     * ================================================================================
     * ================================================================================
     * ==========================           CLONE            ==========================
     * ================================================================================
     * ================================================================================
     */

    pub over clone (self)-> &Value {
        LogicalBinBoolOperatorValue::new (self._loc, self._op, self._left.clone (), self._right.clone (), isReduced-> self._isReduced)
    }


    impl Streamable;    
}
