in memory;

pub mod ::address;
pub mod ::aliaser;
pub mod ::copier;
pub mod ::referencer;
pub mod ::dereferencer;
pub mod ::lazy_;
pub mod ::future_;
pub mod ::move_;
pub mod ::class_aliaser;
pub mod ::map_aliaser;


use ymirc::lexing::word;
use ymirc::utils::format;
use ymirc::semantic::generator::type;

/**
 * Ancestor of all kind of memory movement values
 */
@abstract
pub class MemoryValue over Value {
    pub self (loc : &Word, type : &Type, isReduced : bool = false)
        with super (loc, type, isReduced-> isReduced)
    {}

    pub over isFullLiteral (self)-> bool {
        false
    }
}
