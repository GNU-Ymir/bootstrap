in superproxy;

use ymirc::lexing::word;
use ymirc::utils::format;
use std::stream;
use ymirc::semantic::generator::type;

/**
 * Constructor of a value from a SuperProxyed value
 * A SuperProxy value is a simple transformation of type (at low level) without data conversion
 */
@final
pub class SuperProxyValue over cast_::CastValue {

    /**
     * @params:
     *    - loc: the location of the SuperProxy
     *    - type: the type of the value (the type of the destination)
     *    - content: the value that is SuperProxyed
     */
    pub self (loc : &Word, type : &Type, content : &Value)
        with super (loc, type, content, isLvalue-> false, isReduced-> true)
    {}

    /*!
     * ================================================================================
     * ================================================================================
     * =========================          COMPARISON          =========================
     * ================================================================================
     * ================================================================================
     */


    pub over opEquals (self, o : &Generator)-> bool {
        if (!self::super.opEquals (o)) return false;

        match o {
            SuperProxyValue () => {
                true
            }
            _ => { false }
        }
    }

    pub over isFullLiteral (self)-> bool {
        false
    }

    /*!
     * ====================================================================================================
     * ====================================================================================================
     * ====================================          CLONING          =====================================
     * ====================================================================================================
     * ====================================================================================================
     */

    pub over clone (self)-> &Value {
        copy SuperProxyValue (self._loc, self._type,
                              self._content.clone ())
    }

    /*!
     * ================================================================================
     * ================================================================================
     * =========================             MISC             =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable {

        pub over format (self, dmut stream : &Formatter) {
            stream:.writef ("{%}.super", self._content);
        }
    }

}
