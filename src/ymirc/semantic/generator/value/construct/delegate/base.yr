mod ymirc::semantic::generator::value::construct::delegate::base;

import ymirc::lexing::word;
import ymirc::utils::format;

import std::io;
import std::fs::path;

import ymirc::semantic::generator::base;
import ymirc::semantic::generator::type::base;
import ymirc::semantic::generator::value::base;
import ymirc::semantic::generator::type::native::scalar::delegate;
import ymirc::semantic::generator::value::construct::base;
import ymirc::semantic::generator::value::prototypes::proto;

pub class @abstract DelegateValue over ConstructValue {

    pub self (loc : &Word, type : &Type, isReduced : bool)
        with super (loc, type, isReduced-> isReduced)
    {}

}
