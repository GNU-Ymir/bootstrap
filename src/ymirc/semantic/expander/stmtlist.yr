mod ymirc::semantic::expander::stmtlist;

import std::collection::vec;
import ymirc::semantic::generator::_;

import ymirc::utils::format;


pub class @final StmtList {

    let dmut _list = Vec!{&Value}::new ();

    pub self () {}

    pub fn append (mut self, v : &Value) {
        self._list:.push (v);
    }

    pub fn opIndex (self)-> [&Value] {
        self._list[]
    }

    pub fn opIndex (self, i : i32)-> &Value {
        self._list[][i]
    }

    pub fn len (self)-> usize {
        self._list.len ()
    }

}
