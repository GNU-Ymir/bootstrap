mod ymirc::semantic::validator::symbol::impl_;

import ymirc::semantic::validator::visitor;
import ymirc::semantic::validator::errors;
import ymirc::semantic::symbol::impl_;
import ymirc::syntax::declaration::protection;
import ymirc::syntax::expression::_;
import ymirc::syntax::declaration::_;

import ymirc::syntax::keys;
import ymirc::semantic::generator::_;
import ymirc::errors::_;
import ymirc::utils::format;
import ymirc::lexing::word;

import std::collection::vec;
import std::io, std::fs::path;

/**
 * The impl validator is the impl responsible for impl symbol validation
 */
pub class ImplValidator {

    /**
     * Create a new empty validator
     */
    pub self () {}

    /**
     * Validate an impl symbol
     * @params: 
     *    - context: the context of the validation
     *    - sym: the symbol to validate
     * @returns: the value of the impl
     * @throws: &ErrorMsg, if the impl is malformed
     */
    pub fn validate (self, dmut context : &Validator, sym : &ImplSymbol)-> &Value
        throws &ErrorMsg
    {
        context;
        sym;
        __pragma!fake_throw (&ErrorMsg);
        __pragma!panic ();
    }

}
