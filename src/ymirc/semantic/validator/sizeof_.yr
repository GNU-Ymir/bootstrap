mod ymirc::semantic::validator::sizeof_;

import ymirc::syntax::expression::_;
import ymirc::semantic::validator::visitor;
import ymirc::semantic::validator::errors;

import ymirc::semantic::generator::_;
import ymirc::errors::_;
import ymirc::utils::format;
import ymirc::lexing::word;
import ymirc::lexing::tokens;
import ymirc::syntax::keys;

import std::algorithm::searching;
import std::io;
import std::conv;

/**
 * The validator responsible for the validation of 'sizeof' expressions
 */
pub class SizeofValidator {

    /**
     * Create a new empty validator
     */
    pub self () {}


    /**
     * Validate a sizeof expression
     * @params:
     *    - context: the context of the validation
     *    - i: the intrinsic expression to validate
     * @returns: the validated expression
     */
    pub def validate (self, dmut context : &Validator, i : &IntrinsicExpr)-> &Value
        throws &ErrorMsg
    {
        context;
        i;
        __pragma!fake_throw (&ErrorMsg);
        __pragma!panic ();
    }

}
