in base;

use ymirc::lint::node::base;
use ymirc::lexing::word;
use ymirc::utils::format;


/**
 * Ancestor of all Ymir intermediate Language representation
 * */
@abstract
pub class YILSymbol over YILNode {

    // THe name of the symbol
    let _name : [c8];

    // The list of symbols referenced in this symbol
    let _refs : [[c8] => ()];

    // True if the symbol is weak
    let _isWeak : bool;

    /**
     * @params:
     *   - loc: the location of the generator
     *   - name: the name of the symbol
     *   - isWeak : true iif the symbol is weak
     */
    pub self (loc : &Word, name : [c8], isWeak : bool, refs : [[c8] => ()])
        with super (loc)
        , _name = name
        , _isWeak = isWeak
        , _refs = refs
    {}


    /*!
     * ================================================================================
     * ================================================================================
     * =========================           GETTERS            =========================
     * ================================================================================
     * ================================================================================
     */

    /**
     * The name of the symbol
     * */
    @final
    pub fn getName (self)-> [c8] {
        self._name
    }

    /**
     * @returns: true if the symbol is weak
     * */
    @final
    pub fn isWeak (self)-> bool {
        self._isWeak
    }

    /**
     * @returns: the list of references to other symbols made by this symbol
     * */
    @final
    pub fn getReferences (self)-> [[c8] => ()] {
        self._refs
    }

    /*!
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable;

}
