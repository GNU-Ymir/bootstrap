mod ymirc::lint::node::type::base;

import ymirc::lint::node::base;
import ymirc::utils::format;

import std::io;


/**
 * Ymir Intermediate Language type
 * */
pub class @abstract YILType over YILNode {

    // The size of the type in bytes
    let _size : u32;

    pub self (size : u32) with _size = size {}

    /**
     * ================================================================================
     * ================================================================================
     * =========================           GETTERS            =========================
     * ================================================================================
     * ================================================================================
     */

    pub fn @final getSize (self)-> u32 {
        self._size
    }

    /**
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable;


}
