in goto;

use ymirc::lint::node::{base, instr::{base, label}};

use ymirc::lexing::word;
use ymirc::utils::format;

/**
 * A Ymir Intermediate Language Goto
 * */
@final
pub class YILGoto over YILInstr {

    // The label to goto
    let _label : &YILLabel;

    pub self (loc : &Word, label : &YILLabel)
        with super (loc)
        , _label = label
    {}

    /*!
     * ================================================================================
     * ================================================================================
     * =========================           GETTERS            =========================
     * ================================================================================
     * ================================================================================
     */

    /**
     * @returns: the id of the label to goto
     * */
    pub fn getLabel (self)-> &YILLabel {
        self._label
    }

    /*!
     * ================================================================================
     * ================================================================================
     * =========================          COMPARISON          =========================
     * ================================================================================
     * ================================================================================
     */

    /**
     * Compare two nodes
     * @returns: true, iif the two nodes are strictly identical
     */
    pub over opEquals (self, o : &YILNode)-> bool {
        match o {
            v : &YILGoto => {
                self._label == v._label
            }
            _ => { false }
        }
    }

    /*!
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable {
        pub over format (self, dmut stream : &Formatter) {
            stream:.detabing ();
            stream:.write ("#GOTO ", self._label.getName ());
            stream:.write ("(#", self._label.getLabelId ().to!{[c8], 36us} (), ')');
            stream:.entabing ();
        }
    }

}
