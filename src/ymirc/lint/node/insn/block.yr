mod ymirc::lint::node::insn::block;

import ymirc::lint::node::base;
import ymirc::lint::node::insn::base;
import ymirc::utils::format;
import ymirc::lexing::word;

import std::io;

pub def YIL_EMPTY_BLOCK = YILBlock::new (EOF_WORD);

pub class YILBlock over YILInstr {

    pub self (loc : &Word) with super (loc) {}

    /**
     * ================================================================================
     * ================================================================================
     * =========================          COMPARISON          =========================
     * ================================================================================
     * ================================================================================
     */

    /**
     * Compare two generators
     * @returns: true, iif the two generators are strictly identical
     */
    pub over opEquals (self, o : &YILNode)-> bool {
        match o {
            YILBlock () => { return true; }
        }
        false
    }


    /**
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable {
        pub over format (self, dmut stream : &Formatter) {
            stream:.write ("{"s8);
            stream:.entabing ();
            stream:.detabing ();
            stream:.write ("\n}"s8);
        }
    }

}
