mod ymirc::lint::symbol::base;

import ymirc::lexing::word;
import ymirc::utils::format;

import std::io;

/***
 * Ymir intermediate language symbol
 * */
pub class @abstract YILSymbol {

    // The location of the symbol in the original source code
    let _loc : &Word;

    // The name of the symbol
    let _name : [c8];

    // The mangled name of the symbol
    let _mangledName : [c8];

    /**
     * @params:
     *     - name: the name of the symbol
     *     - mangledName: the mangledName name of the symbol
     * */
    pub self (loc : &Word, name : [c8], mangledName : [c8]) with
        _loc = loc
        , _name = name
        , _mangledName = mangledName
    {}


    /**
     * ================================================================================
     * ================================================================================
     * =========================           GETTERS            =========================
     * ================================================================================
     * ================================================================================
     */

    /**
     * @returns: the location of the generator
     */
    pub fn @final getLoc (self)-> &Word {
        self._loc
    }

    /**
     * @returns: the name of the symbol
     * */
    pub fn @final getName (self)-> [c8] {
        self._name
    }

    /**
     * @returns: the mangled name of the symbol
     * */
    pub fn @final getMangledName (self)-> [c8] {
        self._mangledName
    }

    /**
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable;

}
