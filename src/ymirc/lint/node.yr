in node;

pub mod ::global;
pub mod ::instr;
pub mod ::type;
pub mod ::value;

use ymirc::lexing::word;
use ymirc::utils::format;

use std::{io, stream};

/**
 * Ancestor of all Ymir intermediate Language representation
 * */
@abstract
pub class YILNode {

    /// The location of the node
    let _loc : &Word;


    /**
     * @params:
     *   - loc: the location of the generator
     */
    pub self (loc : &Word)
        with _loc = loc
    {}


    /*!
     * ================================================================================
     * ================================================================================
     * =========================           GETTERS            =========================
     * ================================================================================
     * ================================================================================
     */

    /**
     * @returns: the location of the generator
     */
    @final
    pub fn getLoc (self)-> &Word {
        self._loc
    }


    /*!
     * ================================================================================
     * ================================================================================
     * =========================          COMPARISON          =========================
     * ================================================================================
     * ================================================================================
     */

    /**
     * Compare two nodes
     * @returns: true, iif the two nodes are strictly identical
     */
    pub fn opEquals (self, o : &YILNode)-> bool;

    /*!
     * ================================================================================
     * ================================================================================
     * =========================        MISCELLANEOUS         =========================
     * ================================================================================
     * ================================================================================
     */

    impl Streamable;
    impl Formattable;

}
