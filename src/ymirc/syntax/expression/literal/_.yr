mod ymirc::syntax::expression::literal::_;

import ymirc::syntax::declaration::_;
import ymirc::syntax::expression::_;

import ymirc::syntax::_;
import ymirc::lexing::word;
import ymirc::lexing::tokens;

import ymirc::utils::serialize;
import std::io;

/**
 * Ancestor of all literal
 */
pub class @abstract LiteralExpr over Expression {

    pub self (loc : &Word) with super (loc) {}

    impl Serializable;
    impl Streamable;
    
}


pub import ymirc::syntax::expression::literal::bool_;
pub import ymirc::syntax::expression::literal::char;
pub import ymirc::syntax::expression::literal::dollar;
pub import ymirc::syntax::expression::literal::fixed;
pub import ymirc::syntax::expression::literal::float;
pub import ymirc::syntax::expression::literal::ignore;
pub import ymirc::syntax::expression::literal::null_;
pub import ymirc::syntax::expression::literal::range;
pub import ymirc::syntax::expression::literal::string;
pub import ymirc::syntax::expression::literal::unit;
pub import ymirc::syntax::expression::literal::var;
