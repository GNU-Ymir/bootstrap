mod ymirc::syntax::expression::operator::_;

import ymirc::syntax::declaration::_;
import ymirc::syntax::expression::_;

import ymirc::syntax::_;
import ymirc::lexing::word;
import ymirc::lexing::tokens;
import ymirc::utils::format;

import std::net::packet;
import std::io;

/**
 * The ancestor of all kind of operator
 */
pub class @abstract OperatorExpr over Expression {

    pub self (loc : &Word)
        with super (loc)
    {}

    impl Packable;
    impl Streamable;
    impl Formattable {
        pub over format (self, dmut _ : &Formatter) {}
    }
}


pub import ymirc::syntax::expression::operator::binary;
pub import ymirc::syntax::expression::operator::unary;
pub import ymirc::syntax::expression::operator::mult;
pub import ymirc::syntax::expression::operator::path;
