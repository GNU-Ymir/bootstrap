mod ymirc::syntax::expression::macro_::_;

import ymirc::syntax::declaration::_;
import ymirc::syntax::expression::_;

import ymirc::syntax::_;
import ymirc::lexing::word;
import ymirc::lexing::tokens;

import std::net::packet;
import std::io;


/**
 * Ancestor of all macro rule expressions
 */
pub class @abstract MacroRuleExpression over Expression {

    pub self (loc : &Word) with super (loc) {}

    impl Packable;

}


pub import ymirc::syntax::expression::macro_::call;
pub import ymirc::syntax::expression::macro_::mult;
pub import ymirc::syntax::expression::macro_::or;
pub import ymirc::syntax::expression::macro_::token;
pub import ymirc::syntax::expression::macro_::var;


