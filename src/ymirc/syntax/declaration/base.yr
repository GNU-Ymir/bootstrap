mod ymirc::syntax::declaration::base;

import ymirc::lexing::word;
import ymirc::syntax::node;
import ymirc::utils::format;


import std::io;

/**
 * Ancestor class of all possible declaration
 */
pub class @abstract Declaration over SyntaxNode {

    /// The comments about the declaration
    let _comm : [c8];

    /**
     * @params:
     *    - loc: the location of the declaration
     *    - comm: the comments about the declaration
     */
    pub self (loc : &Word, comm : [c8])
        with super (loc),
             _comm = comm
    {}

    /**
     * @returns: the comments about the declaration
     */
    pub fn @final getComments (self)-> [c8] {
        self._comm
    }

    pub fn opEquals (self, o : &Declaration)-> bool;


    impl Streamable;
    impl Formattable {
        pub over format (self, dmut _ : &Formatter) {}
    }
}
