in main;


// use ymirc::parser;
// use ymirc::semantic::generator::_;
// use ymirc::syntax::{_, expression::empty};

// use ymirc::lint::node::{_, global::_};
// use ymirc::{errors::_, global::_, args, utils::_};
// use std::io;

// // fn main (args : [[c8]]) {
// //     let dmut parser = copy Parser (YmirArguments (file-> args [1]));
// //     {
// //         parser:.parseAll ();
// //         println (format ("%", parser.getSyntaxNode ()));
// //     } catch {
// //         err => {
// //             println (format ("%", err, tags-> FormatTags (withErrorIds-> true)));
// //         }
// //     }
// // }
