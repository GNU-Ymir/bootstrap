frame : test3::IB::self (mut self : mut &(mut test3::IB))-> void {
    {
        test3::B::self(self)
    };
    {
        <unit-value>
    }
}
frame : test3::IC::self (mut self : mut &(mut test3::IC))-> void {
    {
        test3::C::self(self)
    };
    {
        <unit-value>
    }
}
frame : test3::main ()-> void {
    let a : &(test3::A) = test3::foo ();
    {
        let mut #_value : &(test3::A) = a;
        if (#_value of test3::B) {
            <unit-value>
        } else if (#_value of test3::C) {
            <unit-value>
        }
    }
}
frame : test3::A::self (mut self : mut &(mut test3::A))-> void {
    {
        <unit-value>
    }
}
frame : test3::B::self (mut self : mut &(mut test3::B))-> void {
    {
        test3::A::self(self)
    };
    {
        <unit-value>
    }
}
frame : test3::C::self (mut self : mut &(mut test3::C))-> void {
    {
        test3::A::self(self)
    };
    {
        <unit-value>
    }
}
