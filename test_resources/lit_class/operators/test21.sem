frame : test21::A::self (mut self : mut &(mut test21::A))-> void {
    {
        <unit-value>
    }
}
frame : test21::B::self (mut self : mut &(mut test21::B))-> void {
    {
        test21::A::self(self)
    };
    {
        <unit-value>
    }
}
frame : test21::main ()-> void {
    let b : &(test21::B) = test21::B::self(new);
    let a : &(test21::A) = cast!{&(test21::A)}(b);
    let _x_ : bool = (a is cast!{&(test21::A)}(b));
    let _y_ : bool = (cast!{&(test21::A)}(b) is a);
    <unit-value>
}
