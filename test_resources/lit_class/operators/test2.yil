pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_8 (#_vtable-> P_2, #_monitor-> P_1, _i-> i32);
pointer P_9 *(T_8);
array A_10 [P_1 ; 2];
tuple T_11 (len-> u64, ptr-> P_1, blk_info-> P_1);
pointer P_12 *(u8);
tuple T_13 (len-> u64, ptr-> P_12, blk_info-> P_1);
array A_14 [u8 ; 9];
tuple T_15 (typeid-> u32, size-> u64, inner-> T_17, name-> T_13);
pointer P_16 *(T_15);
tuple T_17 (len-> u64, ptr-> P_16, blk_info-> P_1);
tuple T_18 (i32, i32, i32);
tuple T_19 (i32, i32, i32, i32);
const :  _Y5test21ATI (typeid-> 13, size-> 24, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 8, ptr-> "test2::A", blk_info-> 0))
const :  _Y5test21AVT [&_Y5test21ATI, 0]
frame :  _Y5test21A4selfCTxP9x5test21Ai32Zv (let self : P_9, let x : i32)-> void {
    self-> _i = x;
}
frame :  [weak] _Y5test21A7opUnaryNs133MTP85test21AZP85test21A (let self : P_9)-> P_9 {
    x = 1;
    #_iter = 0;
    YI_1 = self-> _i <= 0;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_2 = 1;
#GOTO end(#2);
#LABEL else(#3);
    YI_2 = -1;
#LABEL end(#2);
    YI_3 = (self-> _i, 0, YI_2);
    #_range = YI_3;
    YI_4 = #_range._2 < 0;
#IF YI_4
#THEN_GOTO then(#4)
#ELSE_GOTO else(#6);
#LABEL then(#4);
    YI_5 = #_range._0 - #_range._1;
    YI_6 = (- #_range._2, #_range._1, #_range._0, YI_5);
    YI_7 = YI_6;
#GOTO end(#5);
#LABEL else(#6);
    YI_8 = #_range._1 - #_range._0;
    YI_9 = (#_range._2, #_range._0, #_range._1, YI_8);
    YI_7 = YI_9;
#LABEL end(#5);
    #_val = YI_7;
    YI_10 = #_val._3 / #_val._0;
    #_nbAll = YI_10;
    YI_11 = #_nbAll == 18446744073709551615;
#IF YI_11
#THEN_GOTO then(#a)
#ELSE_GOTO else(#c);
#LABEL then(#a);
    YI_12 = #_nbAll;
#GOTO end(#b);
#LABEL else(#c);
    YI_13 = #_nbAll * #_val._0;
    YI_14 = YI_13 + #_val._1;
    YI_15 = YI_14 != #_val._2;
#IF YI_15
#THEN_GOTO then(#7)
#ELSE_GOTO else(#9);
#LABEL then(#7);
    YI_16 = #_nbAll + 1;
    YI_17 = YI_16;
#GOTO end(#8);
#LABEL else(#9);
    YI_17 = #_nbAll;
#LABEL end(#8);
    YI_12 = YI_17;
#LABEL end(#b);
    YI_18 = YI_12;
    #_nb_iter = YI_18;
#GOTO test(#i);
#LABEL beg(#h);
    YI_19 = self-> _i <= 0;
#IF YI_19
#THEN_GOTO then(#e)
#ELSE_GOTO else(#g);
#LABEL then(#e);
    YI_20 = 1;
#GOTO end(#f);
#LABEL else(#g);
    YI_20 = -1;
#LABEL end(#f);
    YI_21 = cast!{u64} (YI_20);
    YI_22 = #_iter * YI_21;
    YI_23 = cast!{i32} (YI_22);
    YI_24 = self-> _i + YI_23;
    i = YI_24;
    YI_25 = x * i;
    x = YI_25;
    YI_26 = #_iter + 1;
    #_iter = YI_26;
#LABEL test(#i);
    YI_27 = #_iter < #_nb_iter;
#IF YI_27
#THEN_GOTO beg(#h)
#ELSE_GOTO end(#d);
#LABEL end(#d);
    __self_37 = _yrt_alloc_class(&_Y5test21AVT);
    _Y5test21A4selfCTxP9x5test21Ai32Zv(__self_37, x);
    YI_28 = __self_37;
    YI_29 = YI_28;
    return YI_29;
}
frame :  [weak] _Y5test21A7opUnaryNs145MTP85test21AZP85test21A (let self : P_9)-> P_9 {
    __self_2 = _yrt_alloc_class(&_Y5test21AVT);
    _Y5test21A4selfCTxP9x5test21Ai32Zv(__self_2, - self-> _i);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y5test24mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y5test21AVT);
    _Y5test21A4selfCTxP9x5test21Ai32Zv(__self_1, 10);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = _Y5test21A7opUnaryNs133MTP85test21AZP85test21A(a);
    b = YI_2;
    YI_3 = _Y5test21A7opUnaryNs145MTP85test21AZP85test21A(a);
    c = YI_3;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test24mainFZv);
    return 0;
}
