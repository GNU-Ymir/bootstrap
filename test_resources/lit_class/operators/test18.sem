frame : test18::A::self (mut self : mut &(mut test18::A))-> void {
    {
        <unit-value>
    }
}
frame : [weak] test18::A::opRange!{false}::opRange (self : &(test18::A), b : i32)-> (..i32) return (0 ..[false] b).step_by (if (0 <= b) 1 else -1)
frame : [weak] test18::A::opRange!{true}::opRange (self : &(test18::A), b : i32)-> (..i32) return (0 ..[true] b).step_by (if (0 <= b) 1 else -1)
frame : test18::main ()-> void {
    let a : &(test18::A) = test18::A::self(new);
    test18::A::opRange!{false}::opRange(a, 10);
    test18::A::opRange!{true}::opRange(a, 11);
    <unit-value>
}
