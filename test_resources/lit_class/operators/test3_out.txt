frame : [weak] test3::A::opUnary!{"!"s8}::opUnary (self : &(test3::A))-> i32 return 1
frame : [weak] test3::A::opUnary!{"-"s8}::opUnary (self : &(test3::A))-> i32 return 2
frame : test3::main ()-> void {
    let a : &(test3::A) = test3::A::self(new);
    test3::A::opUnary!{"!"s8}::opUnary(a);
    test3::A::opUnary!{"-"s8}::opUnary(a);
    <unit-value>
}
frame : test3::A::self (mut self : mut &(mut test3::A))-> void {
    {
        <unit-value>
    }
}
