frame : [weak] test5::A::opBinaryRight!{"*"s8}::opBinaryRight (self : &(test5::A), z : i32)-> i32 return (z + 1)
frame : [weak] test5::A::opBinaryRight!{"/"s8}::opBinaryRight (self : &(test5::A), z : i32)-> i32 return (z + 1)
frame : test5::A::self (mut self : mut &(mut test5::A))-> void {
    {
        <unit-value>
    }
}
frame : [weak] test5::A::opBinary!{"+"s8}::opBinary (self : &(test5::A), z : i32)-> i32 return (z + 1)
frame : test5::main ()-> void {
    let a : &(test5::A) = test5::A::self(new);
    test5::A::opBinary!{"+"s8}::opBinary(a, 1);
    test5::A::opBinaryRight!{"*"s8}::opBinaryRight(a, 1);
    test5::A::opBinaryRight!{"/"s8}::opBinaryRight(a, 1);
    <unit-value>
}
