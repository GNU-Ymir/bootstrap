frame : [weak] test4::A::opBinary!{"+"s8}::opBinary (self : &(test4::A), x : i32)-> i32 return (x + 1)
frame : [weak] test4::A::opBinaryRight!{"+"s8}::opBinaryRight (self : &(test4::A), x : i32)-> i32 return (x + 1)
frame : test4::main ()-> void {
    let a : &(test4::A) = test4::A::self(new);
    test4::A::opBinary!{"+"s8}::opBinary(a, 1);
    test4::A::opBinaryRight!{"+"s8}::opBinaryRight(a, 1);
    <unit-value>
}
frame : test4::A::self (mut self : mut &(mut test4::A))-> void {
    {
        <unit-value>
    }
}
