frame : [weak] test9::A::opBinaryRight!{"*"s8}::opBinaryRight (self : &(test9::A), a : &(test9::A))-> i32 return 1
frame : test9::main ()-> void {
    let a : &(test9::A) = test9::A::self(new);
    test9::A::opBinaryRight!{"*"s8}::opBinaryRight(a, a);
    <unit-value>
}
frame : test9::A::opBinary (self : &(test9::A), x : i32)-> i32 return (1 + x)
frame : test9::A::self (mut self : mut &(mut test9::A))-> void {
    {
        <unit-value>
    }
}
