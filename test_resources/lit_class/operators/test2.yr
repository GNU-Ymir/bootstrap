class A {
    let _i : i32;

    pub self (x : i32)
        with _i = x
    {}

    pub fn opUnary {"!"} (self)-> &A {
        let mut x = 1;
        for i in self._i .. 0 {
            x *= i;
        }

        copy A (x)
    }

    pub fn opUnary {"-"} (self)-> &A {
        copy A (-self._i)
    }

}

fn main () {
    let a = copy A (10);
    let b = !a;
    let c = -a;
    b;
    c;
}
