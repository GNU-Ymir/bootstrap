@abstract
class A {
    let _x : i32 = 0;
    let _y : i32 = 9;

    pub self () {}

    @field
    pub fn foo (self)-> i32;
    pub fn foo (self, i : i32)-> i32;
}

class B over A {
    pub self () {}

    @field
    pub over foo (self)-> i32 {
        self._x
    }

    pub over foo (self, i : i32)-> i32 {
        self._y + i
    }
}

class C over B {
    pub self () {}

    @field
    pub over foo (self)-> i32 {
        self._x + self._y
    }

    pub over foo (self, i : i32)-> i32 {
        (self._y + self._x) * i
    }
}


fn main () {
    let c : &A = copy C ();
    let _z_ = c.foo;
    let _y_ = c.foo (1);

    let b : &A = copy C ();
    let _z2_ = b.foo;
    let _y2_ = b.foo (1);
}
