frame : test1::A::foo (self : &(test1::A))-> i32 return self._x
frame : test1::A::foo (self : &(test1::A), i : i32)-> i32 return (self._y + i)
frame :[pre] test1::A::self (mut self : mut &(mut test1::A))-> void {
    {
        self._x = 0;
        self._y = 9
    }
}
frame :[post] test1::A::self (mut self : mut &(mut test1::A))-> void {
    <unit-value>
}
frame : test1::A::self (mut self : mut &(mut test1::A))-> void {
    test1::A::self[pre](self);
    test1::A::self[post](self)
}
frame : test1::main ()-> void {
    let a : &(test1::A) = test1::A::self(new);
    let _z_ : i32 = test1::A::foo(a);
    let _y_ : i32 = test1::A::foo(a, 1);
    <unit-value>
}
