frame : test4::A::foo (self : &(test4::A))-> i32 return self._x
frame : test4::A::foo (mut self : mut &(mut test4::A), x : i32)-> void {
    self._x = x;
    <unit-value>
}
frame :[pre] test4::A::self (mut self : mut &(mut test4::A))-> void {
    {
        self._x = 0
    }
}
frame :[post] test4::A::self (mut self : mut &(mut test4::A))-> void {
    <unit-value>
}
frame : test4::A::self (mut self : mut &(mut test4::A))-> void {
    test4::A::self[pre](self);
    test4::A::self[post](self)
}
frame : test4::main ()-> void {
    let mut a : mut &(mut test4::A) = test4::A::self(new);
    test4::A::foo(a:, (test4::A::foo(a) + 9));
    <unit-value>
}
