frame :[pre] test8::A::self (mut self : mut &(mut test8::A))-> void {
    <unit-value>
}
frame :[post] test8::A::self (mut self : mut &(mut test8::A))-> void {
    <unit-value>
}
frame : test8::A::self (mut self : mut &(mut test8::A))-> void {
    test8::A::self[pre](self);
    test8::A::self[post](self)
}
frame : test8::B::foo (self : &(test8::B))-> void {
    throw test8::ErrorB::self(new);
    <unit-value>
}
frame :[pre] test8::B::self (mut self : mut &(mut test8::B))-> void {
    test8::A::self[pre](self);
    {
        <unit-value>
    }
}
frame :[post] test8::B::self (mut self : mut &(mut test8::B))-> void {
    test8::A::self[post](self);
    {
        <unit-value>
    }
}
frame : test8::B::self (mut self : mut &(mut test8::B))-> void {
    test8::B::self[pre](self);
    test8::B::self[post](self)
}
frame :[pre] test8::Error::self (mut self : mut &(mut test8::Error))-> void {
    core::exception::Exception::self[pre](self);
    {
        <unit-value>
    }
}
frame :[post] test8::Error::self (mut self : mut &(mut test8::Error))-> void {
    core::exception::Exception::self[post](self);
    {
        <unit-value>
    }
}
frame : test8::Error::self (mut self : mut &(mut test8::Error))-> void {
    test8::Error::self[pre](self);
    test8::Error::self[post](self)
}
frame :[pre] test8::ErrorB::self (mut self : mut &(mut test8::ErrorB))-> void {
    test8::Error::self[pre](self);
    {
        <unit-value>
    }
}
frame :[post] test8::ErrorB::self (mut self : mut &(mut test8::ErrorB))-> void {
    test8::Error::self[post](self);
    {
        <unit-value>
    }
}
frame : test8::ErrorB::self (mut self : mut &(mut test8::ErrorB))-> void {
    test8::ErrorB::self[pre](self);
    test8::ErrorB::self[post](self)
}
