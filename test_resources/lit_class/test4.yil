pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_3 (closure-> P_1, func-> P_1);
tuple T_8 (#_vtable-> P_2, #_monitor-> P_1);
pointer P_9 *(T_8);
tuple T_10 (len-> u64, ptr-> P_2, blk_info-> P_1);
pointer P_11 *(u8);
tuple T_12 (len-> u64, ptr-> P_11, blk_info-> P_1);
tuple T_13 (#_vtable-> P_2, #_monitor-> P_1, trace-> T_10, msg-> T_12);
pointer P_14 *(T_13);
array A_15 [u8 ; 34];
array A_16 [u8 ; 14];
array A_17 [P_1 ; 3];
tuple T_18 (len-> u64, ptr-> P_1, blk_info-> P_1);
array A_19 [u8 ; 9];
tuple T_20 (typeid-> u32, size-> u64, inner-> T_18, name-> T_12);
const :  _Y5test41ATI (typeid-> 13, size-> 16, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 8, ptr-> "test4::A", blk_info-> 0))
const :  _Y5test41AVT [&_Y5test41ATI, 0, &_Y5test41A3fooMTP85test41AZv]
frame :  _Y5test41A3fooMTP85test41AZv (let self : P_9)-> void {
    try {
        __self_2 = _yrt_alloc_class(&_Y4core9exception9assertion11AssertErrorVT);
        _Y4core9exception9assertion11AssertError4selfCTxP39x4core9exception9assertion11AssertErrorS2c8Zv(__self_2, (len-> 0, ptr-> 0, blk_info-> 0));
        YI_1 = __self_2;
        YI_2 = "test_resources/lit_class/test4.yr";
        YI_3 = "test4::A::foo";
        _yrt_exc_throw(YI_2, YI_3, 4, YI_1);
    }
    catch{
        #_catch = _yrt_exc_begin_catch (ephtr (0));
    #IF 1
    #THEN_GOTO then(#1)
    #ELSE_GOTO else(#3);
    #LABEL then(#1);
        YI_4 = 1;
    #GOTO end(#2);
    #LABEL else(#3);
        YI_4 = 1;
    #LABEL end(#2);
    #IF YI_4
    #THEN_GOTO then(#4)
    #ELSE_GOTO else(#6);
    #LABEL then(#4);
        _ = #_catch;
        YI_5 = 1;
        YI_6 = YI_5;
    #GOTO end(#5);
    #LABEL else(#6);
        YI_6 = YI_4;
    #LABEL end(#5);
    #IF YI_6
    #THEN_GOTO then(#7)
    #ELSE_GOTO end(#8);
    #LABEL then(#7);
    #LABEL end(#8);
    };
}
frame :  _Y5test41A4selfCTxP9x5test41AZv (let self : P_9)-> void {
}
frame :  _Y5test44mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y5test41AVT);
    _Y5test41A4selfCTxP9x5test41AZv(__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = cast!{P_9} (a)-> #_vtable;
    YI_3 = YI_2 + 16;
    YI_4 = (closure-> a, func-> *YI_3);
    z = YI_4;
    (*z.func)(z.closure);
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test44mainFZv);
    return 0;
}
