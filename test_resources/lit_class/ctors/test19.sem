frame :[pre] test19::A::self (mut self : mut &(mut test19::A), x : i32)-> void {
    <unit-value>
}
frame :[post] test19::A::self (mut self : mut &(mut test19::A), x : i32)-> void {
    <unit-value>
}
frame : test19::A::self (mut self : mut &(mut test19::A), x : i32)-> void {
    test19::A::self[pre](self, x);
    test19::A::self[post](self, x)
}
frame :[pre] test19::B::self (mut self : mut &(mut test19::B))-> void {
    test19::A::self[pre](self, test19::foo ());
    {
        <unit-value>
    }
}
frame :[post] test19::B::self (mut self : mut &(mut test19::B))-> void {
    test19::A::self[post](self, test19::foo ());
    {
        throw test19::Z::self(new);
        <unit-value>
    }
}
frame : test19::B::self (mut self : mut &(mut test19::B))-> void {
    test19::B::self[pre](self);
    test19::B::self[post](self)
}
frame :[pre] test19::Z::self (mut self : mut &(mut test19::Z))-> void {
    core::exception::Exception::self[pre](self);
    {
        <unit-value>
    }
}
frame :[post] test19::Z::self (mut self : mut &(mut test19::Z))-> void {
    core::exception::Exception::self[post](self);
    {
        <unit-value>
    }
}
frame : test19::Z::self (mut self : mut &(mut test19::Z))-> void {
    test19::Z::self[pre](self);
    test19::Z::self[post](self)
}
