frame :[pre] test12::A::self (mut self : mut &(mut test12::A), a : &(test12::B) = test12::B::self(new, test12::A::self(new, test12::B::self(new, test12::A::self(new)))))-> void {
    <unit-value>
}
frame :[pre] test12::A::self (mut self : mut &(mut test12::A))-> void {
    <unit-value>
}
frame :[post] test12::A::self (mut self : mut &(mut test12::A), a : &(test12::B) = test12::B::self(new, test12::A::self(new, test12::B::self(new, test12::A::self(new)))))-> void {
    <unit-value>
}
frame :[post] test12::A::self (mut self : mut &(mut test12::A))-> void {
    <unit-value>
}
frame : test12::A::self (mut self : mut &(mut test12::A), a : &(test12::B) = test12::B::self(new, test12::A::self(new, test12::B::self(new, test12::A::self(new)))))-> void {
    test12::A::self[pre](self, a);
    test12::A::self[post](self, a)
}
frame : test12::A::self (mut self : mut &(mut test12::A))-> void {
    test12::A::self[pre](self);
    test12::A::self[post](self)
}
frame :[pre] test12::B::self (mut self : mut &(mut test12::B), b : &(test12::A) = test12::A::self(new, test12::B::self(new, test12::A::self(new))))-> void {
    <unit-value>
}
frame :[post] test12::B::self (mut self : mut &(mut test12::B), b : &(test12::A) = test12::A::self(new, test12::B::self(new, test12::A::self(new))))-> void {
    <unit-value>
}
frame : test12::B::self (mut self : mut &(mut test12::B), b : &(test12::A) = test12::A::self(new, test12::B::self(new, test12::A::self(new))))-> void {
    test12::B::self[pre](self, b);
    test12::B::self[post](self, b)
}
