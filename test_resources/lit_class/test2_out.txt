frame : test2::baz ()-> void {
    let c : test2::C = test2::C::self(new);
    "test2::C"s8;
    TI[11u32,1us,{.len = 0us, .ptr = null},"test2::C"s8];
    TI[11u32,1us,{.len = 0us, .ptr = null},"test2::C"s8];
    <unit-value>
}
frame : test2::bar ()-> void {
    let b : &(test2::B) = test2::B::self(new);
    typeinfo (b).name;
    typeinfo (b);
    typeinfo (b);
    <unit-value>
}
frame : test2::A::self (mut ref self : mut test2::A)-> void {
    {
        <unit-value>
    }
}
frame : test2::B::self (mut self : mut &(mut test2::B))-> void {
    {
        <unit-value>
    }
}
frame : test2::foo ()-> void {
    let a : test2::A = test2::A::self(new);
    "test2::A"s8;
    TI[11u32,0us,{.len = 0us, .ptr = null},"test2::A"s8];
    TI[11u32,0us,{.len = 0us, .ptr = null},"test2::A"s8];
    <unit-value>
}
frame : test2::C::self (mut ref self : mut test2::C)-> void {
    {
        <unit-value>
    }
}
