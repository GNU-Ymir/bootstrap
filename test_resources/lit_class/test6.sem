frame : test6::A::self (mut self : mut &(mut test6::A))-> void {
    {
        {
            self.x = 0
        }
    };
    {
        <unit-value>
    }
}
frame : test6::B::self (mut self : mut &(mut test6::B))-> void {
    {
        test6::A::self(self)
    };
    {
        <unit-value>
    }
}
frame : test6::C::self (mut self : mut &(mut test6::C))-> void {
    {
        test6::B::self(self)
    };
    {
        <unit-value>
    }
}
frame : [weak] test6::bar!{&(test6::A)}::bar (a : &(test6::A))-> void {
    let __ig__ : [c8] = "&(test6::A)"s8;
    let __ig2__ : [c8] = typeinfo (a).name;
    <unit-value>
}
frame : [weak] test6::foo!{&(test6::A)}::foo (a : &(test6::A))-> void {
    test6::bar!{&(test6::A)}::bar (a);
    <unit-value>
}
frame : test6::main ()-> void {
    let mut a : mut &(mut test6::A) = cast!{mut &(mut test6::A)}(test6::C::self(new));
    test6::foo!{&(test6::A)}::foo (a);
    a.x = 9;
    <unit-value>
}
