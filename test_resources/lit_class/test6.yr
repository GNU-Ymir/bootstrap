class A {
    pub let mut x : i32 = 0;
    pub self () {}
}

class B over A {
    pub self () {}
}

class C over B {
    pub self () {}
}

fn bar {T} (a : T) {
    let __ig__ = T::typeid;
    let __ig2__ = a.__typeinfo__.name;
}

fn foo {T} (a : T) {
    bar!{__pragma!root_super (T)} (a);
}

fn main () {
    let dmut a : __pragma!super (&B) = copy C ();
    foo (a);

    a.x = 9;
}
