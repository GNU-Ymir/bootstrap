frame : [weak] core::range::step_by!{u32, i32}::step_by (x : (..u32), s : i32)-> (..u32) {
    let mut z : mut (..mut u32) = x;
    let step : i32 = cast!{i32}(s);
    let zero : i32 = cast!{i32}(0);
    if (((z.fst > z.scd) && (step > zero)) || ((z.fst < z.scd) && (step < zero))) {
        z.step = -step;
        <unit-value>
    } else {
        z.step = step;
        <unit-value>
    };
    return z;
    <unit-value>
}
frame : test1::main ()-> void {
    let a : (..u32) = core::range::step_by!{u32, i32}::step_by ((2147483747u32 ..[true] 2147483657u32).step_by (-1), -10);
    {
        let #_range : (..u32) = a;
        let i : u32 = #_range.fst;
        while if (#_range.step < 0) if #_range.contain (i >= #_range.scd) else (i > #_range.scd) else if #_range.contain (i <= #_range.scd) else (i < #_range.scd) {
            {
                i;
                <unit-value>
            };
            i = (i + cast!{u32}(#_range.step))
        }
    }
}
