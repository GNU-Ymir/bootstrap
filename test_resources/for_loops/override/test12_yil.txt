const :  _Y6test121ATI (typeid-> 11, size-> 24, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 9, ptr-> "test12::A", blk_info-> 0))
const :  _Y6test129CIteratorVT [&_Y6test129CIteratorTI, 0, &_Y4impl4nextMTxP18x6test129CIteratorZv, &_Y6test129CIterator8opEqualsMTP176test129CIteratorusizeZb]
const :  _Y6test129CIteratorTI (typeid-> 13, size-> 48, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 17, ptr-> "test12::CIterator", blk_info-> 0))
frame :  _Y6test123bazFi32Zv (let _ : i32)-> void {
}
frame :  [weak] _Y6test129CIterator3getNi3_0usNi3_1usMTxP18x6test129CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)))-> i32 {
    YI_1 = self-> _x.len <= self-> _index;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/for_loops/override/test12.yr";
    YI_3 = "test12::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_2, YI_3, 36);
#LABEL end(#2);
    YI_4 = 4 * self-> _index;
    YI_5 = self-> _x.ptr + YI_4;
    YI_6 = cast!{*(i32)} (YI_5);
    YI_7 = *YI_6;
    return YI_7;
}
frame :  _Y6test124mainFZv ()-> void {
    _Y6test121A4selfCTRx96test121AZv(&__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = _Y6test121A6valuesMTR96test121AZS3i32(&a);
    YI_3 = _Y6test121A5beginMTR96test121AZxP18x6test129CIterator(&a);
    #_iter = YI_3;
    YI_4 = _Y6test121A3endMTR96test121AZusize(&a);
    #_end = YI_4;
#GOTO test(#3);
#LABEL beg(#2);
    YI_5 = _Y6test129CIterator3getNi3_0usNi3_1usMTxP18x6test129CIteratorZi32(#_iter);
    i = YI_5;
    _Y6test123bazFi32Zv(i);
    YI_6 = #_iter;
    YI_7 = YI_6-> #_vtable;
    YI_8 = YI_7 + 16;
    (**YI_8)(#_iter);
#LABEL test(#3);
    YI_9 = #_iter;
    YI_10 = YI_9-> #_vtable;
    YI_11 = YI_10 + 24;
    YI_12 = (**YI_11)(#_iter, #_end);
#IF ! YI_12
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test124mainFZv);
    return 0;
}
frame :  _Y6test121A5beginMTR96test121AZxP18x6test129CIterator (let self : *((_items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)) {
    __self_2 = _yrt_alloc_class(&_Y6test129CIteratorVT);
    _Y6test129CIterator4selfCTxP18x6test129CIteratorusizeS3i32Zv(__self_2, 0, self-> _items);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y6test121A3endMTR96test121AZusize (let self : *((_items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test121A6valuesMTR96test121AZS3i32 (let self : *((_items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> (len-> u64, ptr-> *(i32), blk_info-> *(void)) {
    return self-> _items;
}
frame :  _Y6test121A4selfCTRx96test121AZv (let self : *((_items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    self-> _items = YI_5;
}
frame :  _Y4impl4nextMTxP18x6test129CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)))-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y6test129CIterator8opEqualsMTP176test129CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)), let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  _Y6test129CIterator4selfCTxP18x6test129CIteratorusizeS3i32Zv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)), let index : u64, let x : (len-> u64, ptr-> *(i32), blk_info-> *(void)))-> void {
    self-> _index = index;
    self-> _x = x;
}
