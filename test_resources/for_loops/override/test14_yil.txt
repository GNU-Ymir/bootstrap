const :  _Y6test141ATI (typeid-> 11, size-> 16, inner-> (len-> 0, ptr-> 0), name-> (len-> 9, ptr-> "test14::A"))
const :  _Y6test149CIteratorVT [&_Y6test149CIteratorTI, 0, &_Y4impl4nextMTxP18x6test149CIteratorZv, &_Y6test149CIterator8opEqualsMTP176test149CIteratorusizeZb]
const :  _Y6test149CIteratorTI (typeid-> 13, size-> 40, inner-> (len-> 0, ptr-> 0), name-> (len-> 17, ptr-> "test14::CIterator"))
frame :  _Y6test143bazFi32Zv (let _ : i32)-> void {
}
frame :  _Y6test147exitingFZv ()-> void {
}
frame :  _Y6test143endFZv ()-> void {
}
frame :  _Y6test146caughtFZv ()-> void {
}
frame :  [weak] _Y6test149CIterator3getNi3_0usNi3_1usMTxP18x6test149CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)))-> i32 {
    let YI_2 : u8;
    let YI_3 : *(u8);
    let YI_4 : *(u8);
    let YI_5 : u64;
    let YI_6 : u64;
    let YI_7 : *(i32);
    let YI_8 : i32;
    YI_2 = self-> _x.len <= self-> _index;
#IF YI_2
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_3 = "test_resources/for_loops/override/test14.yr";
    YI_4 = "test14::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_3, YI_4, 44);
#LABEL end(#2);
    YI_5 = 4 * self-> _index;
    YI_6 = self-> _x.ptr + YI_5;
    YI_7 = cast!{*(i32)} (YI_6);
    YI_8 = *YI_7;
    return YI_8;
}
frame :  _Y6test144mainFZv ()-> void {
    try {
        try {
            try {
                let __self_1 : (_items-> (len-> u64, ptr-> *(i32)));
                let YI_2 : (_items-> (len-> u64, ptr-> *(i32)));
                let a : (_items-> (len-> u64, ptr-> *(i32)));
                let YI_4 : (len-> u64, ptr-> *(i32));
                let YI_5 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
                let #_iter : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
                let YI_7 : u64;
                let #_end : u64;
                let YI_13 : i32;
                let i : i32;
                let YI_15 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
                let YI_16 : *(*(void));
                let YI_17 : *(*(void));
                let YI_9 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
                let YI_10 : *(*(void));
                let YI_11 : *(*(void));
                let YI_12 : u8;
                let __self_18 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void))), msg-> (len-> u64, ptr-> *(u8))));
                let YI_19 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void))), msg-> (len-> u64, ptr-> *(u8))));
                let YI_20 : *(u8);
                let YI_21 : *(u8);
                _Y6test141A4selfCTRx96test141AZv(&__self_1);
                YI_2 = __self_1;
                a = YI_2;
                YI_4 = _Y6test141A6valuesMTR96test141AZS3i32(&a);
                YI_5 = _Y6test141A5beginMTR96test141AZxP18x6test149CIterator(&a);
                #_iter = YI_5;
                YI_7 = _Y6test141A3endMTR96test141AZusize(&a);
                #_end = YI_7;
            #GOTO test(#3);
            #LABEL beg(#2);
                YI_13 = _Y6test149CIterator3getNi3_0usNi3_1usMTxP18x6test149CIteratorZi32(#_iter);
                i = YI_13;
                _Y6test143bazFi32Zv(i);
                YI_15 = #_iter;
                YI_16 = YI_15-> #_vtable;
                YI_17 = YI_16 + 16;
                (**YI_17)(#_iter);
            #LABEL test(#3);
                YI_9 = #_iter;
                YI_10 = YI_9-> #_vtable;
                YI_11 = YI_10 + 24;
                YI_12 = (**YI_11)(#_iter, #_end);
            #IF ! YI_12
            #THEN_GOTO beg(#2)
            #ELSE_GOTO end(#1);
            #LABEL end(#1);
                __self_18 = _yrt_alloc_class(&_Y4core9exception11AssertErrorVT);
                _Y4core9exception11AssertError4selfCTxP29x4core9exception11AssertErrorS2c8Zv(__self_18, (len-> 0, ptr-> 0));
                YI_19 = __self_18;
                YI_20 = "test_resources/for_loops/override/test14.yr";
                YI_21 = "test14::main";
                _yrt_exc_throw(YI_20, YI_21, 69, YI_19);
            }
            finally{
                _Y6test141A6__dtorDTRx96test141AZv(&a);
            };
        }
        finally{
            _Y6test147exitingFZv();
        };
    }
    catch{
        let #_catch : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void))), msg-> (len-> u64, ptr-> *(u8))));
        let YI_23 : u8;
        let YI_26 : u8;
        let _ : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void))), msg-> (len-> u64, ptr-> *(u8))));
        let YI_25 : u8;
        #_catch = _yrt_exc_begin_catch (ephtr (0));
    #IF 1
    #THEN_GOTO then(#4)
    #ELSE_GOTO else(#6);
    #LABEL then(#4);
        YI_23 = 1;
    #GOTO end(#5);
    #LABEL else(#6);
        YI_23 = 1;
    #LABEL end(#5);
    #IF YI_23
    #THEN_GOTO then(#7)
    #ELSE_GOTO else(#9);
    #LABEL then(#7);
        _ = #_catch;
        YI_25 = 1;
        YI_26 = YI_25;
    #GOTO end(#8);
    #LABEL else(#9);
        YI_26 = YI_23;
    #LABEL end(#8);
    #IF YI_26
    #THEN_GOTO then(#a)
    #ELSE_GOTO end(#b);
    #LABEL then(#a);
        _Y6test146caughtFZv();
    #LABEL end(#b);
    };
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test144mainFZv);
    return 0;
}
frame :  _Y6test141A5beginMTR96test141AZxP18x6test149CIterator (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)) {
    let __self_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    let YI_3 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    __self_2 = _yrt_alloc_class(&_Y6test149CIteratorVT);
    _Y6test149CIterator4selfCTxP18x6test149CIteratorusizeS3i32Zv(__self_2, 0, self-> _items);
    YI_3 = __self_2;
    return YI_3;
}
frame :  _Y6test141A3endMTR96test141AZusize (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test141A6valuesMTR96test141AZS3i32 (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> (len-> u64, ptr-> *(i32)) {
    return self-> _items;
}
frame :  _Y6test141A4selfCTRx96test141AZv (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> void {
    let YI_2 : [i32;3];
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : (len-> u64, ptr-> *(i32));
    let YI_5 : *(void);
    let YI_6 : (len-> u64, ptr-> *(i32));
    YI_2 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_2);
    YI_4 = YI_3;
    YI_5 = _yrt_dup_slice(YI_4.ptr, YI_4.len, 4);
    YI_6 = (len-> YI_4.len, ptr-> YI_5);
    self-> _items = YI_6;
}
frame :  _Y6test141A6__dtorDTRx96test141AZv (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> void {
    _Y6test143endFZv();
}
frame :  _Y4impl4nextMTxP18x6test149CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)))-> void {
    let YI_2 : u64;
    YI_2 = self-> _index + 1;
    self-> _index = YI_2;
}
frame :  _Y6test149CIterator8opEqualsMTP176test149CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)), let o : u64)-> u8 {
    let YI_3 : u8;
    YI_3 = self-> _index == o;
    return YI_3;
}
frame :  _Y6test149CIterator4selfCTxP18x6test149CIteratorusizeS3i32Zv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)), let index : u64, let x : (len-> u64, ptr-> *(i32)))-> void {
    self-> _index = index;
    self-> _x = x;
}
