pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_7 (#_vtable-> P_2, #_monitor-> P_1);
tuple T_8 (#_vtable-> P_2, #_monitor-> P_1, _x-> P_14, _index-> u64);
tuple T_9 (#_vtable-> P_2, #_monitor-> P_1, _items-> T_13);
tuple T_10 (#_vtable-> P_2, #_monitor-> P_1, i-> i32);
pointer P_11 *(T_10);
pointer P_12 *(P_11);
tuple T_13 (len-> u64, ptr-> P_12, blk_info-> P_1);
pointer P_14 *(T_9);
pointer P_15 *(T_8);
array A_16 [P_1 ; 4];
tuple T_17 (len-> u64, ptr-> P_1, blk_info-> P_1);
pointer P_18 *(u8);
tuple T_19 (len-> u64, ptr-> P_18, blk_info-> P_1);
array A_20 [u8 ; 17];
tuple T_21 (typeid-> u32, size-> u64, inner-> T_23, name-> T_19);
pointer P_22 *(T_21);
tuple T_23 (len-> u64, ptr-> P_22, blk_info-> P_1);
array A_24 [P_11 ; 3];
pointer P_25 *(T_13);
array A_26 [P_1 ; 6];
array A_27 [u8 ; 9];
array A_28 [P_1 ; 2];
pointer P_29 *(T_7);
array A_30 [u8 ; 43];
array A_31 [u8 ; 38];
const :  _Y5test61ATI (typeid-> 13, size-> 40, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 8, ptr-> "test6::A", blk_info-> 0))
const :  _Y5test61AVT [&_Y5test61ATI, 0, &_Y5test61A3endMTP85test61AZusize, &_Y5test61A5beginMTP85test61AZxP17x5test69CIterator, &_Y5test61A6valuesMTP85test61AZS10P85test61Z, &_Y5test61A6valuesMTxP9x5test61AZxS12xP9x5test61Z]
const :  _Y5test61ZTI (typeid-> 13, size-> 24, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 8, ptr-> "test6::Z", blk_info-> 0))
const :  _Y5test61ZVT [&_Y5test61ZTI, 0]
const :  _Y5test69CIteratorTI (typeid-> 13, size-> 32, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 16, ptr-> "test6::CIterator", blk_info-> 0))
const :  _Y5test69CIteratorVT [&_Y5test69CIteratorTI, 0, &_Y4impl4nextMTxP17x5test69CIteratorZv, &_Y5test69CIterator8opEqualsMTP165test69CIteratorusizeZb]
frame :  _Y4impl4nextMTxP17x5test69CIteratorZv (let self : P_15)-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y5test61A3endMTP85test61AZusize (let self : P_14)-> u64 {
    return self-> _items.len;
}
frame :  _Y5test61A4selfCTxP9x5test61AZv (let self : P_14)-> void {
    __self_2 = _yrt_alloc_class(&_Y5test61ZVT);
    _Y5test61Z4selfCTxP9x5test61Zi32Zv(__self_2, 1);
    YI_1 = __self_2;
    __self_4 = _yrt_alloc_class(&_Y5test61ZVT);
    _Y5test61Z4selfCTxP9x5test61Zi32Zv(__self_4, 2);
    YI_2 = __self_4;
    __self_6 = _yrt_alloc_class(&_Y5test61ZVT);
    _Y5test61Z4selfCTxP9x5test61Zi32Zv(__self_6, 3);
    YI_3 = __self_6;
    YI_4 = [YI_1, YI_2, YI_3];
    YI_5 = (len-> 3, ptr-> &YI_4, blk_info-> 0);
    YI_6 = YI_5;
    _yrt_dup_slice(&YI_7, &YI_6, 8);
    YI_8 = YI_7;
    self-> _items = YI_8;
}
frame :  _Y5test61A5beginMTP85test61AZxP17x5test69CIterator (let self : P_14)-> P_15 {
    __self_2 = _yrt_alloc_class(&_Y5test69CIteratorVT);
    _Y5test69CIterator4selfCTxP17x5test69CIteratorusizeP85test61AZv(__self_2, 0, self);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y5test61A6valuesMTP85test61AZS10P85test61Z (let self : P_14)-> T_13 {
    return self-> _items;
}
frame :  _Y5test61A6valuesMTxP9x5test61AZxS12xP9x5test61Z (let self : P_14)-> T_13 {
    return self-> _items;
}
frame :  _Y5test61Z4selfCTxP9x5test61Zi32Zv (let self : P_11, let i : i32)-> void {
    self-> i = i;
}
frame :  _Y5test64mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y5test61AVT);
    _Y5test61A4selfCTxP9x5test61AZv(__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = cast!{P_1} (cast!{P_29} (a)-> #_vtable);
    YI_3 = cast!{P_2} (YI_2 + 24);
    YI_4 = *YI_3;
    YI_5 = (*YI_4)(a);
    #_iter = YI_5;
    YI_6 = cast!{P_1} (cast!{P_29} (a)-> #_vtable);
    YI_7 = cast!{P_2} (YI_6 + 16);
    YI_8 = *YI_7;
    YI_9 = (*YI_8)(a);
    #_end = YI_9;
#GOTO test(#3);
#LABEL beg(#2);
    YI_10 = _Y5test69CIterator3getNi3_0usNi3_2usMTP165test69CIteratorZusize(#_iter);
    i = YI_10;
    YI_11 = _Y5test69CIterator3getNi3_1usNi3_2usMTP165test69CIteratorZP85test61Z(#_iter);
    j = YI_11;
    YI_12 = cast!{P_1} (cast!{P_29} (#_iter)-> #_vtable);
    YI_13 = cast!{P_2} (YI_12 + 16);
    YI_14 = *YI_13;
    (*YI_14)(#_iter);
#LABEL test(#3);
    YI_15 = cast!{P_1} (cast!{P_29} (#_iter)-> #_vtable);
    YI_16 = cast!{P_2} (YI_15 + 24);
    YI_17 = *YI_16;
    YI_18 = (*YI_17)(#_iter, #_end);
#IF ! YI_18
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  [weak] _Y5test69CIterator3getNi3_0usNi3_2usMTP165test69CIteratorZusize (let self : P_15)-> u64 {
    return self-> _index;
}
frame :  [weak] _Y5test69CIterator3getNi3_1usNi3_2usMTP165test69CIteratorZP85test61Z (let self : P_15)-> P_11 {
    YI_1 = cast!{P_1} (cast!{P_29} (self-> _x)-> #_vtable);
    YI_2 = cast!{P_2} (YI_1 + 32);
    YI_3 = *YI_2;
    YI_4 = (*YI_3)(self-> _x);
    YI_5 = YI_4.len <= self-> _index;
#IF YI_5
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_6 = "test_resources/for_loops/override/test6.yr";
    YI_7 = "test6::CIterator::get!{1us, 2us}::get";
    _yrt_exc_panic(YI_6, YI_7, 47);
#LABEL end(#2);
    YI_8 = 8 * self-> _index;
    YI_9 = YI_4.ptr + YI_8;
    YI_10 = cast!{P_12} (YI_9);
    YI_11 = *YI_10;
    return YI_11;
}
frame :  _Y5test69CIterator4selfCTxP17x5test69CIteratorusizeP85test61AZv (let self : P_15, let index : u64, let x : P_14)-> void {
    self-> _index = index;
    self-> _x = x;
}
frame :  _Y5test69CIterator8opEqualsMTP165test69CIteratorusizeZb (let self : P_15, let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test64mainFZv);
    return 0;
}
