const :  _Y6test111AVT [&_Y6test111ATI, 0, &_Y6test111A5beginMTP96test111AZxP18x6test119CIterator, &_Y6test111A3endMTP96test111AZusize, &_Y6test111A6valuesMTP96test111AZS3i32]
const :  _Y6test111ATI (typeid-> 13, size-> 32, inner-> (len-> 0, ptr-> 0), name-> (len-> 9, ptr-> "test11::A"))
const :  _Y6test119CIteratorVT [&_Y6test119CIteratorTI, 0, &_Y4impl4nextMTxP18x6test119CIteratorZv, &_Y6test119CIterator8opEqualsMTP176test119CIteratorusizeZb]
const :  _Y6test119CIteratorTI (typeid-> 13, size-> 32, inner-> (len-> 0, ptr-> 0), name-> (len-> 17, ptr-> "test11::CIterator"))
frame :  _Y6test113bazFi32Zv (let _ : i32)-> void {
}
frame :  [weak] _Y6test119CIterator3getNi3_0usNi3_1usMTxP18x6test119CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)))-> i32 {
    let YI_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_3 : *(*(void));
    let YI_4 : *(*(void));
    let YI_5 : (len-> u64, ptr-> *(i32));
    let YI_6 : u8;
    let YI_7 : *(u8);
    let YI_8 : *(u8);
    let YI_9 : u64;
    let YI_10 : u64;
    let YI_11 : *(i32);
    let YI_12 : i32;
    YI_2 = self-> _x;
    YI_3 = YI_2-> #_vtable;
    YI_4 = YI_3 + 32;
    YI_5 = (**YI_4)(self-> _x);
    YI_6 = YI_5.len <= self-> _index;
#IF YI_6
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_7 = "test_resources/for_loops/override/test11.yr";
    YI_8 = "test11::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_7, YI_8, 36);
#LABEL end(#2);
    YI_9 = 4 * self-> _index;
    YI_10 = YI_5.ptr + YI_9;
    YI_11 = cast!{*(i32)} (YI_10);
    YI_12 = *YI_11;
    return YI_12;
}
frame :  _Y6test114mainFZv ()-> void {
    let __self_1 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let a : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_4 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_5 : *(*(void));
    let YI_6 : *(*(void));
    let YI_7 : (len-> u64, ptr-> *(i32));
    let YI_8 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_9 : *(*(void));
    let YI_10 : *(*(void));
    let YI_11 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let #_iter : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_13 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_14 : *(*(void));
    let YI_15 : *(*(void));
    let YI_16 : u64;
    let #_end : u64;
    let YI_22 : i32;
    let i : i32;
    let YI_24 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_25 : *(*(void));
    let YI_26 : *(*(void));
    let YI_18 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_19 : *(*(void));
    let YI_20 : *(*(void));
    let YI_21 : u8;
    __self_1 = _yrt_alloc_class(&_Y6test111AVT);
    _Y6test111A4selfCTxP10x6test111AZv(__self_1);
    YI_2 = __self_1;
    a = YI_2;
    YI_4 = a;
    YI_5 = YI_4-> #_vtable;
    YI_6 = YI_5 + 32;
    YI_7 = (**YI_6)(a);
    YI_8 = a;
    YI_9 = YI_8-> #_vtable;
    YI_10 = YI_9 + 16;
    YI_11 = (**YI_10)(a);
    #_iter = YI_11;
    YI_13 = a;
    YI_14 = YI_13-> #_vtable;
    YI_15 = YI_14 + 24;
    YI_16 = (**YI_15)(a);
    #_end = YI_16;
#GOTO test(#3);
#LABEL beg(#2);
    YI_22 = _Y6test119CIterator3getNi3_0usNi3_1usMTxP18x6test119CIteratorZi32(#_iter);
    i = YI_22;
    _Y6test113bazFi32Zv(i);
    YI_24 = #_iter;
    YI_25 = YI_24-> #_vtable;
    YI_26 = YI_25 + 16;
    (**YI_26)(#_iter);
#LABEL test(#3);
    YI_18 = #_iter;
    YI_19 = YI_18-> #_vtable;
    YI_20 = YI_19 + 24;
    YI_21 = (**YI_20)(#_iter, #_end);
#IF ! YI_21
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test114mainFZv);
    return 0;
}
frame :  _Y6test111A5beginMTP96test111AZxP18x6test119CIterator (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)) {
    let __self_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_3 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    __self_2 = _yrt_alloc_class(&_Y6test119CIteratorVT);
    _Y6test119CIterator4selfCTxP18x6test119CIteratorusizeP96test111AZv(__self_2, 0, self);
    YI_3 = __self_2;
    return YI_3;
}
frame :  _Y6test111A3endMTP96test111AZusize (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test111A6valuesMTP96test111AZS3i32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> (len-> u64, ptr-> *(i32)) {
    return self-> _items;
}
frame :  _Y6test111A4selfCTxP10x6test111AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> void {
    let YI_2 : [i32;3];
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : (len-> u64, ptr-> *(i32));
    let YI_5 : *(void);
    let YI_6 : (len-> u64, ptr-> *(i32));
    YI_2 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_2);
    YI_4 = YI_3;
    YI_5 = _yrt_dup_slice(YI_4.ptr, YI_4.len, 4);
    YI_6 = (len-> YI_4.len, ptr-> YI_5);
    self-> _items = YI_6;
}
frame :  _Y4impl4nextMTxP18x6test119CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)))-> void {
    let YI_2 : u64;
    YI_2 = self-> _index + 1;
    self-> _index = YI_2;
}
frame :  _Y6test119CIterator8opEqualsMTP176test119CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)), let o : u64)-> u8 {
    let YI_3 : u8;
    YI_3 = self-> _index == o;
    return YI_3;
}
frame :  _Y6test119CIterator4selfCTxP18x6test119CIteratorusizeP96test111AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)), let index : u64, let x : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> void {
    self-> _index = index;
    self-> _x = x;
}
