pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_7 (#_vtable-> P_2, #_monitor-> P_1);
tuple T_8 (_items-> T_10);
pointer P_9 *(i32);
tuple T_10 (len-> u64, ptr-> P_9, blk_info-> P_1);
pointer P_11 *(T_8);
array A_12 [i32 ; 3];
pointer P_13 *(T_10);
tuple T_14 (#_vtable-> P_2, #_monitor-> P_1, _x-> T_10, _index-> u64);
pointer P_15 *(T_14);
tuple T_16 (len-> u64, ptr-> P_1, blk_info-> P_1);
pointer P_17 *(u8);
tuple T_18 (len-> u64, ptr-> P_17, blk_info-> P_1);
array A_19 [u8 ; 10];
tuple T_20 (typeid-> u32, size-> u64, inner-> T_22, name-> T_18);
pointer P_21 *(T_20);
tuple T_22 (len-> u64, ptr-> P_21, blk_info-> P_1);
array A_23 [P_1 ; 4];
array A_24 [u8 ; 18];
array A_25 [u8 ; 44];
array A_26 [u8 ; 39];
pointer P_27 *(T_7);
const :  _Y6test101ATI (typeid-> 11, size-> 24, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 9, ptr-> "test10::A", blk_info-> 0))
const :  _Y6test109CIteratorTI (typeid-> 13, size-> 48, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 17, ptr-> "test10::CIterator", blk_info-> 0))
const :  _Y6test109CIteratorVT [&_Y6test109CIteratorTI, 0, &_Y4impl4nextMTxP18x6test109CIteratorZv, &_Y6test109CIterator8opEqualsMTP176test109CIteratorusizeZb]
frame :  _Y4impl4nextMTxP18x6test109CIteratorZv (let self : P_15)-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y6test101A3endMTR96test101AZusize (let self : P_11)-> u64 {
    return self-> _items.len;
}
frame :  _Y6test101A4selfCTRx96test101AZv (let self : P_11)-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    self-> _items = YI_5;
}
frame :  _Y6test101A5beginMTR96test101AZxP18x6test109CIterator (let self : P_11)-> P_15 {
    __self_2 = _yrt_alloc_class(&_Y6test109CIteratorVT);
    _Y6test109CIterator4selfCTxP18x6test109CIteratorusizeS3i32Zv(__self_2, 0, self-> _items);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y6test101A6valuesMTR96test101AZS3i32 (let self : P_11)-> T_10 {
    return self-> _items;
}
frame :  _Y6test103bazFi32Zv (let _ : i32)-> void {
}
frame :  _Y6test104mainFZv ()-> void {
    _Y6test101A4selfCTRx96test101AZv(&__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = _Y6test101A6valuesMTR96test101AZS3i32(&a);
    YI_3 = _Y6test101A5beginMTR96test101AZxP18x6test109CIterator(&a);
    #_iter = YI_3;
    YI_4 = _Y6test101A3endMTR96test101AZusize(&a);
    #_end = YI_4;
#GOTO test(#3);
#LABEL beg(#2);
    YI_5 = _Y6test109CIterator3getNi3_0usNi3_1usMTxP18x6test109CIteratorZi32(#_iter);
    i = YI_5;
    _Y6test103bazFi32Zv(i);
    YI_6 = cast!{P_1} (cast!{P_27} (#_iter)-> #_vtable);
    YI_7 = cast!{P_2} (YI_6 + 16);
    YI_8 = *YI_7;
    (*YI_8)(#_iter);
#LABEL test(#3);
    YI_9 = cast!{P_1} (cast!{P_27} (#_iter)-> #_vtable);
    YI_10 = cast!{P_2} (YI_9 + 24);
    YI_11 = *YI_10;
    YI_12 = (*YI_11)(#_iter, #_end);
#IF ! YI_12
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  [weak] _Y6test109CIterator3getNi3_0usNi3_1usMTxP18x6test109CIteratorZi32 (let self : P_15)-> i32 {
    YI_1 = self-> _x.len <= self-> _index;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/for_loops/override/test10.yr";
    YI_3 = "test10::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_2, YI_3, 36);
#LABEL end(#2);
    YI_4 = 4 * self-> _index;
    YI_5 = self-> _x.ptr + YI_4;
    YI_6 = cast!{P_9} (YI_5);
    YI_7 = *YI_6;
    return YI_7;
}
frame :  _Y6test109CIterator4selfCTxP18x6test109CIteratorusizeS3i32Zv (let self : P_15, let index : u64, let x : T_10)-> void {
    self-> _index = index;
    self-> _x = x;
}
frame :  _Y6test109CIterator8opEqualsMTP176test109CIteratorusizeZb (let self : P_15, let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y6test104mainFZv);
    return 0;
}
