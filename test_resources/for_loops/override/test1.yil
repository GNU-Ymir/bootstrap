pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_7 (#_vtable-> P_2, #_monitor-> P_1);
pointer P_8 *(i32);
tuple T_9 (len-> u64, ptr-> P_8, blk_info-> P_1);
tuple T_10 (#_vtable-> P_2, #_monitor-> P_1, _items-> T_9);
pointer P_11 *(T_10);
array A_12 [i32 ; 3];
pointer P_13 *(T_9);
tuple T_14 (#_vtable-> P_2, #_monitor-> P_1, _x-> P_11, _index-> u64);
pointer P_15 *(T_14);
array A_16 [P_1 ; 5];
tuple T_17 (len-> u64, ptr-> P_1, blk_info-> P_1);
pointer P_18 *(u8);
tuple T_19 (len-> u64, ptr-> P_18, blk_info-> P_1);
array A_20 [u8 ; 9];
tuple T_21 (typeid-> u32, size-> u64, inner-> T_17, name-> T_19);
array A_22 [P_1 ; 4];
array A_23 [u8 ; 17];
pointer P_24 *(T_7);
array A_25 [u8 ; 43];
array A_26 [u8 ; 38];
const :  _Y5test11ATI (typeid-> 13, size-> 40, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 8, ptr-> "test1::A", blk_info-> 0))
const :  _Y5test11AVT [&_Y5test11ATI, 0, &_Y5test11A5beginMTP85test11AZxP17x5test19CIterator, &_Y5test11A3endMTP85test11AZusize, &_Y5test11A6valuesMTP85test11AZS3i32]
const :  _Y5test19CIteratorTI (typeid-> 13, size-> 32, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 16, ptr-> "test1::CIterator", blk_info-> 0))
const :  _Y5test19CIteratorVT [&_Y5test19CIteratorTI, 0, &_Y4impl4nextMTxP17x5test19CIteratorZv, &_Y5test19CIterator8opEqualsMTP165test19CIteratorusizeZb]
frame :  _Y4impl4nextMTxP17x5test19CIteratorZv (let self : P_15)-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y5test11A3endMTP85test11AZusize (let self : P_11)-> u64 {
    return self-> _items.len;
}
frame :  _Y5test11A4selfCTxP9x5test11AZv (let self : P_11)-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    self-> _items = YI_5;
}
frame :  _Y5test11A5beginMTP85test11AZxP17x5test19CIterator (let self : P_11)-> P_15 {
    __self_2 = _yrt_alloc_class(&_Y5test19CIteratorVT);
    _Y5test19CIterator4selfCTxP17x5test19CIteratorusizeP85test11AZv(__self_2, 0, self);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y5test11A6valuesMTP85test11AZS3i32 (let self : P_11)-> T_9 {
    return self-> _items;
}
frame :  _Y5test13bazFi32Zv (let _ : i32)-> void {
}
frame :  _Y5test14mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y5test11AVT);
    _Y5test11A4selfCTxP9x5test11AZv(__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = cast!{P_24} (a)-> #_vtable;
    YI_3 = YI_2 + 32;
    YI_4 = (**YI_3)(a);
    YI_5 = cast!{P_24} (a)-> #_vtable;
    YI_6 = YI_5 + 16;
    YI_7 = (**YI_6)(a);
    #_iter = YI_7;
    YI_8 = cast!{P_24} (a)-> #_vtable;
    YI_9 = YI_8 + 24;
    YI_10 = (**YI_9)(a);
    #_end = YI_10;
#GOTO test(#3);
#LABEL beg(#2);
    YI_11 = _Y5test19CIterator3getNi3_0usNi3_1usMTxP17x5test19CIteratorZi32(#_iter);
    i = YI_11;
    _Y5test13bazFi32Zv(i);
    YI_12 = cast!{P_24} (#_iter)-> #_vtable;
    YI_13 = YI_12 + 16;
    (**YI_13)(#_iter);
#LABEL test(#3);
    YI_14 = cast!{P_24} (#_iter)-> #_vtable;
    YI_15 = YI_14 + 24;
    YI_16 = (**YI_15)(#_iter, #_end);
#IF ! YI_16
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  [weak] _Y5test19CIterator3getNi3_0usNi3_1usMTxP17x5test19CIteratorZi32 (let self : P_15)-> i32 {
    YI_1 = cast!{P_24} (self-> _x)-> #_vtable;
    YI_2 = YI_1 + 32;
    YI_3 = (**YI_2)(self-> _x);
    YI_4 = YI_3.len <= self-> _index;
#IF YI_4
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_5 = "test_resources/for_loops/override/test1.yr";
    YI_6 = "test1::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_5, YI_6, 34);
#LABEL end(#2);
    YI_7 = 4 * self-> _index;
    YI_8 = YI_3.ptr + YI_7;
    YI_9 = cast!{P_8} (YI_8);
    YI_10 = *YI_9;
    return YI_10;
}
frame :  _Y5test19CIterator4selfCTxP17x5test19CIteratorusizeP85test11AZv (let self : P_15, let index : u64, let x : P_11)-> void {
    self-> _index = index;
    self-> _x = x;
}
frame :  _Y5test19CIterator8opEqualsMTP165test19CIteratorusizeZb (let self : P_15, let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test14mainFZv);
    return 0;
}
