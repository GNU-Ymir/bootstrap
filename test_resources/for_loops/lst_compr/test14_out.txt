frame : test14::main ()-> void {
    let mut a : mut [mut i32] = copy ({.len = 3us, .ptr = &([1, 2, 3])});
    let _ : (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) = {
            let mut #_iter : usize = 0us;
            (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
        };
    let _ : (i32, i32, i32) = {
            let #_value : [i32] = {.len = 3us, .ptr = &([1, 2, 3])};
            {
                let #_iter : usize = 0us;
                ({
                        #_iter = 0us;
                        let i : i32 = #_value [#_iter];
                        i
                    }, {
                        #_iter = 1us;
                        let i : i32 = #_value [#_iter];
                        i
                    }, {
                        #_iter = 2us;
                        let i : i32 = #_value [#_iter];
                        i
                    })
            }
        };
    let _ : (i32, i32, i32) = {
            let #_value : mut [mut i32] = #{
                    if (a.len < 3) panic;
                    {.len = 3us, .ptr = (a.ptr + (0us * 4us))}
                #};
            {
                let #_iter : usize = 0us;
                ({
                        #_iter = 0us;
                        let i : i32 = #_value [#_iter];
                        i
                    }, {
                        #_iter = 1us;
                        let i : i32 = #_value [#_iter];
                        i
                    }, {
                        #_iter = 2us;
                        let i : i32 = #_value [#_iter];
                        i
                    })
            }
        };
    let _ : (i32, i32, i32) = ({
                let i : i32 = 1;
                i
            }, {
                let i : i32 = 2;
                i
            }, {
                let i : i32 = 3;
                i
            });
    <unit-value>
}
