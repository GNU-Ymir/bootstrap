frame :  _Y6test114mainFZv ()-> void {
    let YI_1 : [i32;3];
    let YI_2 : (len-> u64, ptr-> *(i32));
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : *(void);
    let YI_5 : (len-> u64, ptr-> *(i32));
    let YI_6 : [(len-> u64, ptr-> *(i32));1];
    let YI_7 : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let YI_8 : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let YI_9 : *(void);
    let YI_10 : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let a : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let #_value : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let YI_13 : *(void);
    let YI_14 : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let #_value : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let i : u64;
    let YI_18 : u64;
    let YI_19 : u64;
    let YI_20 : *((len-> u64, ptr-> *(i32)));
    let _ : (len-> u64, ptr-> *(i32));
    let YI_22 : u64;
    let YI_23 : u64;
    let YI_24 : *((len-> u64, ptr-> *(i32)));
    let YI_25 : u8;
    let YI_26 : *(u8);
    let YI_27 : *(u8);
    let YI_28 : u64;
    let YI_29 : u64;
    let YI_30 : *((len-> u64, ptr-> *(i32)));
    let YI_31 : (len-> u64, ptr-> *(i32));
    let YI_32 : u64;
    let YI_17 : u8;
    let YI_33 : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    let _ : (len-> u64, ptr-> *((len-> u64, ptr-> *(i32))));
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1);
    YI_3 = YI_2;
    YI_4 = _yrt_dup_slice(YI_3.ptr, YI_3.len, 4);
    YI_5 = (len-> YI_3.len, ptr-> YI_4);
    YI_6 = [YI_5];
    YI_7 = (len-> 1, ptr-> &YI_6);
    YI_8 = YI_7;
    YI_9 = _yrt_dup_slice(YI_8.ptr, YI_8.len, 16);
    YI_10 = (len-> YI_8.len, ptr-> YI_9);
    a = YI_10;
    #_value = a;
    YI_13 = _yrt_alloc_array_no_set(a.len, 16);
    YI_14 = (len-> a.len, ptr-> YI_13);
    #_value = YI_14;
    i = 0;
#GOTO test(#5);
#LABEL beg(#4);
    YI_18 = 16 * i;
    YI_19 = #_value.ptr + YI_18;
    YI_20 = cast!{*((len-> u64, ptr-> *(i32)))} (YI_19);
    _ = *YI_20;
    YI_22 = 16 * i;
    YI_23 = #_value.ptr + YI_22;
    YI_24 = cast!{*((len-> u64, ptr-> *(i32)))} (YI_23);
    YI_25 = a.len <= i;
#IF YI_25
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_26 = "test_resources/for_loops/lst_compr/test11.yr";
    YI_27 = "test11::main";
    _yrt_exc_panic(YI_26, YI_27, 3);
#LABEL end(#3);
    YI_28 = 16 * i;
    YI_29 = a.ptr + YI_28;
    YI_30 = cast!{*((len-> u64, ptr-> *(i32)))} (YI_29);
    YI_31 = *YI_30;
    *YI_24 = YI_31;
    YI_32 = i + 1;
    i = YI_32;
#LABEL test(#5);
    YI_17 = i < a.len;
#IF YI_17
#THEN_GOTO beg(#4)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_33 = #_value;
    _ = YI_33;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test114mainFZv);
    return 0;
}
