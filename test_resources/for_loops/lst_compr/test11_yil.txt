frame :  _Y6test114mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    YI_6 = [YI_5];
    YI_7 = (len-> 1, ptr-> &YI_6, blk_info-> 0);
    YI_8 = YI_7;
    _yrt_dup_slice(&YI_9, &YI_8, 24);
    YI_10 = YI_9;
    a = YI_10;
    #_value = a;
    _yrt_alloc_slice_no_set(&YI_11, #_value.len, 24);
    YI_12 = YI_11;
    #_value = YI_12;
    i = 0;
#GOTO test(#5);
#LABEL beg(#4);
    YI_13 = 24 * i;
    YI_14 = #_value.ptr + YI_13;
    YI_15 = cast!{*((len-> u64, ptr-> *(i32), blk_info-> *(void)))} (YI_14);
    _ = *YI_15;
    YI_16 = 24 * i;
    YI_17 = #_value.ptr + YI_16;
    YI_18 = cast!{*((len-> u64, ptr-> *(i32), blk_info-> *(void)))} (YI_17);
    YI_19 = a.len <= i;
#IF YI_19
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_20 = "test_resources/for_loops/lst_compr/test11.yr";
    YI_21 = "test11::main";
    _yrt_exc_panic(YI_20, YI_21, 3);
#LABEL end(#3);
    YI_22 = 24 * i;
    YI_23 = a.ptr + YI_22;
    YI_24 = cast!{*((len-> u64, ptr-> *(i32), blk_info-> *(void)))} (YI_23);
    YI_25 = *YI_24;
    *YI_18 = YI_25;
    YI_26 = i + 1;
    i = YI_26;
#LABEL test(#5);
    YI_27 = i < #_value.len;
#IF YI_27
#THEN_GOTO beg(#4)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_28 = #_value;
    _ = YI_28;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test114mainFZv);
    return 0;
}
