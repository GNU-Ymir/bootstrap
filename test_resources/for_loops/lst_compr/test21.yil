pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_8 (#_vtable-> P_2, #_monitor-> P_1);
pointer P_9 *(T_8);
array A_10 [P_1 ; 2];
tuple T_11 (len-> u64, ptr-> P_1, blk_info-> P_1);
pointer P_12 *(u8);
tuple T_13 (len-> u64, ptr-> P_12, blk_info-> P_1);
array A_14 [u8 ; 10];
tuple T_15 (typeid-> u32, size-> u64, inner-> T_17, name-> T_13);
pointer P_16 *(T_15);
tuple T_17 (len-> u64, ptr-> P_16, blk_info-> P_1);
pointer P_18 *(P_9);
tuple T_19 (len-> u64, ptr-> P_18, blk_info-> P_1);
array A_20 [P_9 ; 2];
pointer P_21 *(T_19);
const :  _Y6test211ATI (typeid-> 13, size-> 16, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 9, ptr-> "test21::A", blk_info-> 0))
const :  _Y6test211AVT [&_Y6test211ATI, 0]
frame :  _Y6test211A4selfCTxP10x6test211AZv (let self : P_9)-> void {
}
frame :  _Y6test214mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y6test211AVT);
    _Y6test211A4selfCTxP10x6test211AZv(__self_1);
    YI_1 = __self_1;
    __self_3 = _yrt_alloc_class(&_Y6test211AVT);
    _Y6test211A4selfCTxP10x6test211AZv(__self_3);
    YI_2 = __self_3;
    YI_3 = [YI_1, YI_2];
    YI_4 = (len-> 2, ptr-> &YI_3, blk_info-> 0);
    YI_5 = YI_4;
    _yrt_dup_slice(&YI_6, &YI_5, 8);
    YI_7 = YI_6;
    a = YI_7;
    #_value = a;
    _yrt_alloc_slice_no_set(&YI_8, #_value.len, 8);
    YI_9 = YI_8;
    #_value = YI_9;
    #_iter = 0;
#GOTO test(#3);
#LABEL beg(#2);
    YI_10 = 8 * #_iter;
    YI_11 = #_value.ptr + YI_10;
    YI_12 = cast!{P_18} (YI_11);
    i = *YI_12;
    YI_13 = 8 * #_iter;
    YI_14 = #_value.ptr + YI_13;
    YI_15 = cast!{P_18} (YI_14);
    *YI_15 = i;
    YI_16 = #_iter + 1;
    #_iter = YI_16;
#LABEL test(#3);
    YI_17 = #_iter < #_value.len;
#IF YI_17
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_18 = #_value;
    _b_ = YI_18;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y6test214mainFZv);
    return 0;
}
