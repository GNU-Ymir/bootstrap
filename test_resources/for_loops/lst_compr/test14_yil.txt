frame :  _Y6test144mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    a = YI_5;
    #_iter = 0;
    YI_6 = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9);
    YI_7 = YI_6;
    _ = YI_7;
    YI_8 = [1, 2, 3];
    YI_9 = (len-> 3, ptr-> &YI_8, blk_info-> 0);
    #_value = YI_9;
    #_iter = 0;
    #_iter = 0;
    YI_10 = 4 * #_iter;
    YI_11 = #_value.ptr + YI_10;
    YI_12 = cast!{*(i32)} (YI_11);
    i = *YI_12;
    YI_13 = i;
    #_iter = 1;
    YI_14 = 4 * #_iter;
    YI_15 = #_value.ptr + YI_14;
    YI_16 = cast!{*(i32)} (YI_15);
    i = *YI_16;
    YI_17 = i;
    #_iter = 2;
    YI_18 = 4 * #_iter;
    YI_19 = #_value.ptr + YI_18;
    YI_20 = cast!{*(i32)} (YI_19);
    i = *YI_20;
    YI_21 = i;
    YI_22 = (YI_13, YI_17, YI_21);
    YI_23 = YI_22;
    YI_24 = YI_23;
    _ = YI_24;
    YI_25 = a.len < 3;
#IF YI_25
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_26 = "test_resources/for_loops/lst_compr/test14.yr";
    YI_27 = "test14::main";
    _yrt_exc_panic(YI_26, YI_27, 5);
#LABEL end(#2);
    YI_28 = 0 * 4;
    YI_29 = a.ptr + YI_28;
    YI_30 = (len-> 3, ptr-> YI_29, blk_info-> a.blk_info);
    YI_31 = YI_30;
    #_value = YI_31;
    #_iter = 0;
    #_iter = 0;
    YI_32 = 4 * #_iter;
    YI_33 = #_value.ptr + YI_32;
    YI_34 = cast!{*(i32)} (YI_33);
    i = *YI_34;
    YI_35 = i;
    #_iter = 1;
    YI_36 = 4 * #_iter;
    YI_37 = #_value.ptr + YI_36;
    YI_38 = cast!{*(i32)} (YI_37);
    i = *YI_38;
    YI_39 = i;
    #_iter = 2;
    YI_40 = 4 * #_iter;
    YI_41 = #_value.ptr + YI_40;
    YI_42 = cast!{*(i32)} (YI_41);
    i = *YI_42;
    YI_43 = i;
    YI_44 = (YI_35, YI_39, YI_43);
    YI_45 = YI_44;
    YI_46 = YI_45;
    _ = YI_46;
    i = 1;
    YI_47 = i;
    i = 2;
    YI_48 = i;
    i = 3;
    YI_49 = i;
    YI_50 = (YI_47, YI_48, YI_49);
    _ = YI_50;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test144mainFZv);
    return 0;
}
