frame : test21::A::self (mut self : mut &(mut test21::A))-> void {
    {
        <unit-value>
    }
}
frame : test21::main ()-> void {
    let mut a : mut [mut &(mut test21::A)] = copy ({.len = 2us, .ptr = &([test21::A::self(new), test21::A::self(new)])});
    let mut _b_ : mut [mut &(mut test21::A)] = {
            let #_value : mut [mut &(mut test21::A)] = a;
            let mut #_value : mut [mut &(mut test21::A)] = [<unit-value> ; new #_value.len];
            {
                let #_iter : usize = 0us;
                while (#_iter < #_value.len) {
                    let mut i : mut &(mut test21::A) = alias (#_value [#_iter]);
                    #_value [#_iter] = alias (i);
                    #_iter = (#_iter + 1us)
                }
            };
            #_value
        };
    <unit-value>
}
