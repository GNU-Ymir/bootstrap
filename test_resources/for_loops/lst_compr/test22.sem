frame : test22::A::self (mut self : mut &(mut test22::A))-> void {
    {
        <unit-value>
    }
}
frame : test22::main ()-> void {
    let mut a : mut [mut &(mut test22::A)] = copy ({.len = 2us, .ptr = &([test22::A::self(new), test22::A::self(new)])});
    let mut _b_ : (mut &(mut test22::A), mut &(mut test22::A)) = {
            let #_value : mut [mut &(mut test22::A)] = #{
                    if (a.len < 2) panic;
                    {.len = 2us, .ptr = (a.ptr + (0us * 8us)), .blk = a.blk_info}
                #};
            {
                let #_iter : usize = 0us;
                ({
                        #_iter = 0us;
                        let mut i : mut &(mut test22::A) = alias (#_value [#_iter]);
                        alias (i)
                    }, {
                        #_iter = 1us;
                        let mut i : mut &(mut test22::A) = alias (#_value [#_iter]);
                        alias (i)
                    })
            }
        };
    <unit-value>
}
