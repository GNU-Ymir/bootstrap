pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_5 (minfo-> P_1, entries-> P_1, len-> u64, cap-> u64, loaded-> u64);
tuple T_8 (#_vtable-> P_2, #_monitor-> P_1);
pointer P_9 *(T_8);
array A_10 [P_1 ; 2];
tuple T_11 (len-> u64, ptr-> P_1, blk_info-> P_1);
pointer P_12 *(u8);
tuple T_13 (len-> u64, ptr-> P_12, blk_info-> P_1);
array A_14 [u8 ; 10];
tuple T_15 (typeid-> u32, size-> u64, inner-> T_17, name-> T_13);
pointer P_16 *(T_15);
tuple T_17 (len-> u64, ptr-> P_16, blk_info-> P_1);
pointer P_18 *(i32);
tuple T_19 (P_1, P_1, u64, u64);
pointer P_20 *(T_5);
pointer P_21 *(P_20);
pointer P_22 *(P_9);
tuple T_23 (len-> u64, ptr-> P_22, blk_info-> P_1);
pointer P_24 *(T_23);
const :  _Y6test201ATI (typeid-> 13, size-> 16, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 9, ptr-> "test20::A", blk_info-> 0))
const :  _Y6test201AVT [&_Y6test201ATI, 0]
const : [weak] _YMP15i32_P96test201AMI (&_Y4core5types3map11compareKeysNi32FP3i32P3i32Zb, &_Y4core5types3map7hashKeyNi32FP3i32Zu64, 8, 8)
frame :  [weak] _Y4core5types3map11compareKeysNi32FP3i32P3i32Zb (let a : P_18, let b : P_18)-> u8 {
    YI_1 = *a == *b;
    return YI_1;
}
frame :  [weak] _Y4core5types3map7hashKeyNi32FP3i32Zu64 (let a : P_18)-> u64 {
    YI_1 = _Y4core5types4hash6__hashFi32Zu64(*a);
    return YI_1;
}
frame :  _Y6test201A4selfCBTxP10x6test201AZv (let self : P_9)-> void {
}
frame :  _Y6test201A4selfCETxP10x6test201AZv (let self : P_9)-> void {
}
frame :  _Y6test201A4selfCTxP10x6test201AZv (let self : P_9)-> void {
    _Y6test201A4selfCBTxP10x6test201AZv(self);
    YI_1 = self;
    _Y6test201A4selfCETxP10x6test201AZv(self);
    YI_2 = self;
}
frame :  _Y6test204mainFZv ()-> void {
    _yrt_map_empty(&__map_1, &_YMP15i32_P96test201AMI);
    YI_1 = 0;
    __self_3 = _yrt_alloc_class(&_Y6test201AVT);
    _Y6test201A4selfCTxP10x6test201AZv(__self_3);
    YI_2 = __self_3;
    _yrt_map_insert(&__map_1, &YI_1, &YI_2);
    YI_3 = 1;
    __self_6 = _yrt_alloc_class(&_Y6test201AVT);
    _Y6test201A4selfCTxP10x6test201AZv(__self_6);
    YI_4 = __self_6;
    _yrt_map_insert(&__map_1, &YI_3, &YI_4);
    YI_5 = __map_1;
    a = YI_5;
    _yrt_alloc_slice_no_set(&YI_6, a-> len, 8);
    YI_7 = YI_6;
    #_value = YI_7;
    #_iter = _yrt_map_iter_begin(&a);
    #_index = 0;
    try {
    #GOTO test(#3);
    #LABEL beg(#2);
        #_iter0 = cast!{P_18} (_yrt_map_iter_key(#_iter));
        i = *_yrt_map_iter_val(#_iter);
        YI_8 = 8 * #_index;
        YI_9 = #_value.ptr + YI_8;
        YI_10 = cast!{P_22} (YI_9);
        *YI_10 = i;
        YI_11 = #_index + 1;
        #_index = YI_11;
        _yrt_map_iter_next(#_iter);
    #LABEL test(#3);
    #IF _yrt_map_iter_end(#_iter)
    #THEN_GOTO beg(#2)
    #ELSE_GOTO end(#1);
    #LABEL end(#1);
    }
    finally{
        _yrt_map_iter_del(#_iter);
    };
    YI_12 = #_value;
    _b_ = YI_12;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y6test204mainFZv);
    return 0;
}
