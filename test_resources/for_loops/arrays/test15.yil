pointer P_1 *(void);
pointer P_2 *(P_1);
pointer P_8 *(i32);
tuple T_9 (len-> u64, ptr-> P_8, blk_info-> P_1);
array A_10 [T_9 ; 1];
array A_11 [i32 ; 3];
pointer P_12 *(T_9);
tuple T_13 (len-> u64, ptr-> P_12, blk_info-> P_1);
pointer P_14 *(u8);
tuple T_15 (len-> u64, ptr-> P_14, blk_info-> P_1);
frame :  _Y6test154mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    YI_6 = [YI_5];
    a = YI_6;
    YI_7 = (len-> 1, ptr-> &a, blk_info-> 0);
    #_value = YI_7;
    #_iter = 0;
#GOTO test(#5);
#LABEL beg(#4);
    YI_8 = 24 * #_iter;
    YI_9 = #_value.ptr + YI_8;
    YI_10 = cast!{P_12} (YI_9);
    x = *YI_10;
    YI_11 = x.len <= 0;
#IF YI_11
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_12 = "test_resources/for_loops/arrays/test15.yr";
    YI_13 = "test15::main";
    _yrt_exc_panic(YI_12, YI_13, 4);
#LABEL end(#3);
    YI_14 = 4 * 0;
    YI_15 = x.ptr + YI_14;
    YI_16 = cast!{P_8} (YI_15);
    *YI_16 = 10;
    YI_17 = #_iter + 1;
    #_iter = YI_17;
#LABEL test(#5);
    YI_18 = #_iter < 1;
#IF YI_18
#THEN_GOTO beg(#4)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y6test154mainFZv);
    return 0;
}
