frame :  _Y6test154mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1);
    YI_3 = YI_2;
    YI_4 = _yrt_dup_slice(YI_3.ptr, YI_3.len, 4);
    YI_5 = (len-> YI_3.len, ptr-> YI_4);
    YI_6 = [YI_5];
    a = YI_6;
    YI_7 = (len-> 1, ptr-> &a);
    #_value = YI_7;
    #_iter = 0;
#GOTO test(#5);
#LABEL beg(#4);
    YI_8 = 16 * #_iter;
    YI_9 = #_value.ptr + YI_8;
    YI_10 = cast!{*((len-> u64, ptr-> *(i32)))} (YI_9);
    x = *YI_10;
    YI_11 = x.len <= 0;
#IF YI_11
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_12 = "test_resources/for_loops/arrays/test15.yr";
    YI_13 = "test15::main";
    _yrt_exc_panic(YI_12, YI_13, 4);
#LABEL end(#3);
    YI_14 = 4 * 0;
    YI_15 = x.ptr + YI_14;
    YI_16 = cast!{*(i32)} (YI_15);
    *YI_16 = 10;
    YI_17 = #_iter + 1;
    #_iter = YI_17;
#LABEL test(#5);
    YI_18 = #_iter < 1;
#IF YI_18
#THEN_GOTO beg(#4)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test154mainFZv);
    return 0;
}
