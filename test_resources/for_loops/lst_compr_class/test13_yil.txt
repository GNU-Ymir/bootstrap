const :  _Y6test131ATI (typeid-> 11, size-> 32, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 9, ptr-> "test13::A", blk_info-> 0))
const :  _Y6test139CIteratorTI (typeid-> 13, size-> 48, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 17, ptr-> "test13::CIterator", blk_info-> 0))
const :  _Y6test139CIteratorVT [&_Y6test139CIteratorTI, 0, &_Y4impl4nextMTxP18x6test139CIteratorZv, &_Y6test139CIterator8opEqualsMTP176test139CIteratorusizeZb]
frame :  _Y4impl4nextMTxP18x6test139CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)))-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y6test131A3endMTR96test131AZusize (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test131A4selfCTRx96test131AZv (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    self-> _items = YI_5;
}
frame :  _Y6test131A5beginMTR96test131AZxP18x6test139CIterator (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)) {
    __self_2 = _yrt_alloc_class(&_Y6test139CIteratorVT);
    _Y6test139CIterator4selfCTxP18x6test139CIteratorusizeS3i32Zv(__self_2, 0, self-> _items);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y6test131A6__dtorDTRx96test131AZv (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    _Y6test133endFZv();
}
frame :  _Y6test131A6valuesMTR96test131AZS3i32 (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> (len-> u64, ptr-> *(i32), blk_info-> *(void)) {
    return self-> _items;
}
frame :  _Y6test133bazFi32Zi32 (let _ : i32)-> i32 {
    return 1;
}
frame :  _Y6test133endFZv ()-> void {
}
frame :  _Y6test134mainFZv ()-> void {
    __self_1.#_set = 1;
    _Y6test131A4selfCTRx96test131AZv(&__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = _Y6test131A6valuesMTR96test131AZS3i32(&a);
    YI_3 = _Y6test131A5beginMTR96test131AZxP18x6test139CIterator(&a);
    #_iter = YI_3;
    YI_4 = _Y6test131A3endMTR96test131AZusize(&a);
    #_end = YI_4;
    _yrt_alloc_slice_no_set(&YI_5, 0, 4);
    YI_6 = YI_5;
    #_value = YI_6;
#GOTO test(#7);
#LABEL beg(#6);
    YI_7 = _Y6test139CIterator3getNi3_0usNi3_1usMTxP18x6test139CIteratorZi32(#_iter);
    i = YI_7;
    YI_8 = _Y6test133bazFi32Zi32(i);
    YI_9 = [YI_8];
    YI_10 = (len-> 1, ptr-> &YI_9, blk_info-> 0);
    YI_11 = YI_10;
    _yrt_append_slice(&#_value, &YI_11, 4);
    YI_12 = #_iter;
    YI_13 = YI_12-> #_vtable;
    YI_14 = YI_13 + 16;
    (**YI_14)(#_iter);
#LABEL test(#7);
    YI_15 = #_iter;
    YI_16 = YI_15-> #_vtable;
    YI_17 = YI_16 + 24;
    YI_18 = (**YI_17)(#_iter, #_end);
#IF ! YI_18
#THEN_GOTO beg(#6)
#ELSE_GOTO end(#5);
#LABEL end(#5);
    YI_19 = #_value;
    _ = YI_19;
    {
    #IF a.#_set
    #THEN_GOTO then(#3)
    #ELSE_GOTO end(#4);
    #LABEL then(#3);
        _Y6test131A6__dtorDTRx96test131AZv(&a);
        a.#_set = 0;
    #LABEL end(#4);
    };
}
frame :  [weak] _Y6test139CIterator3getNi3_0usNi3_1usMTxP18x6test139CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)))-> i32 {
    YI_1 = self-> _x.len <= self-> _index;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/for_loops/lst_compr_class/test13.yr";
    YI_3 = "test13::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_2, YI_3, 42);
#LABEL end(#2);
    YI_4 = 4 * self-> _index;
    YI_5 = self-> _x.ptr + YI_4;
    YI_6 = cast!{*(i32)} (YI_5);
    YI_7 = *YI_6;
    return YI_7;
}
frame :  _Y6test139CIterator4selfCTxP18x6test139CIteratorusizeS3i32Zv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)), let index : u64, let x : (len-> u64, ptr-> *(i32), blk_info-> *(void)))-> void {
    self-> _index = index;
    self-> _x = x;
}
frame :  _Y6test139CIterator8opEqualsMTP176test139CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)), let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test134mainFZv);
    return 0;
}
