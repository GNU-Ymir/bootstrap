const :  _Y6test141ATI (typeid-> 11, size-> 32, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 9, ptr-> "test14::A", blk_info-> 0))
const :  _Y6test149CIteratorVT [&_Y6test149CIteratorTI, 0, &_Y4impl4nextMTxP18x6test149CIteratorZv, &_Y6test149CIterator8opEqualsMTP176test149CIteratorusizeZb]
const :  _Y6test149CIteratorTI (typeid-> 13, size-> 48, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 17, ptr-> "test14::CIterator", blk_info-> 0))
frame :  _Y6test143bazFi32Zi32 (let _ : i32)-> i32 {
    return 1;
}
frame :  _Y6test147exitingFZv ()-> void {
}
frame :  _Y6test143endFZv ()-> void {
}
frame :  _Y6test146caughtFZv ()-> void {
}
frame :  [weak] _Y6test149CIterator3getNi3_0usNi3_1usMTxP18x6test149CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)))-> i32 {
    YI_1 = self-> _x.len <= self-> _index;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/for_loops/lst_compr_class/test14.yr";
    YI_3 = "test14::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_2, YI_3, 44);
#LABEL end(#2);
    YI_4 = 4 * self-> _index;
    YI_5 = self-> _x.ptr + YI_4;
    YI_6 = cast!{*(i32)} (YI_5);
    YI_7 = *YI_6;
    return YI_7;
}
frame :  _Y6test144mainFZv ()-> void {
    try {
        try {
            try {
                __self_1.#_set = 1;
                _Y6test141A4selfCTRx96test141AZv(&__self_1);
                YI_1 = __self_1;
                a = YI_1;
                YI_2 = _Y6test141A6valuesMTR96test141AZS3i32(&a);
                YI_3 = _Y6test141A5beginMTR96test141AZxP18x6test149CIterator(&a);
                #_iter = YI_3;
                YI_4 = _Y6test141A3endMTR96test141AZusize(&a);
                #_end = YI_4;
                _yrt_alloc_slice_no_set(&YI_5, 0, 4);
                YI_6 = YI_5;
                #_value = YI_6;
            #GOTO test(#7);
            #LABEL beg(#6);
                YI_7 = _Y6test149CIterator3getNi3_0usNi3_1usMTxP18x6test149CIteratorZi32(#_iter);
                i = YI_7;
                YI_8 = _Y6test143bazFi32Zi32(i);
                YI_9 = [YI_8];
                YI_10 = (len-> 1, ptr-> &YI_9, blk_info-> 0);
                YI_11 = YI_10;
                _yrt_append_slice(&#_value, &YI_11, 4);
                YI_12 = #_iter;
                YI_13 = YI_12-> #_vtable;
                YI_14 = YI_13 + 16;
                (**YI_14)(#_iter);
            #LABEL test(#7);
                YI_15 = #_iter;
                YI_16 = YI_15-> #_vtable;
                YI_17 = YI_16 + 24;
                YI_18 = (**YI_17)(#_iter, #_end);
            #IF ! YI_18
            #THEN_GOTO beg(#6)
            #ELSE_GOTO end(#5);
            #LABEL end(#5);
                YI_19 = #_value;
                _ = YI_19;
                __self_27 = _yrt_alloc_class(&_Y4core9exception9assertion11AssertErrorVT);
                _Y4core9exception9assertion11AssertError4selfCTxP39x4core9exception9assertion11AssertErrorS2c8Zv(__self_27, (len-> 0, ptr-> 0, blk_info-> 0));
                YI_20 = __self_27;
                YI_21 = "test_resources/for_loops/lst_compr_class/test14.yr";
                YI_22 = "test14::main";
                _yrt_exc_throw(YI_21, YI_22, 67, YI_20);
            }
            finally{
                {
                #IF a.#_set
                #THEN_GOTO then(#3)
                #ELSE_GOTO end(#4);
                #LABEL then(#3);
                    _Y6test141A6__dtorDTRx96test141AZv(&a);
                    a.#_set = 0;
                #LABEL end(#4);
                };
            };
        }
        finally{
            _Y6test147exitingFZv();
        };
    }
    catch{
        #_catch = _yrt_exc_begin_catch (ephtr (0));
    #IF 1
    #THEN_GOTO then(#8)
    #ELSE_GOTO else(#a);
    #LABEL then(#8);
        YI_23 = 1;
    #GOTO end(#9);
    #LABEL else(#a);
        YI_23 = 1;
    #LABEL end(#9);
    #IF YI_23
    #THEN_GOTO then(#b)
    #ELSE_GOTO else(#d);
    #LABEL then(#b);
        _ = #_catch;
        YI_24 = 1;
        YI_25 = YI_24;
    #GOTO end(#c);
    #LABEL else(#d);
        YI_25 = YI_23;
    #LABEL end(#c);
    #IF YI_25
    #THEN_GOTO then(#e)
    #ELSE_GOTO end(#f);
    #LABEL then(#e);
        _Y6test146caughtFZv();
    #LABEL end(#f);
    };
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test144mainFZv);
    return 0;
}
frame :  _Y6test141A5beginMTR96test141AZxP18x6test149CIterator (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)) {
    __self_2 = _yrt_alloc_class(&_Y6test149CIteratorVT);
    _Y6test149CIterator4selfCTxP18x6test149CIteratorusizeS3i32Zv(__self_2, 0, self-> _items);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y6test141A3endMTR96test141AZusize (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test141A6valuesMTR96test141AZS3i32 (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> (len-> u64, ptr-> *(i32), blk_info-> *(void)) {
    return self-> _items;
}
frame :  _Y6test141A4selfCTRx96test141AZv (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    self-> _items = YI_5;
}
frame :  _Y6test141A6__dtorDTRx96test141AZv (let self : *((#_set-> u8, _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    _Y6test143endFZv();
}
frame :  _Y4impl4nextMTxP18x6test149CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)))-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y6test149CIterator8opEqualsMTP176test149CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)), let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  _Y6test149CIterator4selfCTxP18x6test149CIteratorusizeS3i32Zv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32), blk_info-> *(void)), _index-> u64)), let index : u64, let x : (len-> u64, ptr-> *(i32), blk_info-> *(void)))-> void {
    self-> _index = index;
    self-> _x = x;
}
