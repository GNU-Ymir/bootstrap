pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_7 (#_vtable-> P_2, #_monitor-> P_1);
tuple T_8 (#_set-> u8, _i-> i32);
pointer P_9 *(T_8);
tuple T_10 (len-> u64, ptr-> P_1, blk_info-> P_1);
pointer P_11 *(u8);
tuple T_12 (len-> u64, ptr-> P_11, blk_info-> P_1);
array A_13 [u8 ; 16];
tuple T_14 (typeid-> u32, size-> u64, inner-> T_16, name-> T_12);
pointer P_15 *(T_14);
tuple T_16 (len-> u64, ptr-> P_15, blk_info-> P_1);
tuple T_17 (#_vtable-> P_2, #_monitor-> P_1, _len-> i32);
pointer P_18 *(T_17);
array A_19 [P_1 ; 4];
array A_20 [u8 ; 9];
pointer P_21 *(i32);
tuple T_22 (len-> u64, ptr-> P_21, blk_info-> P_1);
pointer P_23 *(T_7);
pointer P_24 *(T_22);
array A_25 [i32 ; 1];
const :  _Y5test81ATI (typeid-> 13, size-> 24, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 8, ptr-> "test8::A", blk_info-> 0))
const :  _Y5test81AVT [&_Y5test81ATI, 0, &_Y5test81A5beginMTP85test81AZ155test88Iterator, &_Y5test81A3endMTP85test81AZi32]
const :  _Y5test88IteratorTI (typeid-> 11, size-> 8, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 15, ptr-> "test8::Iterator", blk_info-> 0))
frame :  _Y4impl4nextMTRx155test88IteratorZv (let self : P_9)-> void {
    YI_1 = self-> _i + 1;
    self-> _i = YI_1;
}
frame :  _Y5test81A3endMTP85test81AZi32 (let self : P_18)-> i32 {
    return self-> _len;
}
frame :  _Y5test81A4selfCBTxP9x5test81Ai32Zv (let self : P_18, let len : i32)-> void {
    self-> _len = len;
}
frame :  _Y5test81A4selfCETxP9x5test81Ai32Zv (let self : P_18, let len : i32)-> void {
}
frame :  _Y5test81A4selfCTxP9x5test81Ai32Zv (let self : P_18, let len : i32)-> void {
    _Y5test81A4selfCBTxP9x5test81Ai32Zv(self, len);
    YI_1 = self;
    _Y5test81A4selfCETxP9x5test81Ai32Zv(self, len);
    YI_2 = self;
}
frame :  _Y5test81A5beginMTP85test81AZ155test88Iterator (let self : P_18)-> T_8 {
    __self_2.#_set = 1;
    _Y5test88Iterator4selfCTRx155test88Iteratori32Zv(&__self_2, 0);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y5test83barFZv ()-> void {
}
frame :  _Y5test83bazFi32Zi32 (let i : i32)-> i32 {
    return i;
}
frame :  _Y5test83fooFZv ()-> void {
}
frame :  _Y5test84mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y5test81AVT);
    _Y5test81A4selfCTxP9x5test81Ai32Zv(__self_1, 10);
    YI_1 = __self_1;
    x = YI_1;
    try {
        #_iter.#_set = 0;
        YI_2 = cast!{P_1} (cast!{P_23} (x)-> #_vtable);
        YI_3 = cast!{P_2} (YI_2 + 16);
        YI_4 = *YI_3;
        YI_5 = (*YI_4)(x);
        #_iter = YI_5;
        YI_6 = cast!{P_1} (cast!{P_23} (x)-> #_vtable);
        YI_7 = cast!{P_2} (YI_6 + 24);
        YI_8 = *YI_7;
        YI_9 = (*YI_8)(x);
        #_end = YI_9;
        _yrt_alloc_slice_no_set(&YI_10, 0, 4);
        YI_11 = YI_10;
        #_value = YI_11;
    #GOTO test(#7);
    #LABEL beg(#6);
        YI_12 = _Y5test88Iterator3getNi3_0usNi3_1usMTR155test88IteratorZi32(&#_iter);
        i = YI_12;
        YI_13 = _Y5test83bazFi32Zi32(i);
        YI_14 = [YI_13];
        YI_15 = (len-> 1, ptr-> &YI_14, blk_info-> 0);
        YI_16 = YI_15;
        _yrt_append_slice(&#_value, &YI_16, 4);
        _Y4impl4nextMTRx155test88IteratorZv(&#_iter);
    #LABEL test(#7);
        YI_17 = _Y5test88Iterator8opEqualsMTR155test88Iteratori32Zb(&#_iter, #_end);
    #IF ! YI_17
    #THEN_GOTO beg(#6)
    #ELSE_GOTO end(#5);
    #LABEL end(#5);
        YI_18 = #_value;
    }
    finally{
        {
        #IF #_iter.#_set
        #THEN_GOTO then(#3)
        #ELSE_GOTO end(#4);
        #LABEL then(#3);
            _Y5test88Iterator6__dtorDTRx155test88IteratorZv(&#_iter);
            #_iter.#_set = 0;
        #LABEL end(#4);
        };
    };
    _ = YI_18;
}
frame :  [weak] _Y5test88Iterator3getNi3_0usNi3_1usMTR155test88IteratorZi32 (let self : P_9)-> i32 {
    return self-> _i;
}
frame :  _Y5test88Iterator4selfCTRx155test88IteratorZv (let self : P_9)-> void {
    self-> _i = 0;
}
frame :  _Y5test88Iterator4selfCTRx155test88Iteratori32Zv (let self : P_9, let i : i32)-> void {
    self-> _i = i;
}
frame :  _Y5test88Iterator6__dtorDTRx155test88IteratorZv (let self : P_9)-> void {
    _Y5test83barFZv();
}
frame :  _Y5test88Iterator8opEqualsMTR155test88Iteratori32Zb (let self : P_9, let a : i32)-> u8 {
    YI_1 = self-> _i == a;
    return YI_1;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test84mainFZv);
    return 0;
}
