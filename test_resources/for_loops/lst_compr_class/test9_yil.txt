const :  _Y5test99SIteratorTI (typeid-> 11, size-> 16, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 16, ptr-> "test9::SIterator", blk_info-> 0))
const :  _Y5test91AVT [&_Y5test91ATI, 0, &_Y5test91A5beginMTP85test91AZ165test99SIterator, &_Y5test91A3endMTP85test91AZusize, &_Y5test91A6valuesMTP85test91AZS3i32]
const :  _Y5test91ATI (typeid-> 13, size-> 40, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 8, ptr-> "test9::A", blk_info-> 0))
frame :  _Y4impl4nextMTRx165test99SIteratorZv (let self : *((index-> u64, a-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))))-> void {
    YI_1 = self-> index + 1;
    self-> index = YI_1;
}
frame :  _Y5test99SIterator8opEqualsMTR165test99SIteratorusizeZb (let self : *((index-> u64, a-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))), let i : u64)-> u8 {
    YI_1 = self-> index == i;
    return YI_1;
}
frame :  _Y5test99SIterator4selfCTRx165test99SIteratorusizeP85test91AZv (let self : *((index-> u64, a-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))), let index : u64, let a : *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    self-> index = index;
    self-> a = a;
}
frame :  [weak] _Y5test99SIterator3getNi3_0usNi3_1usMTR165test99SIteratorZi32 (let self : *((index-> u64, a-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))))-> i32 {
    YI_1 = self-> a;
    YI_2 = YI_1-> #_vtable;
    YI_3 = YI_2 + 32;
    YI_4 = (**YI_3)(self-> a);
    YI_5 = YI_4.len <= self-> index;
#IF YI_5
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_6 = "test_resources/for_loops/lst_compr_class/test9.yr";
    YI_7 = "test9::SIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_6, YI_7, 11);
#LABEL end(#2);
    YI_8 = 4 * self-> index;
    YI_9 = YI_4.ptr + YI_8;
    YI_10 = cast!{*(i32)} (YI_9);
    YI_11 = *YI_10;
    return YI_11;
}
frame :  _Y5test94mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y5test91AVT);
    _Y5test91A4selfCTxP9x5test91AZv(__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = a;
    YI_3 = YI_2-> #_vtable;
    YI_4 = YI_3 + 16;
    YI_5 = (**YI_4)(a);
    #_iter = YI_5;
    YI_6 = a;
    YI_7 = YI_6-> #_vtable;
    YI_8 = YI_7 + 24;
    YI_9 = (**YI_8)(a);
    #_end = YI_9;
    _yrt_alloc_slice_no_set(&YI_10, 0, 4);
    YI_11 = YI_10;
    #_value = YI_11;
#GOTO test(#3);
#LABEL beg(#2);
    YI_12 = _Y5test99SIterator3getNi3_0usNi3_1usMTR165test99SIteratorZi32(&#_iter);
    i = YI_12;
    YI_13 = [i];
    YI_14 = (len-> 1, ptr-> &YI_13, blk_info-> 0);
    YI_15 = YI_14;
    _yrt_append_slice(&#_value, &YI_15, 4);
    _Y4impl4nextMTRx165test99SIteratorZv(&#_iter);
#LABEL test(#3);
    YI_16 = _Y5test99SIterator8opEqualsMTR165test99SIteratorusizeZb(&#_iter, #_end);
#IF ! YI_16
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_17 = #_value;
    _ = YI_17;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test94mainFZv);
    return 0;
}
frame :  _Y5test91A5beginMTP85test91AZ165test99SIterator (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> (index-> u64, a-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void))))) {
    _Y5test99SIterator4selfCTRx165test99SIteratorusizeP85test91AZv(&__self_2, 0, self);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y5test91A3endMTP85test91AZusize (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> u64 {
    return self-> _values.len;
}
frame :  _Y5test91A6valuesMTP85test91AZS3i32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> (len-> u64, ptr-> *(i32), blk_info-> *(void)) {
    return self-> _values;
}
frame :  _Y5test91A4selfCTxP9x5test91AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _values-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    self-> _values = YI_5;
}
