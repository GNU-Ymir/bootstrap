const :  _Y6test121ATI (typeid-> 11, size-> 16, inner-> (len-> 0, ptr-> 0), name-> (len-> 9, ptr-> "test12::A"))
const :  _Y6test129CIteratorVT [&_Y6test129CIteratorTI, 0, &_Y4impl4nextMTxP18x6test129CIteratorZv, &_Y6test129CIterator8opEqualsMTP176test129CIteratorusizeZb]
const :  _Y6test129CIteratorTI (typeid-> 13, size-> 40, inner-> (len-> 0, ptr-> 0), name-> (len-> 17, ptr-> "test12::CIterator"))
frame :  _Y6test123bazFi32Zi32 (let _ : i32)-> i32 {
    return 1;
}
frame :  [weak] _Y6test129CIterator3getNi3_0usNi3_1usMTxP18x6test129CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)))-> i32 {
    let YI_2 : u8;
    let YI_3 : *(u8);
    let YI_4 : *(u8);
    let YI_5 : u64;
    let YI_6 : u64;
    let YI_7 : *(i32);
    let YI_8 : i32;
    YI_2 = self-> _x.len <= self-> _index;
#IF YI_2
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_3 = "test_resources/for_loops/lst_compr_class/test12.yr";
    YI_4 = "test12::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_3, YI_4, 41);
#LABEL end(#2);
    YI_5 = 4 * self-> _index;
    YI_6 = self-> _x.ptr + YI_5;
    YI_7 = cast!{*(i32)} (YI_6);
    YI_8 = *YI_7;
    return YI_8;
}
frame :  _Y6test124mainFZv ()-> void {
    let __self_1 : (_items-> (len-> u64, ptr-> *(i32)));
    let YI_2 : (_items-> (len-> u64, ptr-> *(i32)));
    let a : (_items-> (len-> u64, ptr-> *(i32)));
    let YI_4 : (len-> u64, ptr-> *(i32));
    let #_index : u64;
    let YI_6 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    let #_iter : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    let YI_8 : u64;
    let #_end : u64;
    let YI_10 : u64;
    let YI_11 : *(void);
    let YI_12 : (len-> u64, ptr-> *(i32));
    let #_value : (len-> u64, ptr-> *(i32));
    let YI_20 : i32;
    let i : i32;
    let YI_22 : u64;
    let YI_23 : u64;
    let YI_24 : *(i32);
    let YI_25 : i32;
    let YI_26 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    let YI_27 : *(*(void));
    let YI_28 : *(*(void));
    let YI_29 : u64;
    let YI_14 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    let YI_15 : *(*(void));
    let YI_16 : *(*(void));
    let YI_17 : u8;
    let YI_19 : u8;
    let YI_18 : u8;
    let YI_30 : (len-> u64, ptr-> *(i32));
    let YI_31 : (len-> u64, ptr-> *(i32));
    let _ : (len-> u64, ptr-> *(i32));
    _Y6test121A4selfCTRx96test121AZv(&__self_1);
    YI_2 = __self_1;
    a = YI_2;
    YI_4 = _Y6test121A6valuesMTR96test121AZS3i32(&a);
    #_index = 0;
    YI_6 = _Y6test121A5beginMTR96test121AZxP18x6test129CIterator(&a);
    #_iter = YI_6;
    YI_8 = _Y6test121A3endMTR96test121AZusize(&a);
    #_end = YI_8;
    YI_10 = _Y6test121A3lenMTR96test121AZusize(&a);
    YI_11 = _yrt_alloc_array_no_set(YI_10, 4);
    YI_12 = (len-> YI_10, ptr-> YI_11);
    #_value = YI_12;
#GOTO test(#6);
#LABEL beg(#5);
    YI_20 = _Y6test129CIterator3getNi3_0usNi3_1usMTxP18x6test129CIteratorZi32(#_iter);
    i = YI_20;
    YI_22 = 4 * #_index;
    YI_23 = #_value.ptr + YI_22;
    YI_24 = cast!{*(i32)} (YI_23);
    YI_25 = _Y6test123bazFi32Zi32(i);
    *YI_24 = YI_25;
    YI_26 = #_iter;
    YI_27 = YI_26-> #_vtable;
    YI_28 = YI_27 + 16;
    (**YI_28)(#_iter);
    YI_29 = #_index + 1;
    #_index = YI_29;
#LABEL test(#6);
    YI_14 = #_iter;
    YI_15 = YI_14-> #_vtable;
    YI_16 = YI_15 + 24;
    YI_17 = (**YI_16)(#_iter, #_end);
#IF ! YI_17
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_18 = #_index < YI_10;
    YI_19 = YI_18;
#GOTO end(#2);
#LABEL else(#3);
    YI_19 = ! YI_17;
#LABEL end(#2);
#IF YI_19
#THEN_GOTO beg(#5)
#ELSE_GOTO end(#4);
#LABEL end(#4);
    YI_30 = (len-> #_index, ptr-> #_value.ptr);
    YI_31 = YI_30;
    _ = YI_31;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test124mainFZv);
    return 0;
}
frame :  _Y6test121A5beginMTR96test121AZxP18x6test129CIterator (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)) {
    let __self_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    let YI_3 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64));
    __self_2 = _yrt_alloc_class(&_Y6test129CIteratorVT);
    _Y6test129CIterator4selfCTxP18x6test129CIteratorusizeS3i32Zv(__self_2, 0, self-> _items);
    YI_3 = __self_2;
    return YI_3;
}
frame :  _Y6test121A3lenMTR96test121AZusize (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test121A3endMTR96test121AZusize (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test121A6valuesMTR96test121AZS3i32 (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> (len-> u64, ptr-> *(i32)) {
    return self-> _items;
}
frame :  _Y6test121A4selfCTRx96test121AZv (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> void {
    let YI_2 : [i32;3];
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : (len-> u64, ptr-> *(i32));
    let YI_5 : *(void);
    let YI_6 : (len-> u64, ptr-> *(i32));
    YI_2 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_2);
    YI_4 = YI_3;
    YI_5 = _yrt_dup_slice(YI_4.ptr, YI_4.len, 4);
    YI_6 = (len-> YI_4.len, ptr-> YI_5);
    self-> _items = YI_6;
}
frame :  _Y4impl4nextMTxP18x6test129CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)))-> void {
    let YI_2 : u64;
    YI_2 = self-> _index + 1;
    self-> _index = YI_2;
}
frame :  _Y6test129CIterator8opEqualsMTP176test129CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)), let o : u64)-> u8 {
    let YI_3 : u8;
    YI_3 = self-> _index == o;
    return YI_3;
}
frame :  _Y6test129CIterator4selfCTxP18x6test129CIteratorusizeS3i32Zv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)), let index : u64, let x : (len-> u64, ptr-> *(i32)))-> void {
    self-> _index = index;
    self-> _x = x;
}
