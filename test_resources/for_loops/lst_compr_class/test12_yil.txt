const :  _Y6test121ATI (typeid-> 11, size-> 16, inner-> (len-> 0, ptr-> 0), name-> (len-> 9, ptr-> "test12::A"))
const :  _Y6test129CIteratorVT [&_Y6test129CIteratorTI, 0, &_Y4impl4nextMTxP18x6test129CIteratorZv, &_Y6test129CIterator8opEqualsMTP176test129CIteratorusizeZb]
const :  _Y6test129CIteratorTI (typeid-> 13, size-> 40, inner-> (len-> 0, ptr-> 0), name-> (len-> 17, ptr-> "test12::CIterator"))
frame :  _Y6test123bazFi32Zi32 (let _ : i32)-> i32 {
    return 1;
}
frame :  [weak] _Y6test129CIterator3getNi3_0usNi3_1usMTxP18x6test129CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)))-> i32 {
    YI_1 = self-> _x.len <= self-> _index;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/for_loops/lst_compr_class/test12.yr";
    YI_3 = "test12::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_2, YI_3, 41);
#LABEL end(#2);
    YI_4 = 4 * self-> _index;
    YI_5 = self-> _x.ptr + YI_4;
    YI_6 = cast!{*(i32)} (YI_5);
    YI_7 = *YI_6;
    return YI_7;
}
frame :  _Y6test124mainFZv ()-> void {
    _Y6test121A4selfCTRx96test121AZv(&__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = _Y6test121A6valuesMTR96test121AZS3i32(&a);
    #_index = 0;
    YI_3 = _Y6test121A5beginMTR96test121AZxP18x6test129CIterator(&a);
    #_iter = YI_3;
    YI_4 = _Y6test121A3endMTR96test121AZusize(&a);
    #_end = YI_4;
    YI_5 = _Y6test121A3lenMTR96test121AZusize(&a);
    YI_6 = _yrt_alloc_array_no_set(YI_5, 4);
    YI_7 = (len-> YI_5, ptr-> YI_6);
    #_value = YI_7;
#GOTO test(#6);
#LABEL beg(#5);
    YI_8 = _Y6test129CIterator3getNi3_0usNi3_1usMTxP18x6test129CIteratorZi32(#_iter);
    i = YI_8;
    YI_9 = 4 * #_index;
    YI_10 = #_value.ptr + YI_9;
    YI_11 = cast!{*(i32)} (YI_10);
    YI_12 = _Y6test123bazFi32Zi32(i);
    *YI_11 = YI_12;
    YI_13 = #_iter;
    YI_14 = YI_13-> #_vtable;
    YI_15 = YI_14 + 16;
    (**YI_15)(#_iter);
    YI_16 = #_index + 1;
    #_index = YI_16;
#LABEL test(#6);
    YI_17 = #_iter;
    YI_18 = YI_17-> #_vtable;
    YI_19 = YI_18 + 24;
    YI_20 = (**YI_19)(#_iter, #_end);
#IF ! YI_20
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_21 = #_index < YI_5;
    YI_22 = YI_21;
#GOTO end(#2);
#LABEL else(#3);
    YI_22 = ! YI_20;
#LABEL end(#2);
#IF YI_22
#THEN_GOTO beg(#5)
#ELSE_GOTO end(#4);
#LABEL end(#4);
    YI_23 = (len-> #_index, ptr-> #_value.ptr);
    YI_24 = YI_23;
    _ = YI_24;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test124mainFZv);
    return 0;
}
frame :  _Y6test121A5beginMTR96test121AZxP18x6test129CIterator (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)) {
    __self_2 = _yrt_alloc_class(&_Y6test129CIteratorVT);
    _Y6test129CIterator4selfCTxP18x6test129CIteratorusizeS3i32Zv(__self_2, 0, self-> _items);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y6test121A3lenMTR96test121AZusize (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test121A3endMTR96test121AZusize (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test121A6valuesMTR96test121AZS3i32 (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> (len-> u64, ptr-> *(i32)) {
    return self-> _items;
}
frame :  _Y6test121A4selfCTRx96test121AZv (let self : *((_items-> (len-> u64, ptr-> *(i32)))))-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1);
    YI_3 = YI_2;
    YI_4 = _yrt_dup_slice(YI_3.ptr, YI_3.len, 4);
    YI_5 = (len-> YI_3.len, ptr-> YI_4);
    self-> _items = YI_5;
}
frame :  _Y4impl4nextMTxP18x6test129CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)))-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y6test129CIterator8opEqualsMTP176test129CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)), let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  _Y6test129CIterator4selfCTxP18x6test129CIteratorusizeS3i32Zv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> (len-> u64, ptr-> *(i32)), _index-> u64)), let index : u64, let x : (len-> u64, ptr-> *(i32)))-> void {
    self-> _index = index;
    self-> _x = x;
}
