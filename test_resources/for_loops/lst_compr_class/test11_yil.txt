const :  _Y6test111AVT [&_Y6test111ATI, 0, &_Y6test111A5beginMTP96test111AZxP18x6test119CIterator, &_Y6test111A3lenMTP96test111AZusize, &_Y6test111A3endMTP96test111AZusize, &_Y6test111A6valuesMTP96test111AZS3i32]
const :  _Y6test111ATI (typeid-> 13, size-> 40, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 9, ptr-> "test11::A", blk_info-> 0))
const :  _Y6test119CIteratorVT [&_Y6test119CIteratorTI, 0, &_Y4impl4nextMTxP18x6test119CIteratorZv, &_Y6test119CIterator8opEqualsMTP176test119CIteratorusizeZb]
const :  _Y6test119CIteratorTI (typeid-> 13, size-> 32, inner-> (len-> 0, ptr-> 0, blk_info-> 0), name-> (len-> 17, ptr-> "test11::CIterator", blk_info-> 0))
frame :  _Y6test113bazFi32Zi32 (let _ : i32)-> i32 {
    return 1;
}
frame :  [weak] _Y6test119CIterator3getNi3_0usNi3_1usMTxP18x6test119CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))), _index-> u64)))-> i32 {
    YI_1 = self-> _x;
    YI_2 = YI_1-> #_vtable;
    YI_3 = YI_2 + 40;
    YI_4 = (**YI_3)(self-> _x);
    YI_5 = YI_4.len <= self-> _index;
#IF YI_5
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_6 = "test_resources/for_loops/lst_compr_class/test11.yr";
    YI_7 = "test11::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_6, YI_7, 41);
#LABEL end(#2);
    YI_8 = 4 * self-> _index;
    YI_9 = YI_4.ptr + YI_8;
    YI_10 = cast!{*(i32)} (YI_9);
    YI_11 = *YI_10;
    return YI_11;
}
frame :  _Y6test114mainFZv ()-> void {
    __self_1 = _yrt_alloc_class(&_Y6test111AVT);
    _Y6test111A4selfCTxP10x6test111AZv(__self_1);
    YI_1 = __self_1;
    a = YI_1;
    YI_2 = a;
    YI_3 = YI_2-> #_vtable;
    YI_4 = YI_3 + 40;
    YI_5 = (**YI_4)(a);
    #_index = 0;
    YI_6 = a;
    YI_7 = YI_6-> #_vtable;
    YI_8 = YI_7 + 16;
    YI_9 = (**YI_8)(a);
    #_iter = YI_9;
    YI_10 = a;
    YI_11 = YI_10-> #_vtable;
    YI_12 = YI_11 + 32;
    YI_13 = (**YI_12)(a);
    #_end = YI_13;
    YI_14 = a;
    YI_15 = YI_14-> #_vtable;
    YI_16 = YI_15 + 24;
    YI_17 = (**YI_16)(a);
    _yrt_alloc_array_no_set(&YI_18, YI_17, 4);
    YI_19 = YI_18;
    #_value = YI_19;
#GOTO test(#6);
#LABEL beg(#5);
    YI_20 = _Y6test119CIterator3getNi3_0usNi3_1usMTxP18x6test119CIteratorZi32(#_iter);
    i = YI_20;
    YI_21 = 4 * #_index;
    YI_22 = #_value.ptr + YI_21;
    YI_23 = cast!{*(i32)} (YI_22);
    YI_24 = _Y6test113bazFi32Zi32(i);
    *YI_23 = YI_24;
    YI_25 = #_iter;
    YI_26 = YI_25-> #_vtable;
    YI_27 = YI_26 + 16;
    (**YI_27)(#_iter);
    YI_28 = #_index + 1;
    #_index = YI_28;
#LABEL test(#6);
    YI_29 = #_iter;
    YI_30 = YI_29-> #_vtable;
    YI_31 = YI_30 + 24;
    YI_32 = (**YI_31)(#_iter, #_end);
#IF ! YI_32
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_33 = #_index < YI_17;
    YI_34 = YI_33;
#GOTO end(#2);
#LABEL else(#3);
    YI_34 = ! YI_32;
#LABEL end(#2);
#IF YI_34
#THEN_GOTO beg(#5)
#ELSE_GOTO end(#4);
#LABEL end(#4);
    YI_35 = (len-> #_index, ptr-> #_value.ptr, blk_info-> #_value.blk_info);
    YI_36 = YI_35;
    _ = YI_36;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test114mainFZv);
    return 0;
}
frame :  _Y6test111A5beginMTP96test111AZxP18x6test119CIterator (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))), _index-> u64)) {
    __self_2 = _yrt_alloc_class(&_Y6test119CIteratorVT);
    _Y6test119CIterator4selfCTxP18x6test119CIteratorusizeP96test111AZv(__self_2, 0, self);
    YI_1 = __self_2;
    return YI_1;
}
frame :  _Y6test111A3lenMTP96test111AZusize (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test111A3endMTP96test111AZusize (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y6test111A6valuesMTP96test111AZS3i32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> (len-> u64, ptr-> *(i32), blk_info-> *(void)) {
    return self-> _items;
}
frame :  _Y6test111A4selfCTxP10x6test111AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, YI_3.ptr, YI_3.len, 4);
    YI_5 = YI_4;
    self-> _items = YI_5;
}
frame :  _Y4impl4nextMTxP18x6test119CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))), _index-> u64)))-> void {
    YI_1 = self-> _index + 1;
    self-> _index = YI_1;
}
frame :  _Y6test119CIterator8opEqualsMTP176test119CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))), _index-> u64)), let o : u64)-> u8 {
    YI_1 = self-> _index == o;
    return YI_1;
}
frame :  _Y6test119CIterator4selfCTxP18x6test119CIteratorusizeP96test111AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))), _index-> u64)), let index : u64, let x : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32), blk_info-> *(void)))))-> void {
    self-> _index = index;
    self-> _x = x;
}
