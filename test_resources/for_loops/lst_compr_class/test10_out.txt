frame : test10::baz (i : i32)-> i32 return i
frame : test10::bar ()-> void {
    <unit-value>
}
frame : [weak] test10::Iterator::get!{0us, 1us}::get (ref self : test10::Iterator)-> i32 return self._i
frame : test10::main ()-> void {
    let x : &(test10::A) = test10::A::self(new, 10);
    let _ : [i32] = {
            let mut #_index : usize = 0us;
            let mut #_iter : mut test10::Iterator = test10::A::begin(x);
            let #_end : i32 = test10::A::end(x);
            let mut #_value : mut [mut i32] = [<unit-value> ; new cast!{usize}(test10::A::len(x))];
            while (!test10::Iterator::opEquals(#_iter, #_end) && (#_index < cast!{usize}(test10::A::len(x)))) {
                let i : i32 = test10::Iterator::get!{0us, 1us}::get(#_iter:);
                #_value [#_index] = test10::baz (i);
                {
                    impl::next(#_iter:);
                    #_index = (#_index + 1us)
                }
            };
            {.len = #_index, .ptr = #_value.ptr, .blk = #_value.blk_info}
        };
    <unit-value>
}
frame : impl::next (mut ref self : mut test10::Iterator)-> void {
    self._i = (self._i + 1);
    <unit-value>
}
frame : test10::Iterator::opEquals (ref self : test10::Iterator, a : i32)-> bool return (self._i == a)
frame : test10::Iterator::self (mut ref self : mut test10::Iterator, i : i32)-> void {
    {
        {
            self._i = i
        }
    };
    {
        <unit-value>
    }
}
frame : test10::Iterator::Iterator (mut ref self : mut test10::Iterator)-> void {
    {
        {
            self._i = 0
        }
    };
    {
        <unit-value>
    }
}
frame : test10::Iterator::__dtor (mut ref self : mut test10::Iterator)-> void {
    test10::bar ();
    <unit-value>
}
frame : test10::A::begin (self : &(test10::A))-> test10::Iterator return test10::Iterator::self(new, 0)
frame : test10::A::len (self : &(test10::A))-> i32 return self._len
frame : test10::A::end (self : &(test10::A))-> i32 return self._len
frame : test10::A::self (mut self : mut &(mut test10::A), len : i32)-> void {
    {
        {
            self._len = len
        }
    };
    {
        <unit-value>
    }
}
frame : test10::foo ()-> void {
    <unit-value>
}
