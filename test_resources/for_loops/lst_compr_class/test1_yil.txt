const :  _Y5test11AVT [&_Y5test11ATI, 0, &_Y5test11A5beginMTP85test11AZxP17x5test19CIterator, &_Y5test11A3lenMTP85test11AZusize, &_Y5test11A3endMTP85test11AZusize, &_Y5test11A6valuesMTP85test11AZS3i32]
const :  _Y5test11ATI (typeid-> 13, size-> 32, inner-> (len-> 0, ptr-> 0), name-> (len-> 8, ptr-> "test1::A"))
const :  _Y5test19CIteratorVT [&_Y5test19CIteratorTI, 0, &_Y4impl4nextMTxP17x5test19CIteratorZv, &_Y5test19CIterator8opEqualsMTP165test19CIteratorusizeZb]
const :  _Y5test19CIteratorTI (typeid-> 13, size-> 32, inner-> (len-> 0, ptr-> 0), name-> (len-> 16, ptr-> "test1::CIterator"))
frame :  _Y5test13bazFi32Zv (let _ : i32)-> void {
}
frame :  [weak] _Y5test19CIterator3getNi3_0usNi3_1usMTxP17x5test19CIteratorZi32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)))-> i32 {
    let YI_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_3 : *(*(void));
    let YI_4 : *(*(void));
    let YI_5 : (len-> u64, ptr-> *(i32));
    let YI_6 : u8;
    let YI_7 : *(u8);
    let YI_8 : *(u8);
    let YI_9 : u64;
    let YI_10 : u64;
    let YI_11 : *(i32);
    let YI_12 : i32;
    YI_2 = self-> _x;
    YI_3 = YI_2-> #_vtable;
    YI_4 = YI_3 + 40;
    YI_5 = (**YI_4)(self-> _x);
    YI_6 = YI_5.len <= self-> _index;
#IF YI_6
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_7 = "test_resources/for_loops/lst_compr_class/test1.yr";
    YI_8 = "test1::CIterator::get!{0us, 1us}::get";
    _yrt_exc_panic(YI_7, YI_8, 38);
#LABEL end(#2);
    YI_9 = 4 * self-> _index;
    YI_10 = YI_5.ptr + YI_9;
    YI_11 = cast!{*(i32)} (YI_10);
    YI_12 = *YI_11;
    return YI_12;
}
frame :  _Y5test14mainFZv ()-> void {
    let __self_1 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let a : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let #_index : u64;
    let YI_5 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_6 : *(*(void));
    let YI_7 : *(*(void));
    let YI_8 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let #_iter : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_10 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_11 : *(*(void));
    let YI_12 : *(*(void));
    let YI_13 : u64;
    let #_end : u64;
    let YI_15 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32))));
    let YI_16 : *(*(void));
    let YI_17 : *(*(void));
    let YI_18 : u64;
    let YI_19 : *(void);
    let YI_20 : (len-> u64, ptr-> *(i32));
    let #_value : (len-> u64, ptr-> *(i32));
    let YI_28 : i32;
    let i : i32;
    let YI_30 : u64;
    let YI_31 : u64;
    let YI_32 : *(i32);
    let YI_33 : i32;
    let YI_34 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_35 : *(*(void));
    let YI_36 : *(*(void));
    let YI_37 : u64;
    let YI_22 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_23 : *(*(void));
    let YI_24 : *(*(void));
    let YI_25 : u8;
    let YI_27 : u8;
    let YI_26 : u8;
    let YI_38 : (len-> u64, ptr-> *(i32));
    let YI_39 : (len-> u64, ptr-> *(i32));
    let _ : (len-> u64, ptr-> *(i32));
    __self_1 = _yrt_alloc_class(&_Y5test11AVT);
    _Y5test11A4selfCTxP9x5test11AZv(__self_1);
    YI_2 = __self_1;
    a = YI_2;
    #_index = 0;
    YI_5 = a;
    YI_6 = YI_5-> #_vtable;
    YI_7 = YI_6 + 16;
    YI_8 = (**YI_7)(a);
    #_iter = YI_8;
    YI_10 = a;
    YI_11 = YI_10-> #_vtable;
    YI_12 = YI_11 + 32;
    YI_13 = (**YI_12)(a);
    #_end = YI_13;
    YI_15 = a;
    YI_16 = YI_15-> #_vtable;
    YI_17 = YI_16 + 24;
    YI_18 = (**YI_17)(a);
    YI_19 = _yrt_alloc_array_no_set(YI_18, 4);
    YI_20 = (len-> YI_18, ptr-> YI_19);
    #_value = YI_20;
#GOTO test(#6);
#LABEL beg(#5);
    YI_28 = _Y5test19CIterator3getNi3_0usNi3_1usMTxP17x5test19CIteratorZi32(#_iter);
    i = YI_28;
    YI_30 = 4 * #_index;
    YI_31 = #_value.ptr + YI_30;
    YI_32 = cast!{*(i32)} (YI_31);
    YI_33 = i * 2;
    *YI_32 = YI_33;
    YI_34 = #_iter;
    YI_35 = YI_34-> #_vtable;
    YI_36 = YI_35 + 16;
    (**YI_36)(#_iter);
    YI_37 = #_index + 1;
    #_index = YI_37;
#LABEL test(#6);
    YI_22 = #_iter;
    YI_23 = YI_22-> #_vtable;
    YI_24 = YI_23 + 24;
    YI_25 = (**YI_24)(#_iter, #_end);
#IF ! YI_25
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_26 = #_index < YI_18;
    YI_27 = YI_26;
#GOTO end(#2);
#LABEL else(#3);
    YI_27 = ! YI_25;
#LABEL end(#2);
#IF YI_27
#THEN_GOTO beg(#5)
#ELSE_GOTO end(#4);
#LABEL end(#4);
    YI_38 = (len-> #_index, ptr-> #_value.ptr);
    YI_39 = YI_38;
    _ = YI_39;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test14mainFZv);
    return 0;
}
frame :  _Y5test11A5beginMTP85test11AZxP17x5test19CIterator (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)) {
    let __self_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    let YI_3 : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64));
    __self_2 = _yrt_alloc_class(&_Y5test19CIteratorVT);
    _Y5test19CIterator4selfCTxP17x5test19CIteratorusizeP85test11AZv(__self_2, 0, self);
    YI_3 = __self_2;
    return YI_3;
}
frame :  _Y5test11A3lenMTP85test11AZusize (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y5test11A3endMTP85test11AZusize (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> u64 {
    return self-> _items.len;
}
frame :  _Y5test11A6valuesMTP85test11AZS3i32 (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> (len-> u64, ptr-> *(i32)) {
    return self-> _items;
}
frame :  _Y5test11A4selfCTxP9x5test11AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> void {
    let YI_2 : [i32;3];
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : (len-> u64, ptr-> *(i32));
    let YI_5 : *(void);
    let YI_6 : (len-> u64, ptr-> *(i32));
    YI_2 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_2);
    YI_4 = YI_3;
    YI_5 = _yrt_dup_slice(YI_4.ptr, YI_4.len, 4);
    YI_6 = (len-> YI_4.len, ptr-> YI_5);
    self-> _items = YI_6;
}
frame :  _Y4impl4nextMTxP17x5test19CIteratorZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)))-> void {
    let YI_2 : u64;
    YI_2 = self-> _index + 1;
    self-> _index = YI_2;
}
frame :  _Y5test19CIterator8opEqualsMTP165test19CIteratorusizeZb (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)), let o : u64)-> u8 {
    let YI_3 : u8;
    YI_3 = self-> _index == o;
    return YI_3;
}
frame :  _Y5test19CIterator4selfCTxP17x5test19CIteratorusizeP85test11AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void), _x-> *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))), _index-> u64)), let index : u64, let x : *((#_vtable-> *(*(void)), #_monitor-> *(void), _items-> (len-> u64, ptr-> *(i32)))))-> void {
    self-> _index = index;
    self-> _x = x;
}
