tuple T_6 (len-> u64, ptr-> *(i32), blk_info-> *(void));
tuple T_7 (len-> u64, ptr-> *(T_6), blk_info-> *(void));
tuple T_8 (len-> u64, ptr-> *(u8), blk_info-> *(void));
frame :  _Y6test154mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    YI_6 = [YI_5];
    YI_7 = (len-> 1, ptr-> &YI_6, blk_info-> 0);
    YI_8 = YI_7;
    _yrt_dup_slice(&YI_9, &YI_8, 24);
    YI_10 = YI_9;
    a = YI_10;
    #_value = a;
    #_iter = 0;
#GOTO test(#5);
#LABEL beg(#4);
    YI_11 = 24 * #_iter;
    YI_12 = #_value.ptr + YI_11;
    YI_13 = cast!{*(T_6)} (YI_12);
    x = *YI_13;
    YI_14 = x.len <= 0;
#IF YI_14
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_15 = "test_resources/for_loops/slices/test15.yr";
    YI_16 = "test15::main";
    _yrt_exc_panic(YI_15, YI_16, 4);
#LABEL end(#3);
    YI_17 = 4 * 0;
    YI_18 = x.ptr + YI_17;
    YI_19 = cast!{*(i32)} (YI_18);
    *YI_19 = 10;
    YI_20 = #_iter + 1;
    #_iter = YI_20;
#LABEL test(#5);
    YI_21 = #_iter < #_value.len;
#IF YI_21
#THEN_GOTO beg(#4)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test154mainFZv);
    return 0;
}
