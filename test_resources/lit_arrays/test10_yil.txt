frame :  [weak] _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize (let fst : u64, let scd : u64, let step : i64, let contains : u8)-> u64 {
    let YI_5 : (u64, u64, u64, u64);
    let YI_27 : u8;
    let fstU : u64;
    let scdU : u64;
    let YI_9 : u64;
    let YI_11 : u64;
    let YI_13 : (u64, u64, u64, u64);
    let YI_15 : (u64, u64, u64, u64);
    let fstU : u64;
    let scdU : u64;
    let YI_19 : u64;
    let YI_21 : u64;
    let YI_23 : (u64, u64, u64, u64);
    let YI_25 : (u64, u64, u64, u64);
    let YI_29 : (u64, u64, u64, u64);
    let stepU : u64;
    let fstU : u64;
    let scdU : u64;
    let subU : u64;
    let YI_35 : u64;
    let nbAll : u64;
    let YI_38 : u8;
    let YI_40 : u64;
    let YI_42 : u64;
    let YI_44 : u64;
    let last : u64;
    let YI_49 : u8;
    let YI_47 : u64;
    let YI_51 : u64;
    YI_27 = step < 0;
#IF YI_27
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#1);
    fstU = scd;
    scdU = fst;
    YI_9 = cast!{u64} (- step);
    YI_11 = scdU - fstU;
    YI_13 = (YI_9, fstU, scdU, YI_11);
    YI_15 = YI_13;
    YI_5 = YI_15;
#GOTO end(#2);
#LABEL else(#3);
    fstU = fst;
    scdU = scd;
    YI_19 = cast!{u64} (step);
    YI_21 = scdU - fstU;
    YI_23 = (YI_19, fstU, scdU, YI_21);
    YI_25 = YI_23;
    YI_5 = YI_25;
#LABEL end(#2);
    YI_29 = YI_5;
    stepU = YI_29._0;
    fstU = YI_29._1;
    scdU = YI_29._2;
    subU = YI_29._3;
    YI_35 = subU / stepU;
    nbAll = YI_35;
    YI_38 = nbAll == 18446744073709551615;
#IF YI_38
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#4);
    return nbAll;
#LABEL end(#5);
#IF contains
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#6);
    YI_40 = nbAll + 1;
    return YI_40;
#LABEL end(#7);
    YI_42 = nbAll * stepU;
    YI_44 = YI_42 + fstU;
    last = YI_44;
    YI_49 = last != scdU;
#IF YI_49
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#8);
    YI_47 = nbAll + 1;
    return YI_47;
#LABEL end(#9);
    YI_51 = nbAll;
    return YI_51;
}
frame :  [weak] _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb (let a : (len-> u64, ptr-> *(i32)), let b : (len-> u64, ptr-> *(i32)))-> u8 {
    let YI_3 : u8;
    let #_iter : u64;
    let YI_6 : u64;
    let #_nb_iter : u64;
    let i : u64;
    let YI_12 : u64;
    let YI_14 : u64;
    let YI_16 : u64;
    let YI_18 : u64;
    let YI_20 : u8;
    let YI_22 : *(i32);
    let YI_24 : i32;
    let YI_26 : u8;
    let YI_28 : *(i32);
    let YI_30 : i32;
    let YI_32 : u8;
    let YI_34 : u64;
    let YI_9 : u8;
    let YI_36 : u8;
    YI_3 = a.len != b.len;
#IF YI_3
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#1);
    return 0;
#LABEL end(#2);
    #_iter = 0;
    YI_6 = _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize(0, a.len, 1, 0);
    #_nb_iter = YI_6;
#GOTO test(#b);
#LABEL beg(#a);
    YI_12 = cast!{u64} (1);
    YI_14 = #_iter * YI_12;
    YI_16 = cast!{u64} (YI_14);
    YI_18 = 0 + YI_16;
    i = YI_18;
    YI_20 = a.len <= i;
#IF YI_20
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#4);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#5);
    YI_22 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_24 = *YI_22;
    YI_26 = b.len <= i;
#IF YI_26
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#6);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#7);
    YI_28 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_30 = *YI_28;
    YI_32 = YI_24 != YI_30;
#IF YI_32
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#8);
    return 0;
#LABEL end(#9);
    YI_34 = #_iter + 1;
    #_iter = YI_34;
#LABEL test(#b);
    YI_9 = #_iter < #_nb_iter;
#IF YI_9
#THEN_GOTO beg
#ELSE_GOTO end;
#LABEL end(#3);
    YI_36 = 1;
    return YI_36;
}
frame :  [weak] _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32 (let a : (len-> u64, ptr-> *(i32)), let b : (len-> u64, ptr-> *(i32)))-> i32 {
    let YI_3 : u64;
    let YI_5 : u8;
    let YI_7 : u64;
    let mi : u64;
    let #_iter : u64;
    let YI_11 : u64;
    let #_nb_iter : u64;
    let i : u64;
    let YI_17 : u64;
    let YI_19 : u64;
    let YI_21 : u64;
    let YI_23 : u64;
    let YI_39 : u8;
    let YI_41 : *(i32);
    let YI_43 : i32;
    let YI_45 : u8;
    let YI_47 : *(i32);
    let YI_49 : i32;
    let YI_51 : u8;
    let YI_25 : u8;
    let YI_27 : *(i32);
    let YI_29 : i32;
    let YI_31 : u8;
    let YI_33 : *(i32);
    let YI_35 : i32;
    let YI_37 : u8;
    let YI_53 : u64;
    let YI_14 : u8;
    let YI_57 : u8;
    let YI_55 : u8;
    YI_5 = b.len > a.len;
#IF YI_5
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#1);
    YI_3 = a.len;
#GOTO end(#2);
#LABEL else(#3);
    YI_3 = b.len;
#LABEL end(#2);
    YI_7 = YI_3;
    mi = YI_7;
    #_iter = 0;
    YI_11 = _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize(0, YI_7, 1, 0);
    #_nb_iter = YI_11;
#GOTO test(#j);
#LABEL beg(#i);
    YI_17 = cast!{u64} (1);
    YI_19 = #_iter * YI_17;
    YI_21 = cast!{u64} (YI_19);
    YI_23 = 0 + YI_21;
    i = YI_23;
    YI_39 = a.len <= i;
#IF YI_39
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#b);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#c);
    YI_41 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_43 = *YI_41;
    YI_45 = b.len <= i;
#IF YI_45
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#d);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#e);
    YI_47 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_49 = *YI_47;
    YI_51 = YI_43 < YI_49;
#IF YI_51
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#f);
    return -1;
#GOTO end(#g);
#LABEL else(#h);
    YI_25 = a.len <= i;
#IF YI_25
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#5);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#6);
    YI_27 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_29 = *YI_27;
    YI_31 = b.len <= i;
#IF YI_31
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#7);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#8);
    YI_33 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_35 = *YI_33;
    YI_37 = YI_29 > YI_35;
#IF YI_37
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#9);
    return 1;
#LABEL end(#a);
#LABEL end(#g);
    YI_53 = #_iter + 1;
    #_iter = YI_53;
#LABEL test(#j);
    YI_14 = #_iter < #_nb_iter;
#IF YI_14
#THEN_GOTO beg
#ELSE_GOTO end;
#LABEL end(#4);
    YI_57 = a.len > b.len;
#IF YI_57
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#n);
    return 1;
#GOTO end(#o);
#LABEL else(#p);
    YI_55 = a.len < b.len;
#IF YI_55
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#k);
    return -1;
#GOTO end(#l);
#LABEL else(#m);
    return 0;
#LABEL end(#l);
#LABEL end(#o);
}
frame :  _Y6test104mainFZv ()-> void {
    let YI_1 : [i32;5];
    let a : [i32;5];
    let YI_4 : (len-> u64, ptr-> *(i32));
    let YI_6 : [i32;5];
    let YI_8 : (len-> u64, ptr-> *(i32));
    let YI_10 : u8;
    let YI_12 : (len-> u64, ptr-> *(i32));
    let YI_14 : [i32;5];
    let YI_16 : (len-> u64, ptr-> *(i32));
    let YI_18 : i32;
    let YI_20 : u8;
    let YI_22 : (len-> u64, ptr-> *(i32));
    let YI_24 : [i32;5];
    let YI_26 : (len-> u64, ptr-> *(i32));
    let YI_28 : i32;
    let YI_30 : u8;
    let YI_32 : (len-> u64, ptr-> *(i32));
    let YI_34 : [i32;5];
    let YI_36 : (len-> u64, ptr-> *(i32));
    let YI_38 : i32;
    let YI_40 : u8;
    let YI_42 : (len-> u64, ptr-> *(i32));
    let YI_44 : [i32;5];
    let YI_46 : (len-> u64, ptr-> *(i32));
    let YI_48 : i32;
    let YI_50 : u8;
    let YI_52 : (len-> u64, ptr-> *(i32));
    let YI_54 : [i32;5];
    let YI_56 : (len-> u64, ptr-> *(i32));
    let YI_58 : u8;
    YI_1 = [1, 2, 3, 4, 5];
    a = YI_1;
    YI_4 = (len-> 5, ptr-> &a);
    YI_6 = [1, 2, 3, 4, 5];
    YI_8 = (len-> 5, ptr-> &YI_6);
    YI_10 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(YI_4, YI_8);
    _Y4core9exception5abortFbSc8Zv(YI_10, (len-> 0, ptr-> 0));
    YI_12 = (len-> 5, ptr-> &a);
    YI_14 = [2, 3, 4, 5, 6];
    YI_16 = (len-> 5, ptr-> &YI_14);
    YI_18 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_12, YI_16);
    YI_20 = YI_18 < 0;
    _Y4core9exception5abortFbSc8Zv(YI_20, (len-> 0, ptr-> 0));
    YI_22 = (len-> 5, ptr-> &a);
    YI_24 = [0, 3, 4, 5, 6];
    YI_26 = (len-> 5, ptr-> &YI_24);
    YI_28 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_22, YI_26);
    YI_30 = YI_28 > 0;
    _Y4core9exception5abortFbSc8Zv(YI_30, (len-> 0, ptr-> 0));
    YI_32 = (len-> 5, ptr-> &a);
    YI_34 = [1, 3, 4, 5, 6];
    YI_36 = (len-> 5, ptr-> &YI_34);
    YI_38 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_32, YI_36);
    YI_40 = YI_38 <= 0;
    _Y4core9exception5abortFbSc8Zv(YI_40, (len-> 0, ptr-> 0));
    YI_42 = (len-> 5, ptr-> &a);
    YI_44 = [0, 3, 4, 5, 6];
    YI_46 = (len-> 5, ptr-> &YI_44);
    YI_48 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_42, YI_46);
    YI_50 = YI_48 >= 0;
    _Y4core9exception5abortFbSc8Zv(YI_50, (len-> 0, ptr-> 0));
    YI_52 = (len-> 5, ptr-> &a);
    YI_54 = [0, 3, 4, 5, 6];
    YI_56 = (len-> 5, ptr-> &YI_54);
    YI_58 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(YI_52, YI_56);
    _Y4core9exception5abortFbSc8Zv(! YI_58, (len-> 0, ptr-> 0));
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test104mainFZv);
    return 0;
}
