frame :  [weak] _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize (let fst : u64, let scd : u64, let step : i64, let contains : u8)-> u64 {
    let YI_5 : (u64, u64, u64, u64);
    let YI_18 : u8;
    let fstU : u64;
    let scdU : u64;
    let YI_8 : u64;
    let YI_9 : u64;
    let YI_10 : (u64, u64, u64, u64);
    let YI_11 : (u64, u64, u64, u64);
    let fstU : u64;
    let scdU : u64;
    let YI_14 : u64;
    let YI_15 : u64;
    let YI_16 : (u64, u64, u64, u64);
    let YI_17 : (u64, u64, u64, u64);
    let YI_19 : (u64, u64, u64, u64);
    let stepU : u64;
    let fstU : u64;
    let scdU : u64;
    let subU : u64;
    let YI_24 : u64;
    let nbAll : u64;
    let YI_26 : u8;
    let YI_27 : u64;
    let YI_28 : u64;
    let YI_29 : u64;
    let last : u64;
    let YI_32 : u8;
    let YI_31 : u64;
    let YI_33 : u64;
    YI_18 = step < 0;
#IF YI_18
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#1);
    fstU = scd;
    scdU = fst;
    YI_8 = cast!{u64} (- step);
    YI_9 = scdU - fstU;
    YI_10 = (YI_8, fstU, scdU, YI_9);
    YI_11 = YI_10;
    YI_5 = YI_11;
#GOTO end(#2);
#LABEL else(#3);
    fstU = fst;
    scdU = scd;
    YI_14 = cast!{u64} (step);
    YI_15 = scdU - fstU;
    YI_16 = (YI_14, fstU, scdU, YI_15);
    YI_17 = YI_16;
    YI_5 = YI_17;
#LABEL end(#2);
    YI_19 = YI_5;
    stepU = YI_19._0;
    fstU = YI_19._1;
    scdU = YI_19._2;
    subU = YI_19._3;
    YI_24 = subU / stepU;
    nbAll = YI_24;
    YI_26 = nbAll == 18446744073709551615;
#IF YI_26
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#4);
    return nbAll;
#LABEL end(#5);
#IF contains
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#6);
    YI_27 = nbAll + 1;
    return YI_27;
#LABEL end(#7);
    YI_28 = nbAll * stepU;
    YI_29 = YI_28 + fstU;
    last = YI_29;
    YI_32 = last != scdU;
#IF YI_32
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#8);
    YI_31 = nbAll + 1;
    return YI_31;
#LABEL end(#9);
    YI_33 = nbAll;
    return YI_33;
}
frame :  [weak] _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb (let a : (len-> u64, ptr-> *(i32)), let b : (len-> u64, ptr-> *(i32)))-> u8 {
    let YI_3 : u8;
    let #_iter : u64;
    let YI_5 : u64;
    let #_nb_iter : u64;
    let i : u64;
    let YI_9 : u64;
    let YI_10 : u64;
    let YI_11 : u64;
    let YI_12 : u64;
    let YI_13 : u8;
    let YI_14 : *(i32);
    let YI_15 : i32;
    let YI_16 : u8;
    let YI_17 : *(i32);
    let YI_18 : i32;
    let YI_19 : u8;
    let YI_20 : u64;
    let YI_7 : u8;
    let YI_21 : u8;
    YI_3 = a.len != b.len;
#IF YI_3
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#1);
    return 0;
#LABEL end(#2);
    #_iter = 0;
    YI_5 = _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize(0, a.len, 1, 0);
    #_nb_iter = YI_5;
#GOTO test(#b);
#LABEL beg(#a);
    YI_9 = cast!{u64} (1);
    YI_10 = #_iter * YI_9;
    YI_11 = cast!{u64} (YI_10);
    YI_12 = 0 + YI_11;
    i = YI_12;
    YI_13 = a.len <= i;
#IF YI_13
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#4);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#5);
    YI_14 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_15 = *YI_14;
    YI_16 = b.len <= i;
#IF YI_16
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#6);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#7);
    YI_17 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_18 = *YI_17;
    YI_19 = YI_15 != YI_18;
#IF YI_19
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#8);
    return 0;
#LABEL end(#9);
    YI_20 = #_iter + 1;
    #_iter = YI_20;
#LABEL test(#b);
    YI_7 = #_iter < #_nb_iter;
#IF YI_7
#THEN_GOTO beg
#ELSE_GOTO end;
#LABEL end(#3);
    YI_21 = 1;
    return YI_21;
}
frame :  [weak] _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32 (let a : (len-> u64, ptr-> *(i32)), let b : (len-> u64, ptr-> *(i32)))-> i32 {
    let YI_3 : u64;
    let YI_4 : u8;
    let YI_5 : u64;
    let mi : u64;
    let #_iter : u64;
    let YI_8 : u64;
    let #_nb_iter : u64;
    let i : u64;
    let YI_12 : u64;
    let YI_13 : u64;
    let YI_14 : u64;
    let YI_15 : u64;
    let YI_23 : u8;
    let YI_24 : *(i32);
    let YI_25 : i32;
    let YI_26 : u8;
    let YI_27 : *(i32);
    let YI_28 : i32;
    let YI_29 : u8;
    let YI_16 : u8;
    let YI_17 : *(i32);
    let YI_18 : i32;
    let YI_19 : u8;
    let YI_20 : *(i32);
    let YI_21 : i32;
    let YI_22 : u8;
    let YI_30 : u64;
    let YI_10 : u8;
    let YI_32 : u8;
    let YI_31 : u8;
    YI_4 = b.len > a.len;
#IF YI_4
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#1);
    YI_3 = a.len;
#GOTO end(#2);
#LABEL else(#3);
    YI_3 = b.len;
#LABEL end(#2);
    YI_5 = YI_3;
    mi = YI_5;
    #_iter = 0;
    YI_8 = _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize(0, YI_5, 1, 0);
    #_nb_iter = YI_8;
#GOTO test(#j);
#LABEL beg(#i);
    YI_12 = cast!{u64} (1);
    YI_13 = #_iter * YI_12;
    YI_14 = cast!{u64} (YI_13);
    YI_15 = 0 + YI_14;
    i = YI_15;
    YI_23 = a.len <= i;
#IF YI_23
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#b);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#c);
    YI_24 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_25 = *YI_24;
    YI_26 = b.len <= i;
#IF YI_26
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#d);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#e);
    YI_27 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_28 = *YI_27;
    YI_29 = YI_25 < YI_28;
#IF YI_29
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#f);
    return -1;
#GOTO end(#g);
#LABEL else(#h);
    YI_16 = a.len <= i;
#IF YI_16
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#5);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#6);
    YI_17 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_18 = *YI_17;
    YI_19 = b.len <= i;
#IF YI_19
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#7);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#8);
    YI_20 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_21 = *YI_20;
    YI_22 = YI_18 > YI_21;
#IF YI_22
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#9);
    return 1;
#LABEL end(#a);
#LABEL end(#g);
    YI_30 = #_iter + 1;
    #_iter = YI_30;
#LABEL test(#j);
    YI_10 = #_iter < #_nb_iter;
#IF YI_10
#THEN_GOTO beg
#ELSE_GOTO end;
#LABEL end(#4);
    YI_32 = a.len > b.len;
#IF YI_32
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#n);
    return 1;
#GOTO end(#o);
#LABEL else(#p);
    YI_31 = a.len < b.len;
#IF YI_31
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#k);
    return -1;
#GOTO end(#l);
#LABEL else(#m);
    return 0;
#LABEL end(#l);
#LABEL end(#o);
}
frame :  _Y6test104mainFZv ()-> void {
    let YI_1 : [i32;5];
    let a : [i32;5];
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : [i32;5];
    let YI_5 : (len-> u64, ptr-> *(i32));
    let YI_6 : u8;
    let YI_7 : (len-> u64, ptr-> *(i32));
    let YI_8 : [i32;5];
    let YI_9 : (len-> u64, ptr-> *(i32));
    let YI_10 : i32;
    let YI_11 : u8;
    let YI_12 : (len-> u64, ptr-> *(i32));
    let YI_13 : [i32;5];
    let YI_14 : (len-> u64, ptr-> *(i32));
    let YI_15 : i32;
    let YI_16 : u8;
    let YI_17 : (len-> u64, ptr-> *(i32));
    let YI_18 : [i32;5];
    let YI_19 : (len-> u64, ptr-> *(i32));
    let YI_20 : i32;
    let YI_21 : u8;
    let YI_22 : (len-> u64, ptr-> *(i32));
    let YI_23 : [i32;5];
    let YI_24 : (len-> u64, ptr-> *(i32));
    let YI_25 : i32;
    let YI_26 : u8;
    let YI_27 : (len-> u64, ptr-> *(i32));
    let YI_28 : [i32;5];
    let YI_29 : (len-> u64, ptr-> *(i32));
    let YI_30 : u8;
    YI_1 = [1, 2, 3, 4, 5];
    a = YI_1;
    YI_3 = (len-> 5, ptr-> &a);
    YI_4 = [1, 2, 3, 4, 5];
    YI_5 = (len-> 5, ptr-> &YI_4);
    YI_6 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(YI_3, YI_5);
    _Y4core9exception5abortFbSc8Zv(YI_6, (len-> 0, ptr-> 0));
    YI_7 = (len-> 5, ptr-> &a);
    YI_8 = [2, 3, 4, 5, 6];
    YI_9 = (len-> 5, ptr-> &YI_8);
    YI_10 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_7, YI_9);
    YI_11 = YI_10 < 0;
    _Y4core9exception5abortFbSc8Zv(YI_11, (len-> 0, ptr-> 0));
    YI_12 = (len-> 5, ptr-> &a);
    YI_13 = [0, 3, 4, 5, 6];
    YI_14 = (len-> 5, ptr-> &YI_13);
    YI_15 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_12, YI_14);
    YI_16 = YI_15 > 0;
    _Y4core9exception5abortFbSc8Zv(YI_16, (len-> 0, ptr-> 0));
    YI_17 = (len-> 5, ptr-> &a);
    YI_18 = [1, 3, 4, 5, 6];
    YI_19 = (len-> 5, ptr-> &YI_18);
    YI_20 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_17, YI_19);
    YI_21 = YI_20 <= 0;
    _Y4core9exception5abortFbSc8Zv(YI_21, (len-> 0, ptr-> 0));
    YI_22 = (len-> 5, ptr-> &a);
    YI_23 = [0, 3, 4, 5, 6];
    YI_24 = (len-> 5, ptr-> &YI_23);
    YI_25 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(YI_22, YI_24);
    YI_26 = YI_25 >= 0;
    _Y4core9exception5abortFbSc8Zv(YI_26, (len-> 0, ptr-> 0));
    YI_27 = (len-> 5, ptr-> &a);
    YI_28 = [0, 3, 4, 5, 6];
    YI_29 = (len-> 5, ptr-> &YI_28);
    YI_30 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(YI_27, YI_29);
    _Y4core9exception5abortFbSc8Zv(! YI_30, (len-> 0, ptr-> 0));
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test104mainFZv);
    return 0;
}
