frame : [weak] core::array::opCmp!{i32, 5us, [i32 ; 5us]}::opCmp (a : [i32 ; 5us], b : [i32 ; 5us])-> i32 {
    {
        let i : usize = 0us;
        while (i < 5us) {
            {
                if (#{
                    if (5us <= i) core::array::outOfArray ();
                    a [i]
                #} < #{
                    if (5us <= i) core::array::outOfArray ();
                    b [i]
                #}) {
                    return -1;
                    <unit-value>
                } else if (#{
                    if (5us <= i) core::array::outOfArray ();
                    a [i]
                #} > #{
                    if (5us <= i) core::array::outOfArray ();
                    b [i]
                #}) {
                    return 1;
                    <unit-value>
                }
            };
            i = (i + 1us)
        }
    };
    0
}
frame : test10::main ()-> void {
    let a : [i32 ; 5us] = [1, 2, 3, 4, 5];
    core::exception::abort ((core::array::opCmp!{i32, 5us, [i32 ; 5us]}::opCmp (a, [1, 2, 3, 4, 5]) == 0), (""s8)[]);
    core::exception::abort ((core::array::opCmp!{i32, 5us, [i32 ; 5us]}::opCmp (a, [2, 3, 4, 5, 6]) < 0), (""s8)[]);
    core::exception::abort ((core::array::opCmp!{i32, 5us, [i32 ; 5us]}::opCmp (a, [0, 3, 4, 5, 6]) > 0), (""s8)[]);
    core::exception::abort ((core::array::opCmp!{i32, 5us, [i32 ; 5us]}::opCmp (a, [1, 3, 4, 5, 6]) <= 0), (""s8)[]);
    core::exception::abort ((core::array::opCmp!{i32, 5us, [i32 ; 5us]}::opCmp (a, [0, 3, 4, 5, 6]) >= 0), (""s8)[]);
    core::exception::abort ((core::array::opCmp!{i32, 5us, [i32 ; 5us]}::opCmp (a, [0, 3, 4, 5, 6]) != 0), (""s8)[]);
    <unit-value>
}
