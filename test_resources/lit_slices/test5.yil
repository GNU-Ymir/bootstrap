pointer P_1 *(void);
pointer P_2 *(P_1);
pointer P_8 *(i32);
tuple T_9 (len-> u64, ptr-> P_8, blk_info-> P_1);
pointer P_10 *(T_9);
tuple T_11 (len-> u64, ptr-> P_10, blk_info-> P_1);
pointer P_12 *(T_11);
pointer P_13 *(u8);
tuple T_14 (len-> u64, ptr-> P_13, blk_info-> P_1);
tuple T_15 (len-> u64, ptr-> P_12, blk_info-> P_1);
pointer P_16 *(T_15);
frame :  [weak] _Y4core5types5array13deepCopySliceNS3i32NS5S3i32FS5S3i32ZxS7xS4xi32 (let a : T_11)-> T_11 {
    YI_1 = a.len == 0;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = (len-> 0, ptr-> 0, blk_info-> 0);
    return YI_2;
#LABEL end(#2);
    YI_3 = (len-> 0, ptr-> 0, blk_info-> 0);
    res = YI_3;
    _yrt_alloc_slice_no_set(&res, a.len, 24);
    #_value = a;
    i = 0;
#GOTO test(#7);
#LABEL beg(#6);
    YI_4 = 24 * i;
    YI_5 = #_value.ptr + YI_4;
    YI_6 = cast!{P_10} (YI_5);
    ti = *YI_6;
    YI_7 = res.len <= i;
#IF YI_7
#THEN_GOTO then(#4)
#ELSE_GOTO end(#5);
#LABEL then(#4);
    YI_8 = "/usr/include/ymir/core/types/array.yr";
    YI_9 = "core::types::array::deepCopySlice!{[i32], [[i32]]}::deepCopySlice";
    _yrt_exc_panic(YI_8, YI_9, 51);
#LABEL end(#5);
    YI_10 = 24 * i;
    YI_11 = res.ptr + YI_10;
    YI_12 = cast!{P_10} (YI_11);
    YI_13 = ti;
    _yrt_dup_slice(&YI_14, &YI_13, 4);
    YI_15 = YI_14;
    *YI_12 = YI_15;
    YI_16 = i + 1;
    i = YI_16;
#LABEL test(#7);
    YI_17 = i < #_value.len;
#IF YI_17
#THEN_GOTO beg(#6)
#ELSE_GOTO end(#3);
#LABEL end(#3);
    return res;
}
frame :  [weak] _Y4core5types5array13deepCopySliceNS5S3i32NS7S5S3i32FS7S5S3i32ZxS10xS7xS4xi32 (let a : T_15)-> T_15 {
    YI_1 = a.len == 0;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = (len-> 0, ptr-> 0, blk_info-> 0);
    return YI_2;
#LABEL end(#2);
    YI_3 = (len-> 0, ptr-> 0, blk_info-> 0);
    res = YI_3;
    _yrt_alloc_slice_no_set(&res, a.len, 24);
    #_value = a;
    i = 0;
#GOTO test(#7);
#LABEL beg(#6);
    YI_4 = 24 * i;
    YI_5 = #_value.ptr + YI_4;
    YI_6 = cast!{P_12} (YI_5);
    ti = *YI_6;
    YI_7 = res.len <= i;
#IF YI_7
#THEN_GOTO then(#4)
#ELSE_GOTO end(#5);
#LABEL then(#4);
    YI_8 = "/usr/include/ymir/core/types/array.yr";
    YI_9 = "core::types::array::deepCopySlice!{[[i32]], [[[i32]]]}::deepCopySlice";
    _yrt_exc_panic(YI_8, YI_9, 51);
#LABEL end(#5);
    YI_10 = 24 * i;
    YI_11 = res.ptr + YI_10;
    YI_12 = cast!{P_12} (YI_11);
    YI_13 = _Y4core5types5array13deepCopySliceNS3i32NS5S3i32FS5S3i32ZxS7xS4xi32(ti);
    *YI_12 = YI_13;
    YI_14 = i + 1;
    i = YI_14;
#LABEL test(#7);
    YI_15 = i < #_value.len;
#IF YI_15
#THEN_GOTO beg(#6)
#ELSE_GOTO end(#3);
#LABEL end(#3);
    return res;
}
frame :  _Y5test54mainFZv ()-> void {
    YI_1 = (len-> 0, ptr-> 0, blk_info-> 0);
    a = YI_1;
    YI_2 = _Y4core5types5array13deepCopySliceNS5S3i32NS7S5S3i32FS7S5S3i32ZxS10xS7xS4xi32(a);
    b = YI_2;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test54mainFZv);
    return 0;
}
