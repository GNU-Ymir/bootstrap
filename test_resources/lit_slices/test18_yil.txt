const :  _Y6test181AVT [&_Y6test181ATI, 0]
const :  _Y6test181ATI (typeid-> 13, size-> 16, inner-> (len-> 0, ptr-> 0), name-> (len-> 9, ptr-> "test18::A"))
const :  _Y6test181BVT [&_Y6test181BTI, 0]
const :  _Y6test181BTI (typeid-> 13, size-> 16, inner-> (len-> 1, ptr-> &_Y6test181ATI), name-> (len-> 9, ptr-> "test18::B"))
frame :  _Y6test184mainFZv ()-> void {
    let __self_1 : *((#_vtable-> *(*(void)), #_monitor-> *(void)));
    let YI_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void)));
    let __self_3 : *((#_vtable-> *(*(void)), #_monitor-> *(void)));
    let YI_4 : *((#_vtable-> *(*(void)), #_monitor-> *(void)));
    let YI_5 : [*((#_vtable-> *(*(void)), #_monitor-> *(void)));2];
    let YI_6 : (len-> u64, ptr-> *(*((#_vtable-> *(*(void)), #_monitor-> *(void)))));
    let YI_7 : (len-> u64, ptr-> *(*((#_vtable-> *(*(void)), #_monitor-> *(void)))));
    let YI_8 : *(void);
    let YI_9 : (len-> u64, ptr-> *(*((#_vtable-> *(*(void)), #_monitor-> *(void)))));
    let b : (len-> u64, ptr-> *(*((#_vtable-> *(*(void)), #_monitor-> *(void)))));
    let _ : (len-> u64, ptr-> *(*((#_vtable-> *(*(void)), #_monitor-> *(void)))));
    __self_1 = _yrt_alloc_class(&_Y6test181BVT);
    _Y6test181B4selfCTP10x6test181BZv(__self_1);
    YI_2 = __self_1;
    __self_3 = _yrt_alloc_class(&_Y6test181BVT);
    _Y6test181B4selfCTP10x6test181BZv(__self_3);
    YI_4 = __self_3;
    YI_5 = [YI_2, YI_4];
    YI_6 = (len-> 2, ptr-> &YI_5);
    YI_7 = YI_6;
    YI_8 = _yrt_dup_slice(YI_7.ptr, YI_7.len, 8);
    YI_9 = (len-> YI_7.len, ptr-> YI_8);
    b = YI_9;
    _ = b;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test184mainFZv);
    return 0;
}
frame :  _Y6test181A4selfCTP10x6test181AZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void))))-> void {
}
frame :  _Y6test181B4selfCTP10x6test181BZv (let self : *((#_vtable-> *(*(void)), #_monitor-> *(void))))-> void {
    let YI_2 : *((#_vtable-> *(*(void)), #_monitor-> *(void)));
    _Y6test181A4selfCTP10x6test181AZv(self);
    YI_2 = self;
}
