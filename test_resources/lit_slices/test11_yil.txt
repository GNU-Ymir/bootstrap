frame :  [weak] _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize (let fst : u64, let scd : u64, let step : i64, let contains : u8)-> u64 {
    let YI_5 : (u64, u64, u64, u64);
    let YI_27 : u8;
    let fstU : u64;
    let scdU : u64;
    let YI_9 : u64;
    let YI_11 : u64;
    let YI_13 : (u64, u64, u64, u64);
    let YI_15 : (u64, u64, u64, u64);
    let fstU : u64;
    let scdU : u64;
    let YI_19 : u64;
    let YI_21 : u64;
    let YI_23 : (u64, u64, u64, u64);
    let YI_25 : (u64, u64, u64, u64);
    let YI_29 : (u64, u64, u64, u64);
    let stepU : u64;
    let fstU : u64;
    let scdU : u64;
    let subU : u64;
    let YI_35 : u64;
    let nbAll : u64;
    let YI_38 : u8;
    let YI_40 : u64;
    let YI_42 : u64;
    let YI_44 : u64;
    let last : u64;
    let YI_49 : u8;
    let YI_47 : u64;
    let YI_51 : u64;
    YI_27 = step < 0;
#IF YI_27
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#1);
    fstU = scd;
    scdU = fst;
    YI_9 = cast!{u64} (- step);
    YI_11 = scdU - fstU;
    YI_13 = (YI_9, fstU, scdU, YI_11);
    YI_15 = YI_13;
    YI_5 = YI_15;
#GOTO end(#2);
#LABEL else(#3);
    fstU = fst;
    scdU = scd;
    YI_19 = cast!{u64} (step);
    YI_21 = scdU - fstU;
    YI_23 = (YI_19, fstU, scdU, YI_21);
    YI_25 = YI_23;
    YI_5 = YI_25;
#LABEL end(#2);
    YI_29 = YI_5;
    stepU = YI_29._0;
    fstU = YI_29._1;
    scdU = YI_29._2;
    subU = YI_29._3;
    YI_35 = subU / stepU;
    nbAll = YI_35;
    YI_38 = nbAll == 18446744073709551615;
#IF YI_38
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#4);
    return nbAll;
#LABEL end(#5);
#IF contains
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#6);
    YI_40 = nbAll + 1;
    return YI_40;
#LABEL end(#7);
    YI_42 = nbAll * stepU;
    YI_44 = YI_42 + fstU;
    last = YI_44;
    YI_49 = last != scdU;
#IF YI_49
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#8);
    YI_47 = nbAll + 1;
    return YI_47;
#LABEL end(#9);
    YI_51 = nbAll;
    return YI_51;
}
frame :  [weak] _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32 (let a : (len-> u64, ptr-> *(i32)), let b : (len-> u64, ptr-> *(i32)))-> i32 {
    let YI_3 : u64;
    let YI_9 : u8;
    let YI_5 : u64;
    let YI_7 : u64;
    let YI_11 : u64;
    let mi : u64;
    let #_iter : u64;
    let YI_15 : i64;
    let YI_17 : u8;
    let YI_19 : i64;
    let YI_21 : (fst-> u64, scd-> u64, step-> i64, contain-> u8);
    let YI_23 : u64;
    let #_nb_iter : u64;
    let i : u64;
    let YI_29 : u64;
    let YI_31 : u64;
    let YI_33 : u64;
    let YI_35 : u64;
    let YI_51 : u8;
    let YI_53 : *(i32);
    let YI_55 : i32;
    let YI_57 : u8;
    let YI_59 : *(i32);
    let YI_61 : i32;
    let YI_63 : u8;
    let YI_37 : u8;
    let YI_39 : *(i32);
    let YI_41 : i32;
    let YI_43 : u8;
    let YI_45 : *(i32);
    let YI_47 : i32;
    let YI_49 : u8;
    let YI_65 : u64;
    let YI_26 : u8;
    let YI_69 : u8;
    let YI_67 : u8;
    YI_9 = b.len > a.len;
#IF YI_9
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#1);
    YI_5 = a.len;
    YI_3 = YI_5;
#GOTO end(#2);
#LABEL else(#3);
    YI_7 = b.len;
    YI_3 = YI_7;
#LABEL end(#2);
    YI_11 = YI_3;
    mi = YI_11;
    #_iter = 0;
    YI_17 = 0 < mi;
#IF YI_17
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#4);
    YI_15 = 1;
#GOTO end(#5);
#LABEL else(#6);
    YI_15 = -1;
#LABEL end(#5);
    YI_19 = YI_15;
    YI_21 = (fst-> 0, scd-> mi, step-> YI_19, contain-> 0);
    YI_23 = _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize(0, YI_21.scd, YI_21.step, 0);
    #_nb_iter = YI_23;
#GOTO test(#m);
#LABEL beg(#l);
    YI_29 = cast!{u64} (YI_21.step);
    YI_31 = #_iter * YI_29;
    YI_33 = cast!{u64} (YI_31);
    YI_35 = 0 + YI_33;
    i = YI_35;
    YI_51 = a.len <= i;
#IF YI_51
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#e);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#f);
    YI_53 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_55 = *YI_53;
    YI_57 = b.len <= i;
#IF YI_57
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#g);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#h);
    YI_59 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_61 = *YI_59;
    YI_63 = YI_55 < YI_61;
#IF YI_63
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#i);
    return -1;
#GOTO end(#j);
#LABEL else(#k);
    YI_37 = a.len <= i;
#IF YI_37
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#8);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#9);
    YI_39 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_41 = *YI_39;
    YI_43 = b.len <= i;
#IF YI_43
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#a);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#b);
    YI_45 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_47 = *YI_45;
    YI_49 = YI_41 > YI_47;
#IF YI_49
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#c);
    return 1;
#LABEL end(#d);
#LABEL end(#j);
    YI_65 = #_iter + 1;
    #_iter = YI_65;
#LABEL test(#m);
    YI_26 = #_iter < #_nb_iter;
#IF YI_26
#THEN_GOTO beg
#ELSE_GOTO end;
#LABEL end(#7);
    YI_69 = a.len > b.len;
#IF YI_69
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#q);
    return 1;
#GOTO end(#r);
#LABEL else(#s);
    YI_67 = a.len < b.len;
#IF YI_67
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#n);
    return -1;
#GOTO end(#o);
#LABEL else(#p);
    return 0;
#LABEL end(#o);
#LABEL end(#r);
}
frame :  [weak] _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb (let a : (len-> u64, ptr-> *(i32)), let b : (len-> u64, ptr-> *(i32)))-> u8 {
    let YI_3 : u8;
    let #_iter : u64;
    let YI_6 : i64;
    let YI_8 : u8;
    let YI_10 : i64;
    let YI_12 : (fst-> u64, scd-> u64, step-> i64, contain-> u8);
    let YI_14 : u64;
    let #_nb_iter : u64;
    let i : u64;
    let YI_20 : u64;
    let YI_22 : u64;
    let YI_24 : u64;
    let YI_26 : u64;
    let YI_28 : u8;
    let YI_30 : *(i32);
    let YI_32 : i32;
    let YI_34 : u8;
    let YI_36 : *(i32);
    let YI_38 : i32;
    let YI_40 : u8;
    let YI_42 : u64;
    let YI_17 : u8;
    let YI_44 : u8;
    YI_3 = a.len != b.len;
#IF YI_3
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#1);
    return 0;
#LABEL end(#2);
    #_iter = 0;
    YI_8 = 0 < a.len;
#IF YI_8
#THEN_GOTO then
#ELSE_GOTO else;
#LABEL then(#3);
    YI_6 = 1;
#GOTO end(#4);
#LABEL else(#5);
    YI_6 = -1;
#LABEL end(#4);
    YI_10 = YI_6;
    YI_12 = (fst-> 0, scd-> a.len, step-> YI_10, contain-> 0);
    YI_14 = _Y4core5range17countNbIterationsNusizeNisizeFusizeusizeisizebZusize(0, YI_12.scd, YI_12.step, 0);
    #_nb_iter = YI_14;
#GOTO test(#e);
#LABEL beg(#d);
    YI_20 = cast!{u64} (YI_12.step);
    YI_22 = #_iter * YI_20;
    YI_24 = cast!{u64} (YI_22);
    YI_26 = 0 + YI_24;
    i = YI_26;
    YI_28 = a.len <= i;
#IF YI_28
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#7);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#8);
    YI_30 = cast!{*(i32)} (a.ptr + 4 * i);
    YI_32 = *YI_30;
    YI_34 = b.len <= i;
#IF YI_34
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#9);
    _Y4core5array10outOfArrayFZv();
#LABEL end(#a);
    YI_36 = cast!{*(i32)} (b.ptr + 4 * i);
    YI_38 = *YI_36;
    YI_40 = YI_32 != YI_38;
#IF YI_40
#THEN_GOTO then
#ELSE_GOTO end;
#LABEL then(#b);
    return 0;
#LABEL end(#c);
    YI_42 = #_iter + 1;
    #_iter = YI_42;
#LABEL test(#e);
    YI_17 = #_iter < #_nb_iter;
#IF YI_17
#THEN_GOTO beg
#ELSE_GOTO end;
#LABEL end(#6);
    YI_44 = 1;
    return YI_44;
}
frame :  _Y6test114mainFZv ()-> void {
    let YI_1 : [i32;3];
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_5 : (len-> u64, ptr-> *(i32));
    let a : (len-> u64, ptr-> *(i32));
    let YI_8 : [i32;2];
    let b : [i32;2];
    let YI_11 : (len-> u64, ptr-> *(i32));
    let YI_13 : i32;
    let YI_15 : u8;
    let YI_17 : (len-> u64, ptr-> *(i32));
    let YI_19 : i32;
    let YI_21 : u8;
    let YI_23 : (len-> u64, ptr-> *(i32));
    let YI_25 : i32;
    let YI_27 : u8;
    let YI_29 : (len-> u64, ptr-> *(i32));
    let YI_31 : i32;
    let YI_33 : u8;
    let YI_35 : (len-> u64, ptr-> *(i32));
    let YI_37 : u8;
    let YI_39 : (len-> u64, ptr-> *(i32));
    let YI_41 : u8;
    let YI_43 : [i32;3];
    let YI_45 : (len-> u64, ptr-> *(i32));
    let YI_47 : (len-> u64, ptr-> *(i32));
    let c : (len-> u64, ptr-> *(i32));
    let YI_50 : i32;
    let YI_52 : u8;
    let YI_54 : i32;
    let YI_56 : u8;
    let YI_58 : i32;
    let YI_60 : u8;
    let YI_62 : i32;
    let YI_64 : u8;
    let YI_66 : u8;
    let YI_68 : u8;
    YI_1 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_1);
    YI_5 = _yrt_dup_slice(YI_3, 4);
    a = YI_5;
    YI_8 = [4, 5];
    b = YI_8;
    YI_11 = (len-> 2, ptr-> &b);
    YI_13 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, YI_11);
    YI_15 = YI_13 < 0;
    YI_17 = (len-> 2, ptr-> &b);
    YI_19 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, YI_17);
    YI_21 = YI_19 <= 0;
    YI_23 = (len-> 2, ptr-> &b);
    YI_25 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, YI_23);
    YI_27 = YI_25 > 0;
    YI_29 = (len-> 2, ptr-> &b);
    YI_31 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, YI_29);
    YI_33 = YI_31 >= 0;
    YI_35 = (len-> 2, ptr-> &b);
    YI_37 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(a, YI_35);
    YI_39 = (len-> 2, ptr-> &b);
    YI_41 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(a, YI_39);
    YI_43 = [4, 5, 6];
    YI_45 = (len-> 3, ptr-> &YI_43);
    YI_47 = _yrt_dup_slice(YI_45, 4);
    c = YI_47;
    YI_50 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, c);
    YI_52 = YI_50 < 0;
    YI_54 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, c);
    YI_56 = YI_54 <= 0;
    YI_58 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, c);
    YI_60 = YI_58 > 0;
    YI_62 = _Y4core5array5opCmpNi32NSi32FSi32Si32Zi32(a, c);
    YI_64 = YI_62 >= 0;
    YI_66 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(a, c);
    YI_68 = _Y4core5array8opEqualsNi32NSi32FSi32Si32Zb(a, c);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test114mainFZv);
    return 0;
}
