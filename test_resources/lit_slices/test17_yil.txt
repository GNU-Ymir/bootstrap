frame :  _Y6test174mainFZv ()-> void {
    let YI_1 : [i32;4];
    let YI_2 : (len-> u64, ptr-> *(i32));
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : *(void);
    let YI_5 : (len-> u64, ptr-> *(i32));
    let a : (len-> u64, ptr-> *(i32));
    let #_value : (len-> u64, ptr-> *(i32));
    let elem : i32;
    let i : u64;
    let YI_11 : u64;
    let YI_12 : u64;
    let YI_13 : *(i32);
    let YI_14 : u8;
    let YI_15 : *(u8);
    let YI_16 : *(u8);
    let YI_17 : u64;
    let YI_18 : u64;
    let YI_19 : *(i32);
    let YI_20 : i32;
    let YI_21 : u64;
    let YI_10 : u8;
    YI_1 = [1, 2, 3, 4];
    YI_2 = (len-> 4, ptr-> &YI_1);
    YI_3 = YI_2;
    YI_4 = _yrt_dup_slice(YI_3.ptr, YI_3.len, 4);
    YI_5 = (len-> YI_3.len, ptr-> YI_4);
    a = YI_5;
    #_value = a;
    i = 0;
#GOTO test(#5);
#LABEL beg(#4);
    YI_11 = 4 * i;
    YI_12 = #_value.ptr + YI_11;
    YI_13 = cast!{*(i32)} (YI_12);
    elem = *YI_13;
    YI_14 = a.len <= i;
#IF YI_14
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_15 = "/home/emile/ymir/bootstrap/gyc/gcc-src/gcc/ymir/bootstrap/test_resources/lit_slices/test17.yr";
    YI_16 = "test17::main";
    _yrt_exc_panic(YI_15, YI_16, 6);
#LABEL end(#3);
    YI_17 = 4 * i;
    YI_18 = a.ptr + YI_17;
    YI_19 = cast!{*(i32)} (YI_18);
    YI_20 = elem * 2;
    *YI_19 = YI_20;
    YI_21 = i + 1;
    i = YI_21;
#LABEL test(#5);
    YI_10 = i < #_value.len;
#IF YI_10
#THEN_GOTO beg(#4)
#ELSE_GOTO end(#1);
#LABEL end(#1);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test174mainFZv);
    return 0;
}
