frame :  _Y5test14mainFZv ()-> void {
    YI_1 = _Y5test13fooFZxS4xi32();
    a = YI_1;
    YI_2 = a.len <= 10;
#IF YI_2
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_3 = "test_resources/lit_slices/test1.yr";
    YI_4 = "test1::main";
    _yrt_exc_panic(YI_3, YI_4, 10);
#LABEL end(#2);
    YI_5 = 4 * 10;
    YI_6 = a.ptr + YI_5;
    YI_7 = cast!{*(i32)} (YI_6);
    YI_8 = *YI_7;
    YI_9 = a.len < 7;
#IF YI_9
#THEN_GOTO then(#3)
#ELSE_GOTO end(#4);
#LABEL then(#3);
    YI_10 = "test_resources/lit_slices/test1.yr";
    YI_11 = "test1::main";
    _yrt_exc_panic(YI_10, YI_11, 11);
#LABEL end(#4);
    YI_12 = 0 * 4;
    YI_13 = a.ptr + YI_12;
    YI_14 = (len-> 7, ptr-> YI_13, blk_info-> a.blk_info);
    YI_15 = YI_14;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test14mainFZv);
    return 0;
}
frame :  _Y5test13fooFZxS4xi32 ()-> (len-> u64, ptr-> *(i32), blk_info-> *(void)) {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    return YI_5;
}
