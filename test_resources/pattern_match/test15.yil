pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_7 (#_vtable-> P_2, #_monitor-> P_1);
pointer P_8 *(T_7);
tuple T_9 (@union, error-> P_8, value-> i32);
tuple T_10 (hasValue-> u8, content-> T_9);
frame :  _Y6test154mainFZv ()-> void {
    YI_1 = _Y6test153fooFZO3i32();
    #_value = YI_1;
    YI_2 = #_value.hasValue;
#IF YI_2
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    x = #_value.content.value;
    YI_3 = x == 12;
    YI_4 = YI_3;
    YI_5 = YI_4;
#GOTO end(#2);
#LABEL else(#3);
    YI_5 = YI_2;
#LABEL end(#2);
#IF YI_5
#THEN_GOTO then(#c)
#ELSE_GOTO else(#e);
#LABEL then(#c);
#GOTO end(#d);
#LABEL else(#e);
    YI_6 = #_value.hasValue;
#IF YI_6
#THEN_GOTO then(#7)
#ELSE_GOTO else(#9);
#LABEL then(#7);
    x = #_value.content.value;
    YI_7 = x != 3;
#IF YI_7
#THEN_GOTO then(#4)
#ELSE_GOTO else(#6);
#LABEL then(#4);
    YI_8 = x != 4;
    YI_9 = YI_8;
#GOTO end(#5);
#LABEL else(#6);
    YI_9 = YI_7;
#LABEL end(#5);
    YI_10 = YI_9;
    YI_11 = YI_10;
#GOTO end(#8);
#LABEL else(#9);
    YI_11 = YI_6;
#LABEL end(#8);
#IF YI_11
#THEN_GOTO then(#a)
#ELSE_GOTO end(#b);
#LABEL then(#a);
#LABEL end(#b);
#LABEL end(#d);
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y6test154mainFZv);
    return 0;
}
