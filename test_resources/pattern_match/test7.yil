pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_7 (#_vtable-> P_2, #_monitor-> P_1);
pointer P_8 *(T_7);
tuple T_9 (@union, error-> P_8, value-> i32);
tuple T_10 (hasValue-> u8, content-> T_9);
tuple T_11 (len-> u64, ptr-> P_2, blk_info-> P_1);
tuple T_12 (#_vtable-> P_2, #_monitor-> P_1, trace-> T_11);
pointer P_13 *(T_12);
pointer P_14 *(u8);
tuple T_15 (len-> u64, ptr-> P_14, blk_info-> P_1);
tuple T_16 (#_vtable-> P_2, #_monitor-> P_1, trace-> T_11, msg-> T_15);
pointer P_17 *(T_16);
frame :  _Y5test73fooFbZO3i32 (let a : u8)-> T_10 {
#IF a
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_1 = (hasValue-> 1, content-> (value-> 12));
#GOTO end(#2);
#LABEL else(#3);
    YI_1 = (hasValue-> 0, content-> (error-> 0));
#LABEL end(#2);
    return YI_1;
}
frame :  _Y5test74mainFZv ()-> void {
    YI_1 = _Y5test73fooFbZO3i32(0);
    #_value = YI_1;
    YI_2 = #_value.hasValue;
#IF YI_2
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_3 = #_value.content.value == 12;
    YI_4 = YI_3;
#GOTO end(#2);
#LABEL else(#3);
    YI_4 = YI_2;
#LABEL end(#2);
#IF YI_4
#THEN_GOTO then(#x)
#ELSE_GOTO else(#z);
#LABEL then(#x);
#GOTO end(#y);
#LABEL else(#z);
    YI_5 = #_value.hasValue;
#IF YI_5
#THEN_GOTO then(#4)
#ELSE_GOTO else(#6);
#LABEL then(#4);
    x = #_value.content.value;
    YI_6 = 1;
    YI_7 = YI_6;
#GOTO end(#5);
#LABEL else(#6);
    YI_7 = YI_5;
#LABEL end(#5);
#IF YI_7
#THEN_GOTO then(#u)
#ELSE_GOTO else(#w);
#LABEL then(#u);
#GOTO end(#v);
#LABEL else(#w);
    YI_8 = ! #_value.hasValue;
#IF YI_8
#THEN_GOTO then(#r)
#ELSE_GOTO else(#t);
#LABEL then(#r);
#GOTO end(#s);
#LABEL else(#t);
    YI_9 = ! #_value.hasValue;
#IF YI_9
#THEN_GOTO then(#7)
#ELSE_GOTO else(#9);
#LABEL then(#7);
    YI_10 = #_value.content.error != 0;
    YI_11 = YI_10;
#GOTO end(#8);
#LABEL else(#9);
    YI_11 = YI_9;
#LABEL end(#8);
#IF YI_11
#THEN_GOTO then(#a)
#ELSE_GOTO else(#c);
#LABEL then(#a);
    YI_12 = #_value.content.error-> #_vtable;
    YI_13 = _yrt_cmp_class_of_type(&_Y4core9exception9assertion11AssertErrorTI, YI_12);
#GOTO end(#b);
#LABEL else(#c);
    YI_13 = YI_11;
#LABEL end(#b);
#IF YI_13
#THEN_GOTO then(#d)
#ELSE_GOTO else(#f);
#LABEL then(#d);
    YI_14 = cast!{P_17} (#_value.content.error);
    x = YI_14;
    YI_15 = 1;
    YI_16 = YI_15;
#GOTO end(#e);
#LABEL else(#f);
    YI_16 = YI_13;
#LABEL end(#e);
#IF YI_16
#THEN_GOTO then(#o)
#ELSE_GOTO else(#q);
#LABEL then(#o);
#GOTO end(#p);
#LABEL else(#q);
    YI_17 = ! #_value.hasValue;
#IF YI_17
#THEN_GOTO then(#g)
#ELSE_GOTO else(#i);
#LABEL then(#g);
    YI_18 = #_value.content.error != 0;
    YI_19 = YI_18;
#GOTO end(#h);
#LABEL else(#i);
    YI_19 = YI_17;
#LABEL end(#h);
#IF YI_19
#THEN_GOTO then(#j)
#ELSE_GOTO else(#l);
#LABEL then(#j);
    x = #_value.content.error;
    YI_20 = 1;
    YI_21 = YI_20;
#GOTO end(#k);
#LABEL else(#l);
    YI_21 = YI_19;
#LABEL end(#k);
#IF YI_21
#THEN_GOTO then(#m)
#ELSE_GOTO end(#n);
#LABEL then(#m);
#LABEL end(#n);
#LABEL end(#p);
#LABEL end(#s);
#LABEL end(#v);
#LABEL end(#y);
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test74mainFZv);
    return 0;
}
