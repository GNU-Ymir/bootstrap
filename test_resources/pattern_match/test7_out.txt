frame : test7::main ()-> void {
    let mut #_value : (i32)? = test7::foo (false);
    if (#_value.hasValue && (#_value.value == 12)) {
        <unit-value>
    } else if (#_value.hasValue && #{
        let x : i32 = #_value.value;
        true
    #}) {
        <unit-value>
    } else if !#_value.hasValue {
        <unit-value>
    } else if (((!#_value.hasValue && (#_value.error != null)) && (#_value.error of core::exception::assertion::AssertError)) && #{
        let x : &(core::exception::assertion::AssertError) = cast!{mut &(mut core::exception::assertion::AssertError)}(#_value.error);
        true
    #}) {
        <unit-value>
    } else if ((!#_value.hasValue && (#_value.error != null)) && #{
        let x : &(core::exception::Exception) = #_value.error;
        true
    #}) {
        <unit-value>
    }
}
frame : test7::foo (a : bool)-> (i32)? return if a (12)? else none
