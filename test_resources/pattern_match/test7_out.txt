frame : test7::main ()-> void if (test7::foo (false).hasValue && (test7::foo (false).value == 12)) {
    <unit-value>
} else if test7::foo (false).hasValue {
    let x : i32 = test7::foo (false).value;
    {
        x;
        <unit-value>
    }
} else if !test7::foo (false).hasValue {
    <unit-value>
} else if ((!test7::foo (false).hasValue && (test7::foo (false).error != null)) && (test7::foo (false).error of core::exception::AssertError)) {
    let x : &(core::exception::AssertError) = test7::foo (false).error;
    {
        x;
        <unit-value>
    }
} else if (!test7::foo (false).hasValue && (test7::foo (false).error != null)) {
    let x : &(core::exception::Exception) = test7::foo (false).error;
    {
        x;
        <unit-value>
    }
}
frame : test7::foo (a : bool)-> (i32)? return if a (12)? else none
