frame :  _Y5test74mainFZv ()-> void {
    let YI_1 : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    let YI_3 : u8;
    let YI_2 : u8;
    let x : i32;
    let YI_6 : u8;
    let YI_5 : u8;
    let YI_8 : u8;
    let YI_7 : *(*(void));
    let YI_9 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void))), msg-> (len-> u64, ptr-> *(u8))));
    let x : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void))), msg-> (len-> u64, ptr-> *(u8))));
    let YI_12 : u8;
    let YI_11 : u8;
    let x : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    YI_1 = _Y5test73fooFbZO3i32(0);
#IF YI_1.hasValue
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_2 = YI_1.content.value == 12;
    YI_3 = YI_2;
#GOTO end(#2);
#LABEL else(#3);
    YI_3 = YI_1.hasValue;
#LABEL end(#2);
#IF YI_3
#THEN_GOTO then(#o)
#ELSE_GOTO else(#q);
#LABEL then(#o);
#GOTO end(#p);
#LABEL else(#q);
#IF YI_1.hasValue
#THEN_GOTO then(#l)
#ELSE_GOTO else(#n);
#LABEL then(#l);
    x = YI_1.content.value;
#GOTO end(#m);
#LABEL else(#n);
#IF ! YI_1.hasValue
#THEN_GOTO then(#i)
#ELSE_GOTO else(#k);
#LABEL then(#i);
#GOTO end(#j);
#LABEL else(#k);
#IF ! YI_1.hasValue
#THEN_GOTO then(#4)
#ELSE_GOTO else(#6);
#LABEL then(#4);
    YI_5 = YI_1.content.error != 0;
    YI_6 = YI_5;
#GOTO end(#5);
#LABEL else(#6);
    YI_6 = ! YI_1.hasValue;
#LABEL end(#5);
#IF YI_6
#THEN_GOTO then(#7)
#ELSE_GOTO else(#9);
#LABEL then(#7);
    YI_7 = YI_1.content.error-> #_vtable;
    YI_8 = _yrt_cmp_class_of_type(&_Y4core9exception11AssertErrorVT, YI_7);
#GOTO end(#8);
#LABEL else(#9);
    YI_8 = YI_6;
#LABEL end(#8);
#IF YI_8
#THEN_GOTO then(#f)
#ELSE_GOTO else(#h);
#LABEL then(#f);
    YI_9 = cast!{*((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void))), msg-> (len-> u64, ptr-> *(u8))))} (YI_1.content.error);
    x = YI_9;
#GOTO end(#g);
#LABEL else(#h);
#IF ! YI_1.hasValue
#THEN_GOTO then(#a)
#ELSE_GOTO else(#c);
#LABEL then(#a);
    YI_11 = YI_1.content.error != 0;
    YI_12 = YI_11;
#GOTO end(#b);
#LABEL else(#c);
    YI_12 = ! YI_1.hasValue;
#LABEL end(#b);
#IF YI_12
#THEN_GOTO then(#d)
#ELSE_GOTO end(#e);
#LABEL then(#d);
    x = YI_1.content.error;
#LABEL end(#e);
#LABEL end(#g);
#LABEL end(#j);
#LABEL end(#m);
#LABEL end(#p);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test74mainFZv);
    return 0;
}
frame :  _Y5test73fooFbZO3i32 (let a : u8)-> (hasValue-> u8, content-> (@union, error-> *(void), value-> i32)) {
    let YI_2 : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    let YI_3 : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
#IF a
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_2 = (hasValue-> 1, content-> (value-> 12));
#GOTO end(#2);
#LABEL else(#3);
    YI_2 = (hasValue-> 0, content-> (error-> 0));
#LABEL end(#2);
    YI_3 = YI_2;
    return YI_3;
}
