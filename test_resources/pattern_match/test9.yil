tuple T_6 (len-> u64, ptr-> *(i32), blk_info-> *(void));
tuple T_7 (len-> u64, ptr-> *(u8), blk_info-> *(void));
frame :  _Y5test94mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    x = YI_5;
    YI_6 = x.len >= 1;
#IF YI_6
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_7 = 4 * 0;
    YI_8 = x.ptr + YI_7;
    YI_9 = cast!{*(i32)} (YI_8);
    YI_10 = *YI_9 == 1;
    YI_11 = YI_10;
#GOTO end(#2);
#LABEL else(#3);
    YI_11 = YI_6;
#LABEL end(#2);
#IF YI_11
#THEN_GOTO then(#4)
#ELSE_GOTO else(#6);
#LABEL then(#4);
    YI_12 = 4 * 0;
    YI_13 = x.ptr + YI_12;
    YI_14 = cast!{*(i32)} (YI_13);
    a = cast!{*(i32)} (YI_14);
    YI_15 = x.len - 1;
    YI_16 = 1 * 4;
    YI_17 = x.ptr + YI_16;
    YI_18 = (len-> YI_15, ptr-> YI_17, blk_info-> x.blk_info);
    b = YI_18;
    YI_19 = 1;
    YI_20 = YI_19;
#GOTO end(#5);
#LABEL else(#6);
    YI_20 = YI_11;
#LABEL end(#5);
#IF YI_20
#THEN_GOTO then(#9)
#ELSE_GOTO end(#a);
#LABEL then(#9);
    YI_21 = b.len <= 0;
#IF YI_21
#THEN_GOTO then(#7)
#ELSE_GOTO end(#8);
#LABEL then(#7);
    YI_22 = "test_resources/pattern_match/test9.yr";
    YI_23 = "test9::main";
    _yrt_exc_panic(YI_22, YI_23, 6);
#LABEL end(#8);
    YI_24 = 4 * 0;
    YI_25 = b.ptr + YI_24;
    YI_26 = cast!{*(i32)} (YI_25);
    *YI_26 = 9;
    *a = 8;
#LABEL end(#a);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test94mainFZv);
    return 0;
}
