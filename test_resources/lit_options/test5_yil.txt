frame :  _Y5test53barFZv ()-> void {
    let c : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    c = (hasValue-> 1, content-> (value-> 13));
}
frame :  _Y5test54mainFZv ()-> void {
    let YI_1 : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    let a : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    let YI_3 : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    let b : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    let __self_5 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_6 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_7 : i32;
    let __self_8 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_9 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_10 : i32;
    let YI_14 : u8;
    let YI_13 : u8;
    let __self_11 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_12 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_15 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_19 : u8;
    let YI_18 : u8;
    let __self_16 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_17 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    let YI_20 : *((#_vtable-> *(*(void)), #_monitor-> *(void), trace-> (len-> u64, ptr-> *(*(void)))));
    YI_1 = _Y5test53fooFbZO3i32(0);
    a = YI_1;
    YI_3 = _Y5test53fooFbZO3i32(1);
    b = YI_3;
#IF ! a.hasValue
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    __self_5 = _yrt_alloc_class(&_Y4core9exception14EmptyValOptionVT);
    _Y4core9exception14EmptyValOption4selfFP32x4core9exception14EmptyValOptionZv(__self_5);
    YI_6 = __self_5;
    _yrt_exc_throw((len-> 93, ptr-> [47, 104, 111, 109, 101, 47, 101, 109, 105, 108, 101, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 103, 121, 99, 47, 103, 99, 99, 45, 115, 114, 99, 47, 103, 99, 99, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 116, 101, 115, 116, 95, 114, 101, 115, 111, 117, 114, 99, 101, 115, 47, 108, 105, 116, 95, 111, 112, 116, 105, 111, 110, 115, 47, 116, 101, 115, 116, 53, 46, 121, 114, 0]).ptr, (len-> 11, ptr-> [116, 101, 115, 116, 53, 58, 58, 109, 97, 105, 110, 0]).ptr, 20, YI_6);
#LABEL end(#2);
    YI_7 = a.content.value;
#IF ! b.hasValue
#THEN_GOTO then(#3)
#ELSE_GOTO end(#4);
#LABEL then(#3);
    __self_8 = _yrt_alloc_class(&_Y4core9exception14EmptyValOptionVT);
    _Y4core9exception14EmptyValOption4selfFP32x4core9exception14EmptyValOptionZv(__self_8);
    YI_9 = __self_8;
    _yrt_exc_throw((len-> 93, ptr-> [47, 104, 111, 109, 101, 47, 101, 109, 105, 108, 101, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 103, 121, 99, 47, 103, 99, 99, 45, 115, 114, 99, 47, 103, 99, 99, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 116, 101, 115, 116, 95, 114, 101, 115, 111, 117, 114, 99, 101, 115, 47, 108, 105, 116, 95, 111, 112, 116, 105, 111, 110, 115, 47, 116, 101, 115, 116, 53, 46, 121, 114, 0]).ptr, (len-> 11, ptr-> [116, 101, 115, 116, 53, 58, 58, 109, 97, 105, 110, 0]).ptr, 21, YI_9);
#LABEL end(#4);
    YI_10 = b.content.value;
#IF a.hasValue
#THEN_GOTO then(#5)
#ELSE_GOTO else(#7);
#LABEL then(#5);
    YI_14 = a.hasValue;
#GOTO end(#6);
#LABEL else(#7);
    YI_13 = a.content.error == 0;
    YI_14 = YI_13;
#LABEL end(#6);
#IF YI_14
#THEN_GOTO then(#8)
#ELSE_GOTO end(#9);
#LABEL then(#8);
    __self_11 = _yrt_alloc_class(&_Y4core9exception14EmptyErrOptionVT);
    _Y4core9exception14EmptyErrOption4selfFP32x4core9exception14EmptyErrOptionZv(__self_11);
    YI_12 = __self_11;
    _yrt_exc_throw((len-> 93, ptr-> [47, 104, 111, 109, 101, 47, 101, 109, 105, 108, 101, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 103, 121, 99, 47, 103, 99, 99, 45, 115, 114, 99, 47, 103, 99, 99, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 116, 101, 115, 116, 95, 114, 101, 115, 111, 117, 114, 99, 101, 115, 47, 108, 105, 116, 95, 111, 112, 116, 105, 111, 110, 115, 47, 116, 101, 115, 116, 53, 46, 121, 114, 0]).ptr, (len-> 11, ptr-> [116, 101, 115, 116, 53, 58, 58, 109, 97, 105, 110, 0]).ptr, 23, YI_12);
#LABEL end(#9);
    YI_15 = a.content.error;
#IF b.hasValue
#THEN_GOTO then(#a)
#ELSE_GOTO else(#c);
#LABEL then(#a);
    YI_19 = b.hasValue;
#GOTO end(#b);
#LABEL else(#c);
    YI_18 = b.content.error == 0;
    YI_19 = YI_18;
#LABEL end(#b);
#IF YI_19
#THEN_GOTO then(#d)
#ELSE_GOTO end(#e);
#LABEL then(#d);
    __self_16 = _yrt_alloc_class(&_Y4core9exception14EmptyErrOptionVT);
    _Y4core9exception14EmptyErrOption4selfFP32x4core9exception14EmptyErrOptionZv(__self_16);
    YI_17 = __self_16;
    _yrt_exc_throw((len-> 93, ptr-> [47, 104, 111, 109, 101, 47, 101, 109, 105, 108, 101, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 103, 121, 99, 47, 103, 99, 99, 45, 115, 114, 99, 47, 103, 99, 99, 47, 121, 109, 105, 114, 47, 98, 111, 111, 116, 115, 116, 114, 97, 112, 47, 116, 101, 115, 116, 95, 114, 101, 115, 111, 117, 114, 99, 101, 115, 47, 108, 105, 116, 95, 111, 112, 116, 105, 111, 110, 115, 47, 116, 101, 115, 116, 53, 46, 121, 114, 0]).ptr, (len-> 11, ptr-> [116, 101, 115, 116, 53, 58, 58, 109, 97, 105, 110, 0]).ptr, 24, YI_17);
#LABEL end(#e);
    YI_20 = b.content.error;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test54mainFZv);
    return 0;
}
frame :  _Y5test53fooFbZO3i32 (let x : u8)-> (hasValue-> u8, content-> (@union, error-> *(void), value-> i32)) {
    let YI_2 : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
    let YI_3 : (hasValue-> u8, content-> (@union, error-> *(void), value-> i32));
#IF x
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_2 = (hasValue-> 1, content-> (value-> 12));
#GOTO end(#2);
#LABEL else(#3);
    YI_2 = (hasValue-> 0, content-> (error-> 0));
#LABEL end(#2);
    YI_3 = YI_2;
    return YI_3;
}
