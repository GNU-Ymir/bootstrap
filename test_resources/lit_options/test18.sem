frame : test18::main ()-> void {
    let mut a : mut [mut i32] = {
            let mut #_iter : usize = 0us;
            let mut #_value : mut [mut i32] = [<unit-value> ; new 10us];
            while (#_iter < 10us) {
                let i : i32;
                i = cast!{i32}(#_iter);
                #_value [#_iter] = i;
                #_iter = (#_iter + 1us)
            };
            #_value
        };
    let f : i32 = #{
            if (a.len <= 0us) panic;
            a [0us]
        #};
    a = alias (#{
            if (a.len < 1us) panic;
            {.len = (a.len - 1us), .ptr = (a.ptr + (1us * 4us)), .blk = a.blk_info}
        #});
    if !(f == 0) throw core::exception::assertion::AssertError::self(new, ""s8);
    <unit-value>
}
