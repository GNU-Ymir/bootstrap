const : [weak] _YMP10S2c8_S3i32MI (&_Y4core5types3map11compareKeysNS2c8FP4S2c8P4S2c8Zb, &_Y4core5types3map7hashKeyNS2c8FP4S2c8Zu64, 24, 24)
frame :  [weak] _Y4core5types3map11compareKeysNS2c8FP4S2c8P4S2c8Zb (let a : *((len-> u64, ptr-> *(u8), blk_info-> *(void))), let b : *((len-> u64, ptr-> *(u8), blk_info-> *(void))))-> u8 {
    YI_1 = _Y4core5types5array8opEqualsFS2c8S2c8Zb(*a, *b);
    return YI_1;
}
frame :  [weak] _Y4core5types3map7hashKeyNS2c8FP4S2c8Zu64 (let a : *((len-> u64, ptr-> *(u8), blk_info-> *(void))))-> u64 {
    YI_1 = _Y4core5types4hash6__hashNc8NS2c8FS2c8Zu64(*a);
    return YI_1;
}
frame :  [weak] _Y4core5types4hash6__hashNc8NS2c8FS2c8Zu64 (let a : (len-> u64, ptr-> *(u8), blk_info-> *(void)))-> u64 {
    p = 31;
    m = 1000000009;
    res = 0;
    p_pow = 1;
    #_value = a;
    #_iter = 0;
#GOTO test(#3);
#LABEL beg(#2);
    YI_1 = 1 * #_iter;
    YI_2 = #_value.ptr + YI_1;
    YI_3 = cast!{*(u8)} (YI_2);
    c = *YI_3;
    YI_4 = _Y4core5types4hash6__hashFc8Zu64(c);
    YI_5 = YI_4 + 1;
    YI_6 = YI_5 * p_pow;
    YI_7 = res + YI_6;
    YI_8 = YI_7 % m;
    res = YI_8;
    YI_9 = p_pow * p;
    YI_10 = YI_9 % m;
    p_pow = YI_10;
    YI_11 = #_iter + 1;
    #_iter = YI_11;
#LABEL test(#3);
    YI_12 = #_iter < #_value.len;
#IF YI_12
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_13 = res;
    return YI_13;
}
frame :  _Y5test24mainFZv ()-> void {
    _yrt_map_empty(&__map_1, &_YMP10S2c8_S3i32MI);
    YI_1 = (len-> 3, ptr-> "foo", blk_info-> 0);
    YI_2 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_2, blk_info-> 0);
    YI_4 = YI_3;
    _yrt_dup_slice(&YI_5, &YI_4, 4);
    YI_6 = YI_5;
    _yrt_map_insert(&__map_1, &YI_1, &YI_6);
    YI_7 = (len-> 3, ptr-> "bar", blk_info-> 0);
    YI_8 = [2, 3, 4];
    YI_9 = (len-> 3, ptr-> &YI_8, blk_info-> 0);
    YI_10 = YI_9;
    _yrt_dup_slice(&YI_11, &YI_10, 4);
    YI_12 = YI_11;
    _yrt_map_insert(&__map_1, &YI_7, &YI_12);
    YI_13 = __map_1;
    a = YI_13;
    try {
        YI_14 = (len-> 3, ptr-> "foo", blk_info-> 0);
        YI_15 = _yrt_map_find(&a, &YI_14);
    #IF YI_15 == 0
    #THEN_GOTO then(#1)
    #ELSE_GOTO else(#3);
    #LABEL then(#1);
        YI_16 = (hasValue-> 0, content-> (error-> 0));
    #GOTO end(#2);
    #LABEL else(#3);
        YI_16 = (hasValue-> 1, content-> (value-> *YI_15));
    #LABEL end(#2);
        YI_17 = ! YI_16.hasValue;
    #IF YI_17
    #THEN_GOTO then(#4)
    #ELSE_GOTO end(#5);
    #LABEL then(#4);
        __self_20 = _yrt_alloc_class(&_Y4core9exception6option14EmptyValOptionVT);
        _Y4core9exception6option14EmptyValOption4selfCTxP39x4core9exception6option14EmptyValOptionZv(__self_20);
        YI_18 = __self_20;
        YI_19 = "test_resources/lit_map/test2.yr";
        YI_20 = "test2::main";
        _yrt_exc_throw(YI_19, YI_20, 5, YI_18);
    #LABEL end(#5);
        YI_21 = YI_16.content.value;
        YI_22 = YI_21.len <= 1;
    #IF YI_22
    #THEN_GOTO then(#6)
    #ELSE_GOTO end(#7);
    #LABEL then(#6);
        YI_23 = "test_resources/lit_map/test2.yr";
        YI_24 = "test2::main";
        _yrt_exc_panic(YI_23, YI_24, 5);
    #LABEL end(#7);
        YI_25 = 4 * 1;
        YI_26 = YI_21.ptr + YI_25;
        YI_27 = cast!{*(i32)} (YI_26);
        *YI_27 = 9;
        YI_28 = (len-> 3, ptr-> "foo", blk_info-> 0);
        YI_29 = _yrt_map_find(&a, &YI_28);
    #IF YI_29 == 0
    #THEN_GOTO then(#8)
    #ELSE_GOTO else(#a);
    #LABEL then(#8);
        YI_30 = (hasValue-> 0, content-> (error-> 0));
    #GOTO end(#9);
    #LABEL else(#a);
        YI_30 = (hasValue-> 1, content-> (value-> *YI_29));
    #LABEL end(#9);
        YI_31 = ! YI_30.hasValue;
    #IF YI_31
    #THEN_GOTO then(#b)
    #ELSE_GOTO end(#c);
    #LABEL then(#b);
        __self_35 = _yrt_alloc_class(&_Y4core9exception6option14EmptyValOptionVT);
        _Y4core9exception6option14EmptyValOption4selfCTxP39x4core9exception6option14EmptyValOptionZv(__self_35);
        YI_32 = __self_35;
        YI_33 = "test_resources/lit_map/test2.yr";
        YI_34 = "test2::main";
        _yrt_exc_throw(YI_33, YI_34, 6, YI_32);
    #LABEL end(#c);
        YI_35 = YI_30.content.value;
        YI_36 = YI_35.len <= 1;
    #IF YI_36
    #THEN_GOTO then(#d)
    #ELSE_GOTO end(#e);
    #LABEL then(#d);
        YI_37 = "test_resources/lit_map/test2.yr";
        YI_38 = "test2::main";
        _yrt_exc_panic(YI_37, YI_38, 6);
    #LABEL end(#e);
        YI_39 = 4 * 1;
        YI_40 = YI_35.ptr + YI_39;
        YI_41 = cast!{*(i32)} (YI_40);
        YI_42 = *YI_41;
        YI_43 = YI_42 == 9;
        YI_44 = ! YI_43;
    #IF YI_44
    #THEN_GOTO then(#f)
    #ELSE_GOTO end(#g);
    #LABEL then(#f);
        __self_49 = _yrt_alloc_class(&_Y4core9exception9assertion11AssertErrorVT);
        _Y4core9exception9assertion11AssertError4selfCTxP39x4core9exception9assertion11AssertErrorS2c8Zv(__self_49, (len-> 0, ptr-> 0, blk_info-> 0));
        YI_45 = __self_49;
        YI_46 = "test_resources/lit_map/test2.yr";
        YI_47 = "test2::main";
        _yrt_exc_throw(YI_46, YI_47, 6, YI_45);
    #LABEL end(#g);
    }
    catch{
        #_catch = _yrt_exc_begin_catch (ephtr (0));
    #IF 1
    #THEN_GOTO then(#h)
    #ELSE_GOTO else(#j);
    #LABEL then(#h);
        YI_48 = 1;
    #GOTO end(#i);
    #LABEL else(#j);
        YI_48 = 1;
    #LABEL end(#i);
    #IF YI_48
    #THEN_GOTO then(#k)
    #ELSE_GOTO else(#m);
    #LABEL then(#k);
        _ = #_catch;
        YI_49 = 1;
        YI_50 = YI_49;
    #GOTO end(#l);
    #LABEL else(#m);
        YI_50 = YI_48;
    #LABEL end(#l);
    #IF YI_50
    #THEN_GOTO then(#n)
    #ELSE_GOTO end(#o);
    #LABEL then(#n);
        YI_51 = "test_resources/lit_map/test2.yr";
        YI_52 = "test2::main";
        _yrt_exc_panic(YI_51, YI_52, 9);
    #LABEL end(#o);
    };
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test24mainFZv);
    return 0;
}
