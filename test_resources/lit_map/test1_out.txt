frame : [weak] etc::runtime::map::hashKey!{i32}::hashKey (a : *i32)-> u64 return core::hash::__hash (*(a))
frame : [weak] etc::runtime::map::compareKeys!{i32}::compareKeys (a : *i32, b : *i32)-> bool {
    {
        return (*(a) == *(b));
        <unit-value>
    }
}
frame : test1::main ()-> void {
    let mut a : mut [i32 => mut i32] = test1::foo ();
    try {
        {
            (a [1])?
        }
    } catch {
        let #_catch : mut &(mut core::exception::Exception)
        {
            none
        }
    };
    a [2] = 9;
    <unit-value>
}
frame : test1::foo ()-> mut [i32 => mut i32] return [1 => 2, 2 => 3]
