const : [weak] _YMP10S2c8_S3i32MI (&_Y4core5types3map11compareKeysNS2c8FP4S2c8P4S2c8Zb, &_Y4core5types3map7hashKeyNS2c8FP4S2c8Zu64, 24, 24)
const : [weak] _YMP8S2c8_i32MI (&_Y4core5types3map11compareKeysNS2c8FP4S2c8P4S2c8Zb, &_Y4core5types3map7hashKeyNS2c8FP4S2c8Zu64, 24, 4)
frame :  [weak] _Y4core5types3map11compareKeysNS2c8FP4S2c8P4S2c8Zb (let a : *((len-> u64, ptr-> *(u8), blk_info-> *(void))), let b : *((len-> u64, ptr-> *(u8), blk_info-> *(void))))-> u8 {
    YI_1 = _Y4core5types5array8opEqualsFS2c8S2c8Zb(*a, *b);
    return YI_1;
}
frame :  [weak] _Y4core5types3map11deepCopyMapNS2c8NS3i32FMP10S2c8_S3i32ZxMP12S2c8_xS4xi32 (let a : (blk_info-> *(void), data-> *(void), cap-> u64, used-> u64, len-> u64))-> (blk_info-> *(void), data-> *(void), cap-> u64, used-> u64, len-> u64) {
    _yrt_map_empty(&__map_2, &_YMP10S2c8_S3i32MI);
    YI_1 = __map_2;
    res = YI_1;
    #_iter = _yrt_map_iter_begin(&a);
#GOTO test(#3);
#LABEL beg(#2);
    k = cast!{*((len-> u64, ptr-> *(u8), blk_info-> *(void)))} (_yrt_map_iter_key(#_iter));
    v = *_yrt_map_iter_val(#_iter);
    YI_2 = v;
    _yrt_dup_slice(&YI_3, &YI_2, 4);
    YI_4 = YI_3;
    _yrt_map_insert(&res, cast!{*((len-> u64, ptr-> *(u8), blk_info-> *(void)))} (k), &YI_4);
    _yrt_map_iter_next(#_iter);
#LABEL test(#3);
#IF _yrt_map_iter_end(#_iter)
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    _yrt_map_iter_del(#_iter);
    return res;
}
frame :  [weak] _Y4core5types3map7hashKeyNS2c8FP4S2c8Zu64 (let a : *((len-> u64, ptr-> *(u8), blk_info-> *(void))))-> u64 {
    YI_1 = _Y4core5types4hash6__hashNc8NS2c8FS2c8Zu64(*a);
    return YI_1;
}
frame :  [weak] _Y4core5types4hash6__hashNc8NS2c8FS2c8Zu64 (let a : (len-> u64, ptr-> *(u8), blk_info-> *(void)))-> u64 {
    p = 31;
    m = 1000000009;
    res = 0;
    p_pow = 1;
    #_value = a;
    #_iter = 0;
#GOTO test(#3);
#LABEL beg(#2);
    YI_1 = 1 * #_iter;
    YI_2 = #_value.ptr + YI_1;
    YI_3 = cast!{*(u8)} (YI_2);
    c = *YI_3;
    YI_4 = _Y4core5types4hash6__hashFc8Zu64(c);
    YI_5 = YI_4 + 1;
    YI_6 = YI_5 * p_pow;
    YI_7 = res + YI_6;
    YI_8 = YI_7 % m;
    res = YI_8;
    YI_9 = p_pow * p;
    YI_10 = YI_9 % m;
    p_pow = YI_10;
    YI_11 = #_iter + 1;
    #_iter = YI_11;
#LABEL test(#3);
    YI_12 = #_iter < #_value.len;
#IF YI_12
#THEN_GOTO beg(#2)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_13 = res;
    return YI_13;
}
frame :  _Y5test64mainFZv ()-> void {
    _yrt_map_empty(&__map_1, &_YMP8S2c8_i32MI);
    YI_1 = (len-> 3, ptr-> "foo", blk_info-> 0);
    YI_2 = 1;
    _yrt_map_insert(&__map_1, &YI_1, &YI_2);
    YI_3 = (len-> 3, ptr-> "bar", blk_info-> 0);
    YI_4 = 2;
    _yrt_map_insert(&__map_1, &YI_3, &YI_4);
    YI_5 = __map_1;
    a = YI_5;
    _yrt_dup_map(&__map_8, &_YMP8S2c8_i32MI, &a);
    YI_6 = __map_8;
    _b_ = YI_6;
    _yrt_map_empty(&__map_11, &_YMP10S2c8_S3i32MI);
    YI_7 = (len-> 3, ptr-> "foo", blk_info-> 0);
    YI_8 = [1, 2];
    YI_9 = (len-> 2, ptr-> &YI_8, blk_info-> 0);
    YI_10 = YI_9;
    _yrt_dup_slice(&YI_11, &YI_10, 4);
    YI_12 = YI_11;
    _yrt_map_insert(&__map_11, &YI_7, &YI_12);
    YI_13 = __map_11;
    c = YI_13;
    YI_14 = _Y4core5types3map11deepCopyMapNS2c8NS3i32FMP10S2c8_S3i32ZxMP12S2c8_xS4xi32(c);
    d = YI_14;
    try {
        YI_15 = (len-> 3, ptr-> "foo", blk_info-> 0);
        YI_16 = _yrt_map_find(&d, &YI_15);
    #IF YI_16 == 0
    #THEN_GOTO then(#1)
    #ELSE_GOTO end(#2);
    #LABEL then(#1);
        __self_24 = _yrt_alloc_class(&_Y4core9exception3map9KeyErrMapVT);
        _Y4core9exception3map9KeyErrMap4selfCTxP30x4core9exception3map9KeyErrMapZv(__self_24);
        YI_17 = __self_24;
        YI_18 = "test_resources/lit_map/test6.yr";
        YI_19 = "test6::main";
        _yrt_exc_throw(YI_18, YI_19, 9, YI_17);
    #LABEL end(#2);
        YI_20 = YI_16-> len <= 0;
    #IF YI_20
    #THEN_GOTO then(#3)
    #ELSE_GOTO end(#4);
    #LABEL then(#3);
        YI_21 = "test_resources/lit_map/test6.yr";
        YI_22 = "test6::main";
        _yrt_exc_panic(YI_21, YI_22, 9);
    #LABEL end(#4);
        YI_23 = 4 * 0;
        YI_24 = YI_16-> ptr + YI_23;
        YI_25 = cast!{*(i32)} (YI_24);
        *YI_25 = 9;
        YI_26 = (len-> 3, ptr-> "foo", blk_info-> 0);
        YI_27 = _yrt_map_find(&c, &YI_26);
    #IF YI_27 == 0
    #THEN_GOTO then(#5)
    #ELSE_GOTO end(#6);
    #LABEL then(#5);
        __self_36 = _yrt_alloc_class(&_Y4core9exception3map9KeyErrMapVT);
        _Y4core9exception3map9KeyErrMap4selfCTxP30x4core9exception3map9KeyErrMapZv(__self_36);
        YI_28 = __self_36;
        YI_29 = "test_resources/lit_map/test6.yr";
        YI_30 = "test6::main";
        _yrt_exc_throw(YI_29, YI_30, 10, YI_28);
    #LABEL end(#6);
        YI_31 = YI_27-> len <= 0;
    #IF YI_31
    #THEN_GOTO then(#7)
    #ELSE_GOTO end(#8);
    #LABEL then(#7);
        YI_32 = "test_resources/lit_map/test6.yr";
        YI_33 = "test6::main";
        _yrt_exc_panic(YI_32, YI_33, 10);
    #LABEL end(#8);
        YI_34 = 4 * 0;
        YI_35 = YI_27-> ptr + YI_34;
        YI_36 = cast!{*(i32)} (YI_35);
        YI_37 = *YI_36;
        YI_38 = YI_37 == 1;
    #IF ! YI_38
    #THEN_GOTO then(#9)
    #ELSE_GOTO end(#a);
    #LABEL then(#9);
        __self_48 = _yrt_alloc_class(&_Y4core9exception9assertion11AssertErrorVT);
        _Y4core9exception9assertion11AssertError4selfCTxP39x4core9exception9assertion11AssertErrorS2c8Zv(__self_48, (len-> 0, ptr-> 0, blk_info-> 0));
        YI_39 = __self_48;
        YI_40 = "test_resources/lit_map/test6.yr";
        YI_41 = "test6::main";
        _yrt_exc_throw(YI_40, YI_41, 10, YI_39);
    #LABEL end(#a);
    }
    catch{
        #_catch = _yrt_exc_begin_catch (ephtr (0));
    #IF 1
    #THEN_GOTO then(#b)
    #ELSE_GOTO else(#d);
    #LABEL then(#b);
        YI_42 = 1;
    #GOTO end(#c);
    #LABEL else(#d);
        YI_42 = 1;
    #LABEL end(#c);
    #IF YI_42
    #THEN_GOTO then(#e)
    #ELSE_GOTO else(#g);
    #LABEL then(#e);
        _ = #_catch;
        YI_43 = 1;
        YI_44 = YI_43;
    #GOTO end(#f);
    #LABEL else(#g);
        YI_44 = YI_42;
    #LABEL end(#f);
    #IF YI_44
    #THEN_GOTO then(#h)
    #ELSE_GOTO end(#i);
    #LABEL then(#h);
        YI_45 = "test_resources/lit_map/test6.yr";
        YI_46 = "test6::main";
        _yrt_exc_panic(YI_45, YI_46, 12);
    #LABEL end(#i);
    };
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test64mainFZv);
    return 0;
}
