const : [weak] _YMP7i32_i32MI (&_Y4core4hash3map11compareKeysNi32FP3i32P3i32Zb, &_Y4core4hash3map7hashKeyNi32FP3i32Zu64, 4, 4)
frame :  [weak] _Y4core4hash3map7hashKeyNi32FP3i32Zu64 (let a : *(i32))-> u64 {
    YI_1 = _Y4core4hash6implem6__hashFi32Zu64(*a);
    return YI_1;
}
frame :  [weak] _Y4core4hash3map11compareKeysNi32FP3i32P3i32Zb (let a : *(i32), let b : *(i32))-> u8 {
    YI_1 = *a == *b;
    return YI_1;
}
frame :  _Y5test14mainFZv ()-> void {
    YI_1 = _Y5test13fooFZxMP8i32_xi32();
    a = YI_1;
    try {
        YI_2 = 1;
        YI_3 = _yrt_map_find(&a, &YI_2);
    #IF YI_3 == 0
    #THEN_GOTO then(#1)
    #ELSE_GOTO end(#2);
    #LABEL then(#1);
        __self_6 = _yrt_alloc_class(&_Y4core9exception3map9KeyErrMapVT);
        _Y4core9exception3map9KeyErrMap4selfCTxP30x4core9exception3map9KeyErrMapZv(__self_6);
        YI_4 = __self_6;
        YI_5 = "test_resources/lit_map/test1.yr";
        YI_6 = "test1::main";
        _yrt_exc_throw(YI_5, YI_6, 7, YI_4);
    #LABEL end(#2);
        YI_7 = (hasValue-> 1, content-> (value-> *YI_3));
        YI_8 = YI_7;
    }
    catch{
        #_catch = _yrt_exc_begin_catch (ephtr (0));
        YI_9 = (hasValue-> 0, content-> (error-> 0));
        YI_8 = YI_9;
    };
    YI_10 = 2;
    YI_11 = 9;
    _yrt_map_insert(&a, &YI_10, &YI_11);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test14mainFZv);
    return 0;
}
frame :  _Y5test13fooFZxMP8i32_xi32 ()-> (blk_info-> *(void), data-> *(void), cap-> u64, used-> u64, len-> u64) {
    _yrt_map_empty(&__map_1, &_YMP7i32_i32MI);
    YI_1 = 1;
    YI_2 = 2;
    _yrt_map_insert(&__map_1, &YI_1, &YI_2);
    YI_3 = 2;
    YI_4 = 3;
    _yrt_map_insert(&__map_1, &YI_3, &YI_4);
    YI_5 = __map_1;
    return YI_5;
}
