frame : X::foo (self : &(test1::A))-> void {
    <unit-value>
}
frame : test1::A::self (mut self : mut &(mut test1::A))-> void {
    {
        <unit-value>
    }
}
frame : X::foo (ref self : test1::B)-> void {
    <unit-value>
}
frame : test1::B::self (mut ref self : mut test1::B)-> void {
    {
        <unit-value>
    }
}
frame : test1::foo ()-> void {
    let a : &(test1::A) = test1::A::self(new);
    X::foo(a);
    let b : test1::B = test1::B::self(new);
    X::foo(b);
    <unit-value>
}
