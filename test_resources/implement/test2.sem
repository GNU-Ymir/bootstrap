frame : impl::foo (self : &(test2::A))-> void {
    <unit-value>
}
frame : impl::foo (ref self : test2::B)-> void {
    <unit-value>
}
frame :[pre] test2::A::self (mut self : mut &(mut test2::A))-> void {
    <unit-value>
}
frame :[post] test2::A::self (mut self : mut &(mut test2::A))-> void {
    <unit-value>
}
frame : test2::A::self (mut self : mut &(mut test2::A))-> void {
    test2::A::self[pre](self);
    test2::A::self[post](self)
}
frame : test2::B::self (mut ref self : mut test2::B)-> void {
    {
        <unit-value>
    };
    {
        <unit-value>
    }
}
frame : test2::foo ()-> void {
    let a : &(test2::A) = test2::A::self(new);
    impl::foo(a);
    let b : test2::B = test2::B::self(new);
    impl::foo(b);
    <unit-value>
}
