frame : [weak] core::math::truncF!{f80}::truncF (a : f80)-> f80 {
    {
        core::math::truncl (a)
    }
}
frame : [weak] core::math::ffmod!{f80}::ffmod (a : f80, b : f80)-> f80 {
    (a - (core::math::truncF!{f80}::truncF!{f80}::truncF ((a / b)) * b))
}
frame : test4::main ()-> void {
    let mut a : mut f32 = 1f;
    a = (a + 2f);
    a = 9f;
    let mut b : mut f64 = 1d;
    b = (b / 9d);
    let mut c : mut f80 = 1l;
    c = (c * 9l);
    c = (c * (3l + 3l));
    c = core::math::ffmod!{f80}::ffmod (c, 0.8l);
    <unit-value>
}
