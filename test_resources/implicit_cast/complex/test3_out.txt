frame : test3::bar ()-> void {
    let _ : [(i32)?] = {
            test3::baz ();
            copy ({.len = 10us, .ptr = &([none ; 10us])})
        };
    let _ : [(i64)?] = {
            test3::baz ();
            copy ({.len = 10us, .ptr = &([(1i64)? ; 10us])})
        };
    let _ : [*i32] = {
            test3::baz ();
            copy ({.len = 10us, .ptr = &([null ; 10us])})
        };
    let _ : [[(i32)?]] = {
            test3::baz ();
            {
                let mut #_iter : usize = 0us;
                let mut #_value : mut [mut [mut (mut i32)?]] = [<unit-value> ; new 3us];
                while (#_iter < 3us) {
                    #_value [#_iter] = copy ({.len = 3us, .ptr = &([none ; 3us])});
                    #_iter = (#_iter + 1us)
                };
                #_value
            }
        };
    <unit-value>
}
frame : test3::baz ()-> void {
    <unit-value>
}
frame : test3::foo ()-> void {
    let _ : [(i32)?] = copy ({.len = 10us, .ptr = &([none ; 10us])});
    let _ : [(i64)?] = copy ({.len = 10us, .ptr = &([(1i64)? ; 10us])});
    let _ : [*i32] = copy ({.len = 10us, .ptr = &([null ; 10us])});
    let _ : [[(i32)?]] = {
            let mut #_iter : usize = 0us;
            let mut #_value : mut [mut [mut (mut i32)?]] = [<unit-value> ; new 3us];
            while (#_iter < 3us) {
                #_value [#_iter] = copy ({.len = 3us, .ptr = &([none ; 3us])});
                #_iter = (#_iter + 1us)
            };
            #_value
        };
    <unit-value>
}
