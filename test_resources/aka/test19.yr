in test19;

mod outer {
    pub class A {
        pub self () {}
    }
}

mod inner {
    pub def A : outer::A;
}

def A : outer::A;


fn foo (a : &inner::A) {
    a;
}

fn bar (a : &outer::A) {
    a;
}

fn baz (a : &test19::A) {
    a;
}

fn food (a : &A) {
    a;
}

fn main () {
    use inner;
    use outer;

    let a = copy outer::A ();
    foo (a);
    bar (a);
    baz (a);
    food (a);
}
