frame : test1::main ()-> void {
    let mut a : mut &(mut test1::A) = test1::A::self(new);
    test1::A::foo(a);
    test1::A::bar(alias (a), 12);
    <unit-value>
}
frame : [weak] std::io::print!{[c8], i32}::print (a : [c8], b : i32)-> void {
    std::io::print (a);
    std::io::print (b);
    <unit-value>
}
frame : [weak] std::io::println!{i32, ([c8], i32...)}::println (a : i32, b : ([c8], i32))-> void {
    std::io::print (a);
    std::io::print!{[c8], i32}::print (b.0, b.1);
    std::io::putchar ('\n'c8);
    <unit-value>
}
frame : test1::A::bar (mut self : mut &(mut test1::A), x : i32)-> void {
    std::io::println!{i32, ([c8], i32...)}::println (self._a, ((" "s8)[], x));
    <unit-value>
}
frame : [weak] std::io::println!{i32}::println (a : i32)-> void {
    std::io::print (a);
    std::io::putchar ('\n'c8);
    <unit-value>
}
frame : test1::A::foo (self : &(test1::A))-> void {
    std::io::println!{i32}::println (self._a);
    <unit-value>
}
frame : test1::A::self (mut self : mut &(mut test1::A))-> void {
    {
        {
            self._a = 8
        }
    };
    {
    
    }
}
