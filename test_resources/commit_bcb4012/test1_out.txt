frame : test1::main ()-> void {
    let mut a : mut &(mut test1::A) = test1::A::self(new);
    test1::A::foo(a);
    test1::A::bar(alias (a), 12);
    <unit-value>
}
frame : [weak] std::io::println!{(i32, [c32], i32...)}::println (a : (i32, [c32], i32))-> void {
    {
        cte for {
            {
                let i : i32 = a.0;
                {
                    std::io::print (i);
                    <unit-value>
                }
            };
            {
                let i : [c32] = a.1;
                {
                    std::io::print (i);
                    <unit-value>
                }
            };
            {
                let i : i32 = a.2;
                {
                    std::io::print (i);
                    <unit-value>
                }
            }
        }
    };
    std::io::print ('\n'c8);
    <unit-value>
}
frame : test1::A::bar (mut self : mut &(mut test1::A), x : i32)-> void {
    std::io::println!{(i32, [c32], i32...)}::println ((self._a, (" "s32)[], x));
    <unit-value>
}
frame : [weak] std::io::println!{i32}::println (a : i32)-> void {
    {
        std::io::print (a);
        <unit-value>
    };
    std::io::print ('\n'c8);
    <unit-value>
}
frame : test1::A::foo (self : &(test1::A))-> void {
    std::io::println!{i32}::println (self._a);
    <unit-value>
}
frame : test1::A::self (mut self : mut &(mut test1::A))-> void {
    {
        {
            self._a = 8
        }
    };
    {
    
    }
}
