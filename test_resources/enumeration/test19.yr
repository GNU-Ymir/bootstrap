class X { pub self () {} }
class Z over X { pub self () {} }

enum
| A = copy Z ()
 -> F;

fn foo (a : &X) {
    a;
}

fn bar (a : &Z) {
    a;
}

fn main () {
    let z = F::A;
    foo (z);
    foo (F::A);

    bar (z);
    bar (F::A);

    foo (cast!{&X} (F::A));
}
