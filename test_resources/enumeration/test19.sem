frame :[pre] test19::X::self (mut self : mut &(mut test19::X))-> void {
    <unit-value>
}
frame :[post] test19::X::self (mut self : mut &(mut test19::X))-> void {
    <unit-value>
}
frame : test19::X::self (mut self : mut &(mut test19::X))-> void {
    test19::X::self[pre](self);
    test19::X::self[post](self)
}
frame :[pre] test19::Z::self (mut self : mut &(mut test19::Z))-> void {
    test19::X::self[pre](self);
    {
        <unit-value>
    }
}
frame :[post] test19::Z::self (mut self : mut &(mut test19::Z))-> void {
    test19::X::self[post](self);
    {
        <unit-value>
    }
}
frame : test19::Z::self (mut self : mut &(mut test19::Z))-> void {
    test19::Z::self[pre](self);
    test19::Z::self[post](self)
}
frame : test19::bar (a : &(test19::Z))-> void {
    <unit-value>
}
frame : test19::foo (a : &(test19::X))-> void {
    <unit-value>
}
frame : test19::main ()-> void {
    let z : test19::F = test19::F(test19::Z::self(new));
    test19::foo (z);
    test19::foo (test19::Z::self(new));
    test19::bar (z);
    test19::bar (test19::Z::self(new));
    test19::foo (test19::Z::self(new));
    <unit-value>
}
