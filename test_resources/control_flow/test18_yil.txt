frame :  _Y6test184mainFZv ()-> void {
    let cond : u8;
    let YI_2 : [i32;3];
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : (len-> u64, ptr-> *(i32));
    let YI_5 : *(void);
    let YI_6 : (len-> u64, ptr-> *(i32));
    let a : (len-> u64, ptr-> *(i32));
    let YI_8 : (len-> u64, ptr-> *(i32));
    let YI_9 : [i32;3];
    let YI_10 : (len-> u64, ptr-> *(i32));
    let YI_11 : (len-> u64, ptr-> *(i32));
    let YI_12 : *(void);
    let YI_13 : (len-> u64, ptr-> *(i32));
    let YI_14 : (len-> u64, ptr-> *(i32));
    let b : (len-> u64, ptr-> *(i32));
    cond = 0;
    YI_2 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_2);
    YI_4 = YI_3;
    YI_5 = _yrt_dup_slice(YI_4.ptr, YI_4.len, 4);
    YI_6 = (len-> YI_4.len, ptr-> YI_5);
    a = YI_6;
#IF cond
#THEN_GOTO then(#1)
#ELSE_GOTO else(#3);
#LABEL then(#1);
    YI_9 = [2, 3, 4];
    YI_10 = (len-> 3, ptr-> &YI_9);
    YI_11 = YI_10;
    YI_12 = _yrt_dup_slice(YI_11.ptr, YI_11.len, 4);
    YI_13 = (len-> YI_11.len, ptr-> YI_12);
    YI_8 = YI_13;
#GOTO end(#2);
#LABEL else(#3);
    YI_8 = a;
#LABEL end(#2);
    YI_14 = YI_8;
    b = YI_14;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test184mainFZv);
    return 0;
}
