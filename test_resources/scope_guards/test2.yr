class A over Exception {
    pub self () {}
}

class B over Exception {
    pub self () {}
}

class C over B {
    pub self () {}
}

fn foo (i : i32)-> i32
    throws A, B, C;

fn onA ();
fn onB ();
fn onFail ();
fn onSucc ();
fn onExit ();

fn main ()
{
    let _ = {
        foo (0)
    } failure {
        onFail ();
    } success {
        onSucc ();
    } exit {
        onExit ();
    };
} catch {
    A () => {
        onA ();
    }
    B ()  => {
        onB ();
    }
}
