pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_8 (len-> u64, ptr-> P_2, blk_info-> P_1);
pointer P_9 *(u8);
tuple T_10 (len-> u64, ptr-> P_9, blk_info-> P_1);
tuple T_11 (#_vtable-> P_2, #_monitor-> P_1, trace-> T_8, msg-> T_10);
pointer P_12 *(T_11);
array A_13 [u8 ; 6];
array A_14 [u8 ; 37];
array A_15 [u8 ; 12];
frame :  _Y5test84mainFZv ()-> void {
    _Y5test83fooFZv();
    try {
        __self_1 = _yrt_alloc_class(&_Y4core9exception9assertion11AssertErrorVT);
        _Y4core9exception9assertion11AssertError4selfCTxP39x4core9exception9assertion11AssertErrorS2c8Zv(__self_1, (len-> 5, ptr-> "Error", blk_info-> 0));
        YI_1 = __self_1;
        YI_2 = "test_resources/scope_guards/test8.yr";
        YI_3 = "test8::main";
        _yrt_exc_throw(YI_2, YI_3, 11, YI_1);
    }
    catch{
        #_catch = _yrt_exc_begin_catch (ephtr (0));
    #IF 1
    #THEN_GOTO then(#1)
    #ELSE_GOTO else(#3);
    #LABEL then(#1);
        YI_4 = 1;
    #GOTO end(#2);
    #LABEL else(#3);
        YI_4 = 1;
    #LABEL end(#2);
    #IF YI_4
    #THEN_GOTO then(#4)
    #ELSE_GOTO else(#6);
    #LABEL then(#4);
        _ = #_catch;
        YI_5 = 1;
        YI_6 = YI_5;
    #GOTO end(#5);
    #LABEL else(#6);
        YI_6 = YI_4;
    #LABEL end(#5);
    #IF YI_6
    #THEN_GOTO then(#7)
    #ELSE_GOTO end(#8);
    #LABEL then(#7);
        _Y5test83barFZv();
    #LABEL end(#8);
    };
    _Y5test83bazFZv();
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test84mainFZv);
    return 0;
}
