frame : test3::bar (mut x : mut [mut i32], mut y : mut [mut i32])-> ([i32], [i32]) return {
    #{
        if (x.len <= 0us) panic;
        x [0us]
    #} = #{
        if (y.len <= 0us) panic;
        y [0us]
    #};
    #{
        if (y.len <= 0us) panic;
        y [0us]
    #} = 9;
    (x, y)
}
frame : test3::foo ()-> mut [mut [mut i32]] return copy ({.len = 2us, .ptr = &([copy ({.len = 3us, .ptr = &([1, 2, 3])}), copy ({.len = 3us, .ptr = &([2, 3, 4])})])})
frame : test3::main ()-> void {
    let mut z : mut [mut [mut i32] ; 2us] = [alias (#{
                    if (test3::foo ().len < 2) panic;
                    {.len = 2us, .ptr = (test3::foo ().ptr + (0us * 24us)), .blk = test3::foo ().blk_info}
                #} [0us]), alias (#{
                    if (test3::foo ().len < 2) panic;
                    {.len = 2us, .ptr = (test3::foo ().ptr + (0us * 24us)), .blk = test3::foo ().blk_info}
                #} [1us])];
    let d : ([i32], [i32]) = test3::bar (alias (z [0us]), alias (z [1us]));
    <unit-value>
}
