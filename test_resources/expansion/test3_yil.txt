frame :  _Y5test33barFxS4xi32xS4xi32ZT125S3i325S3i32 (let x : (len-> u64, ptr-> *(i32)), let y : (len-> u64, ptr-> *(i32)))-> ((len-> u64, ptr-> *(i32)), (len-> u64, ptr-> *(i32))) {
    YI_1 = x.len <= 0;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/expansion/test3.yr";
    YI_3 = "test3::bar";
    _yrt_exc_panic(YI_2, YI_3, 6);
#LABEL end(#2);
    YI_4 = 4 * 0;
    YI_5 = x.ptr + YI_4;
    YI_6 = cast!{*(i32)} (YI_5);
    YI_7 = y.len <= 0;
#IF YI_7
#THEN_GOTO then(#3)
#ELSE_GOTO end(#4);
#LABEL then(#3);
    YI_8 = "test_resources/expansion/test3.yr";
    YI_9 = "test3::bar";
    _yrt_exc_panic(YI_8, YI_9, 6);
#LABEL end(#4);
    YI_10 = 4 * 0;
    YI_11 = y.ptr + YI_10;
    YI_12 = cast!{*(i32)} (YI_11);
    YI_13 = *YI_12;
    *YI_6 = YI_13;
    YI_14 = y.len <= 0;
#IF YI_14
#THEN_GOTO then(#5)
#ELSE_GOTO end(#6);
#LABEL then(#5);
    YI_15 = "test_resources/expansion/test3.yr";
    YI_16 = "test3::bar";
    _yrt_exc_panic(YI_15, YI_16, 7);
#LABEL end(#6);
    YI_17 = 4 * 0;
    YI_18 = y.ptr + YI_17;
    YI_19 = cast!{*(i32)} (YI_18);
    *YI_19 = 9;
    YI_20 = (x, y);
    YI_21 = YI_20;
    return YI_21;
}
frame :  _Y5test34mainFZv ()-> void {
    YI_1 = _Y5test33fooFZxS7xS4xi32();
    YI_2 = YI_1.len < 2;
#IF YI_2
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_3 = "test_resources/expansion/test3.yr";
    YI_4 = "test3::main";
    _yrt_exc_panic(YI_3, YI_4, 12);
#LABEL end(#2);
    YI_5 = 0 * 16;
    YI_6 = YI_1.ptr + YI_5;
    YI_7 = (len-> 2, ptr-> YI_6);
    YI_8 = YI_7;
    YI_9 = 16 * 0;
    YI_10 = YI_8.ptr + YI_9;
    YI_11 = cast!{*((len-> u64, ptr-> *(i32)))} (YI_10);
    YI_12 = 16 * 1;
    YI_13 = YI_8.ptr + YI_12;
    YI_14 = cast!{*((len-> u64, ptr-> *(i32)))} (YI_13);
    YI_15 = [*YI_11, *YI_14];
    z = YI_15;
    YI_16 = _Y5test33barFxS4xi32xS4xi32ZT125S3i325S3i32(z[0], z[1]);
    d = YI_16;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test34mainFZv);
    return 0;
}
frame :  _Y5test33fooFZxS7xS4xi32 ()-> (len-> u64, ptr-> *((len-> u64, ptr-> *(i32)))) {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1);
    YI_3 = YI_2;
    YI_4 = _yrt_dup_slice(YI_3.ptr, YI_3.len, 4);
    YI_5 = (len-> YI_3.len, ptr-> YI_4);
    YI_6 = [2, 3, 4];
    YI_7 = (len-> 3, ptr-> &YI_6);
    YI_8 = YI_7;
    YI_9 = _yrt_dup_slice(YI_8.ptr, YI_8.len, 4);
    YI_10 = (len-> YI_8.len, ptr-> YI_9);
    YI_11 = [YI_5, YI_10];
    YI_12 = (len-> 2, ptr-> &YI_11);
    YI_13 = YI_12;
    YI_14 = _yrt_dup_slice(YI_13.ptr, YI_13.len, 16);
    YI_15 = (len-> YI_13.len, ptr-> YI_14);
    return YI_15;
}
