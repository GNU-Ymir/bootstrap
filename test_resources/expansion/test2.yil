tuple T_6 (len-> u64, ptr-> *(i32), blk_info-> *(void));
tuple T_7 (len-> u64, ptr-> *(u8), blk_info-> *(void));
frame :  _Y5test23fooFi32i32i32Zv (let a : i32, let b : i32, let c : i32)-> void {
}
frame :  _Y5test24mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    a = YI_1;
    YI_2 = [1, 2, 3];
    YI_3 = (len-> 3, ptr-> &YI_2, blk_info-> 0);
    YI_4 = YI_3;
    _yrt_dup_slice(&YI_5, &YI_4, 4);
    YI_6 = YI_5;
    b = YI_6;
    _Y5test23fooFi32i32i32Zv(a[0], a[1], a[2]);
    YI_7 = b.len < 3;
#IF YI_7
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_8 = "test_resources/expansion/test2.yr";
    YI_9 = "test2::main";
    _yrt_exc_panic(YI_8, YI_9, 11);
#LABEL end(#2);
    YI_10 = 0 * 4;
    YI_11 = b.ptr + YI_10;
    YI_12 = (len-> 3, ptr-> YI_11, blk_info-> b.blk_info);
    YI_13 = YI_12;
    YI_14 = 4 * 0;
    YI_15 = YI_13.ptr + YI_14;
    YI_16 = cast!{*(i32)} (YI_15);
    YI_17 = 4 * 1;
    YI_18 = YI_13.ptr + YI_17;
    YI_19 = cast!{*(i32)} (YI_18);
    YI_20 = 4 * 2;
    YI_21 = YI_13.ptr + YI_20;
    YI_22 = cast!{*(i32)} (YI_21);
    _Y5test23fooFi32i32i32Zv(*YI_16, *YI_19, *YI_22);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test24mainFZv);
    return 0;
}
