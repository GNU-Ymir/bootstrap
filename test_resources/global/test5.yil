pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_3 (closure-> P_1, func-> P_1);
tuple T_4 (set-> u8, value-> P_1, size-> u32, func-> T_3);
pointer P_8 *(i32);
tuple T_9 (len-> u64, ptr-> P_8, blk_info-> P_1);
pointer P_10 *(T_4);
pointer P_11 *(T_9);
pointer P_12 *(u8);
tuple T_13 (len-> u64, ptr-> P_12, blk_info-> P_1);
tuple T_14 (T_9);
pointer P_15 *(T_14);
array A_16 [i32 ; 3];
frame :  _Y5test54mainFZv ()-> void {
    YI_1 = _yrt_call_lazy(&_Y5test51XV);
    YI_2 = YI_1-> len <= 0;
#IF YI_2
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_3 = "test_resources/global/test5.yr";
    YI_4 = "test5::main";
    _yrt_exc_panic(YI_3, YI_4, 5);
#LABEL end(#2);
    YI_5 = 4 * 0;
    YI_6 = YI_1-> ptr + YI_5;
    YI_7 = cast!{P_8} (YI_6);
    *YI_7 = 9;
    YI_8 = _yrt_call_lazy(&_Y5test51ZV);
    YI_9 = [1, 2, 3];
    YI_10 = (len-> 3, ptr-> &YI_9, blk_info-> 0);
    YI_11 = YI_10;
    _yrt_dup_slice(&YI_12, &YI_11, 4);
    YI_13 = YI_12;
    YI_8-> _0 = YI_13;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test54mainFZv);
    return 0;
}
