tuple T_1 (closure-> *(void), func-> *(void));
tuple T_2 (set-> u8, value-> *(void), size-> u32, func-> T_1);
tuple T_6 ();
tuple T_7 (len-> u64, ptr-> *(i32), blk_info-> *(void));
var :  _Y5test61XV (set-> 0, value-> 0, size-> 24, func-> (closure-> 0, func-> &_Y5test61X5_1_27FP2T0RxS4xi32Zv))
frame :  [weak] _Y5test61X5_1_27FP2T0RxS4xi32Zv (let #{CLOSURE-VARREF} : *(T_6), let #_REF : *(T_7))-> void {
    YI_1 = _Y5test63fooFZxS4xi32();
    *#_REF = YI_1;
}
frame :  _Y5test63fooFZxS4xi32 ()-> T_7 {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    return YI_5;
}
frame :  _Y5test64mainFZv ()-> void {
    YI_1 = _yrt_call_lazy(&_Y5test61XV);
    _a_ = *YI_1;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test64mainFZv);
    return 0;
}
