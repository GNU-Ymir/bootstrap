pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_3 (closure-> P_1, func-> P_1);
tuple T_4 (set-> u8, value-> P_1, size-> u32, func-> T_3);
tuple T_8 ();
pointer P_9 *(T_8);
pointer P_10 *(i32);
tuple T_11 (len-> u64, ptr-> P_10, blk_info-> P_1);
pointer P_12 *(T_11);
array A_13 [i32 ; 3];
pointer P_14 *(T_4);
var :  _Y5test61XV (set-> 0, value-> 0, size-> 24, func-> (closure-> 0, func-> &_Y5test61X5_1_27FP2T0RxS4xi32Zv))
frame :  [weak] _Y5test61X5_1_27FP2T0RxS4xi32Zv (let #{CLOSURE-VARREF} : P_9, let #_REF : P_12)-> void {
    YI_1 = _Y5test63fooFZxS4xi32();
    *#_REF = YI_1;
}
frame :  _Y5test63fooFZxS4xi32 ()-> T_11 {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    return YI_5;
}
frame :  _Y5test64mainFZv ()-> void {
    YI_1 = _yrt_call_lazy(&_Y5test61XV);
    _a_ = *YI_1;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test64mainFZv);
    return 0;
}
