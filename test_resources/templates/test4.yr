in test4;

fn foo {F : fn (U)-> Z, Z, U...} (a : [(U,)])-> [Z] {
    let mut res : [mut Z] = copy [Z::init ; a.len];
    for i in 0us .. a.len {
        res [i] = F (expand a [i]);
    }

    res
}

fn main () {
    let z = copy [(1, 2, 3), (4, 5, 6), (7, 8, 9)];
    let _ = z.foo!{|x, y, z| => x + y + z} ();
}
