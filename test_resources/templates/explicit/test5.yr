trait X {}
class A {
    pub self () {}
    impl X;
}

class B over A {
    pub self () {}
}

fn foo {Z impl X} (a : Z) {
    a;
}
fn foo {Z impl X} () {}

fn main () {
    let a = A::new ();
    let b = B::new ();
    foo (a);
    foo!{&A} ();

    foo (b);
    foo!{&B} ();
}
