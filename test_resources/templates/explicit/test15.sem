frame :[pre] test15::A::self (mut self : mut &(mut test15::A))-> void {
    <unit-value>
}
frame :[post] test15::A::self (mut self : mut &(mut test15::A))-> void {
    <unit-value>
}
frame : test15::A::self (mut self : mut &(mut test15::A))-> void {
    test15::A::self[pre](self);
    test15::A::self[post](self)
}
frame : [weak] test15::foo!{&(test15::A)}::foo ()-> &(test15::A) return test15::A::self(new)
frame : test15::main ()-> void {
    let _a_ : &(test15::A) = test15::foo!{&(test15::A)}::foo ();
    <unit-value>
}
