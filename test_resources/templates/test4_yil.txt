frame :  [weak] _Y5test44main6_14_20Fi32i32i32Zi32 (let x : i32, let y : i32, let z : i32)-> i32 {
    let YI_4 : i32;
    let YI_5 : i32;
    YI_4 = x + y;
    YI_5 = YI_4 + z;
    return YI_5;
}
frame :  [weak] _Y5test43fooNi32NTP34__Y5test44main6_14_20Fi32i32i32Zi32L12NNi32Ni32Ni32FS15T123i323i323i32ZS3i32 (let a : (len-> u64, ptr-> *((i32, i32, i32))))-> (len-> u64, ptr-> *(i32)) {
    let YI_2 : i32;
    let YI_3 : *(void);
    let YI_4 : (len-> u64, ptr-> *(i32));
    let res : (len-> u64, ptr-> *(i32));
    let #_iter : u64;
    let #_nb_iter : u64;
    let i : u64;
    let YI_12 : u8;
    let YI_10 : *(u8);
    let YI_11 : *(u8);
    let YI_13 : u64;
    let YI_14 : u64;
    let YI_15 : *(i32);
    let YI_18 : u8;
    let YI_16 : *(u8);
    let YI_17 : *(u8);
    let YI_19 : u64;
    let YI_20 : u64;
    let YI_21 : *((i32, i32, i32));
    let YI_22 : (i32, i32, i32);
    let YI_23 : i32;
    let YI_24 : u64;
    let YI_8 : u8;
    let YI_25 : (len-> u64, ptr-> *(i32));
    YI_2 = 0;
    YI_3 = _yrt_alloc_array(&YI_2, a.len, 4);
    YI_4 = (len-> a.len, ptr-> YI_3);
    res = YI_4;
    #_iter = 0;
    #_nb_iter = a.len;
#GOTO test(#7);
#LABEL beg(#6);
    i = #_iter;
    YI_12 = res.len <= i;
#IF YI_12
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_10 = "/home/emile/ymir/bootstrap/gyc/gcc-src/gcc/ymir/bootstrap/test_resources/templates/test4.yr";
    YI_11 = "test4::foo!{i32, test4::main::_14_20, (i32, i32, i32,...)}::foo";
    _yrt_exc_panic(YI_10, YI_11, 6);
#LABEL end(#3);
    YI_13 = 4 * i;
    YI_14 = res.ptr + YI_13;
    YI_15 = cast!{*(i32)} (YI_14);
    YI_18 = a.len <= i;
#IF YI_18
#THEN_GOTO then(#4)
#ELSE_GOTO end(#5);
#LABEL then(#4);
    YI_16 = "/home/emile/ymir/bootstrap/gyc/gcc-src/gcc/ymir/bootstrap/test_resources/templates/test4.yr";
    YI_17 = "test4::foo!{i32, test4::main::_14_20, (i32, i32, i32,...)}::foo";
    _yrt_exc_panic(YI_16, YI_17, 6);
#LABEL end(#5);
    YI_19 = 12 * i;
    YI_20 = a.ptr + YI_19;
    YI_21 = cast!{*((i32, i32, i32))} (YI_20);
    YI_22 = *YI_21;
    YI_23 = _Y5test44main6_14_20Fi32i32i32Zi32(YI_22._0, YI_22._1, YI_22._2);
    *YI_15 = YI_23;
    YI_24 = #_iter + 1;
    #_iter = YI_24;
#LABEL test(#7);
    YI_8 = #_iter < #_nb_iter;
#IF YI_8
#THEN_GOTO beg(#6)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_25 = res;
    return YI_25;
}
frame :  _Y5test44mainFZv ()-> void {
    let YI_1 : (i32, i32, i32);
    let YI_2 : (i32, i32, i32);
    let YI_3 : (i32, i32, i32);
    let YI_4 : [(i32, i32, i32);3];
    let YI_5 : (len-> u64, ptr-> *((i32, i32, i32)));
    let YI_6 : (len-> u64, ptr-> *((i32, i32, i32)));
    let YI_7 : *(void);
    let YI_8 : (len-> u64, ptr-> *((i32, i32, i32)));
    let z : (len-> u64, ptr-> *((i32, i32, i32)));
    let YI_10 : (len-> u64, ptr-> *(i32));
    let _ : (len-> u64, ptr-> *(i32));
    YI_1 = (1, 2, 3);
    YI_2 = (4, 5, 6);
    YI_3 = (7, 8, 9);
    YI_4 = [YI_1, YI_2, YI_3];
    YI_5 = (len-> 3, ptr-> &YI_4);
    YI_6 = YI_5;
    YI_7 = _yrt_dup_slice(YI_6.ptr, YI_6.len, 12);
    YI_8 = (len-> YI_6.len, ptr-> YI_7);
    z = YI_8;
    YI_10 = _Y5test43fooNi32NTP34__Y5test44main6_14_20Fi32i32i32Zi32L12NNi32Ni32Ni32FS15T123i323i323i32ZS3i32(z);
    _ = YI_10;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test44mainFZv);
    return 0;
}
