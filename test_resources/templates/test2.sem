frame :[pre] test2::A::self (mut self : mut &(mut test2::A))-> void {
    <unit-value>
}
frame :[post] test2::A::self (mut self : mut &(mut test2::A))-> void {
    <unit-value>
}
frame : test2::A::self (mut self : mut &(mut test2::A))-> void {
    test2::A::self[pre](self);
    test2::A::self[post](self)
}
frame : [weak] test2::foo!{&(test2::A)}::foo (a : &(test2::A))-> void {
    <unit-value>
}
frame : test2::main ()-> void {
    let a : &(test2::A) = test2::A::self(new);
    test2::foo!{&(test2::A)}::foo (a);
    <unit-value>
}
