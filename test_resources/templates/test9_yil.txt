frame :  [weak] _Y5test93fooNi32FS3i32Zi32 (let a : (len-> u64, ptr-> *(i32)))-> i32 {
    YI_1 = a.len <= 0;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/templates/test9.yr";
    YI_3 = "test9::foo!{i32}::foo";
    _yrt_exc_panic(YI_2, YI_3, 4);
#LABEL end(#2);
    YI_4 = 4 * 0;
    YI_5 = a.ptr + YI_4;
    YI_6 = cast!{*(i32)} (YI_5);
    YI_7 = *YI_6;
    return YI_7;
}
frame :  [weak] _Y5test93fooNf32FS3f32Zf32 (let a : (len-> u64, ptr-> *(f4)))-> f4 {
    YI_1 = a.len <= 0;
#IF YI_1
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_2 = "test_resources/templates/test9.yr";
    YI_3 = "test9::foo!{f32}::foo";
    _yrt_exc_panic(YI_2, YI_3, 4);
#LABEL end(#2);
    YI_4 = 4 * 0;
    YI_5 = a.ptr + YI_4;
    YI_6 = cast!{*(f4)} (YI_5);
    YI_7 = *YI_6;
    return YI_7;
}
frame :  _Y5test94mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1);
    YI_3 = YI_2;
    YI_4 = _yrt_dup_slice(YI_3.ptr, YI_3.len, 4);
    YI_5 = (len-> YI_3.len, ptr-> YI_4);
    YI_6 = _Y5test93fooNi32FS3i32Zi32(YI_5);
    YI_7 = [1, 2, 3];
    YI_8 = (len-> 3, ptr-> &YI_7);
    YI_9 = YI_8;
    YI_10 = _yrt_dup_slice(YI_9.ptr, YI_9.len, 4);
    YI_11 = (len-> YI_9.len, ptr-> YI_10);
    YI_12 = _Y5test93fooNf32FS3f32Zf32(YI_11);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test94mainFZv);
    return 0;
}
