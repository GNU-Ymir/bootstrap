pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_8 (i32, i32, i32);
pointer P_9 *(T_8);
tuple T_10 (len-> u64, ptr-> P_9, blk_info-> P_1);
pointer P_11 *(i32);
tuple T_12 (len-> u64, ptr-> P_11, blk_info-> P_1);
pointer P_13 *(T_12);
pointer P_14 *(u8);
tuple T_15 (len-> u64, ptr-> P_14, blk_info-> P_1);
array A_16 [u8 ; 34];
array A_17 [u8 ; 81];
array A_18 [T_8 ; 3];
pointer P_19 *(T_10);
frame :  [weak] _Y5test43fooNi32NTP34__Y5test44main6_14_20Fi32i32i32Zi32L12NNi32Ni32Ni32FS15T123i323i323i32ZS3i32 (let a : T_10)-> T_12 {
    YI_1 = 0;
    _yrt_alloc_slice(&YI_2, &YI_1, a.len, 4);
    YI_3 = YI_2;
    res = YI_3;
    #_iter = 0;
    #_nb_iter = a.len;
#GOTO test(#7);
#LABEL beg(#6);
    i = #_iter;
    YI_4 = res.len <= i;
#IF YI_4
#THEN_GOTO then(#2)
#ELSE_GOTO end(#3);
#LABEL then(#2);
    YI_5 = "test_resources/templates/test4.yr";
    YI_6 = "test4::foo!{i32, fn (x : i32, y : i32, z : i32)-> i32, (i32, i32, i32,...)}::foo";
    _yrt_exc_panic(YI_5, YI_6, 6);
#LABEL end(#3);
    YI_7 = 4 * i;
    YI_8 = res.ptr + YI_7;
    YI_9 = cast!{P_11} (YI_8);
    YI_10 = a.len <= i;
#IF YI_10
#THEN_GOTO then(#4)
#ELSE_GOTO end(#5);
#LABEL then(#4);
    YI_11 = "test_resources/templates/test4.yr";
    YI_12 = "test4::foo!{i32, fn (x : i32, y : i32, z : i32)-> i32, (i32, i32, i32,...)}::foo";
    _yrt_exc_panic(YI_11, YI_12, 6);
#LABEL end(#5);
    YI_13 = 12 * i;
    YI_14 = a.ptr + YI_13;
    YI_15 = cast!{P_9} (YI_14);
    YI_16 = *YI_15;
    YI_17 = _Y5test44main6_14_20Fi32i32i32Zi32(YI_16._0, YI_16._1, YI_16._2);
    *YI_9 = YI_17;
    YI_18 = #_iter + 1;
    #_iter = YI_18;
#LABEL test(#7);
    YI_19 = #_iter < #_nb_iter;
#IF YI_19
#THEN_GOTO beg(#6)
#ELSE_GOTO end(#1);
#LABEL end(#1);
    YI_20 = res;
    return YI_20;
}
frame :  [weak] _Y5test44main6_14_20Fi32i32i32Zi32 (let x : i32, let y : i32, let z : i32)-> i32 {
    YI_1 = x + y;
    YI_2 = YI_1 + z;
    return YI_2;
}
frame :  _Y5test44mainFZv ()-> void {
    YI_1 = (1, 2, 3);
    YI_2 = (4, 5, 6);
    YI_3 = (7, 8, 9);
    YI_4 = [YI_1, YI_2, YI_3];
    YI_5 = (len-> 3, ptr-> &YI_4, blk_info-> 0);
    YI_6 = YI_5;
    _yrt_dup_slice(&YI_7, &YI_6, 12);
    YI_8 = YI_7;
    z = YI_8;
    YI_9 = _Y5test43fooNi32NTP34__Y5test44main6_14_20Fi32i32i32Zi32L12NNi32Ni32Ni32FS15T123i323i323i32ZS3i32(z);
    _ = YI_9;
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test44mainFZv);
    return 0;
}
