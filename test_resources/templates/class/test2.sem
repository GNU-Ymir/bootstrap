frame : [weak][pre] test2::A::foo!{i32}::foo (mut self : mut &(mut test2::A), a : i32, b : i32)-> void {
    <unit-value>
}
frame : [weak][post] test2::A::foo!{i32}::foo (mut self : mut &(mut test2::A), a : i32, b : i32)-> void {
    <unit-value>
}
frame : [weak] test2::A::foo!{i32}::foo (mut self : mut &(mut test2::A), a : i32, b : i32)-> void {
    test2::A::foo!{i32}::foo[pre](self, a, b);
    test2::A::foo!{i32}::foo[post](self, a, b)
}
frame :[pre] test2::B::bar (mut self : mut &(mut test2::B))-> void {
    test2::A::foo!{i32}::foo[pre](self, 1, 2);
    {
        <unit-value>
    }
}
frame :[post] test2::B::bar (mut self : mut &(mut test2::B))-> void {
    test2::A::foo!{i32}::foo[post](self, 1, 2);
    {
        <unit-value>
    }
}
frame : test2::B::bar (mut self : mut &(mut test2::B))-> void {
    test2::B::bar[pre](self);
    test2::B::bar[post](self)
}
frame :[pre] test2::B::self (mut self : mut &(mut test2::B))-> void {
    test2::A::foo!{i32}::foo[pre](self, 1, 2);
    {
        <unit-value>
    }
}
frame :[post] test2::B::self (mut self : mut &(mut test2::B))-> void {
    test2::A::foo!{i32}::foo[post](self, 1, 2);
    {
        <unit-value>
    }
}
frame : test2::B::self (mut self : mut &(mut test2::B))-> void {
    test2::B::self[pre](self);
    test2::B::self[post](self)
}
