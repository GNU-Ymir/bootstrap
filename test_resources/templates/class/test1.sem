frame : [weak][pre] test1::A::foo!{i32}::foo (mut self : mut &(mut test1::A), a : i32, b : i32)-> void {
    <unit-value>
}
frame : [weak][post] test1::A::foo!{i32}::foo (mut self : mut &(mut test1::A), a : i32, b : i32)-> void {
    <unit-value>
}
frame : [weak] test1::A::foo!{i32}::foo (mut self : mut &(mut test1::A), a : i32, b : i32)-> void {
    test1::A::foo!{i32}::foo[pre](self, a, b);
    test1::A::foo!{i32}::foo[post](self, a, b)
}
frame : [weak][pre] test1::A::self!{i32}::self (mut self : mut &(mut test1::A), a : i32)-> void {
    <unit-value>
}
frame : [weak][post] test1::A::self!{i32}::self (mut self : mut &(mut test1::A), a : i32)-> void {
    <unit-value>
}
frame : [weak] test1::A::self!{i32}::self (mut self : mut &(mut test1::A), a : i32)-> void {
    test1::A::self!{i32}::self[pre](self, a);
    test1::A::self!{i32}::self[post](self, a)
}
frame : test1::main ()-> void {
    let _ : &(test1::A) = test1::A::self!{i32}::self(new, 1);
    let _ : &(test1::A) = test1::A::foo!{i32}::foo(new, 1, 2);
    <unit-value>
}
