frame : [weak] test11::A!{2us, (i32, i32, i32,...)}::A::foo (self : &(test11::A!{2us, (i32, i32, i32,...)}::A))-> (i32, i32, i32) return self.a
frame : [weak] test11::A!{2us, (i32, i32, i32,...)}::A::self (mut self : mut &(mut test11::A!{2us, (i32, i32, i32,...)}::A), a : (i32, i32, i32))-> void {
    {
        {
            self.a = a
        }
    };
    {
        <unit-value>
    }
}
frame : [weak] test11::foo!{2us, (i32, i32,...)}::foo (a : &(test11::A!{2us, (i32, i32, i32,...)}::A))-> (i32, i32, i32) return test11::A!{2us, (i32, i32, i32,...)}::A::foo(a)
frame : test11::main ()-> void {
    let a : &(test11::A!{2us, (i32, i32, i32,...)}::A) = test11::A!{2us, (i32, i32, i32,...)}::A::self(new, (12, 11, 10));
    test11::foo!{2us, (i32, i32,...)}::foo (a);
    <unit-value>
}
