mod test11;


fn foo () {
    let (a, b...) = (1, 2, 3);

    cte assert (a == 1);
    cte assert (b == (2, 3));

    let (c, d...) = (1, 2);

    cte assert (c == 1);
    cte assert (d == (2,));

    // With type specifications
    let (_, _ : (i32, f32)...) = (1, 2, 3.f);
}


fn bar ()
    throws &AssertError
{
    // a is mutable, but not b nor c
    let (mut a, b, c) = (1, 't', 12.f);

    assert (a == 1 && b == 't' && c == 12.f);

    // With type specifications
    let (mut _ : i32, mut _ : [mut f32 ; 2]) = (1, [1.f, 2.f]);
}
