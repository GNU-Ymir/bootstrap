mod A {
    pub fn foo () {}
    pub fn bar (i : i32) { i; }
    pub fn baz (b : bool, lazy z : i32) {
        if (b) z;
    }
}

mod B {
    pub fn foo () {}
    pub fn bar (i : i32) { i; }
    pub fn baz (b : bool, lazy z : i32) {
        if (b) z;
    }
}


fn main ()
    throws AssertError
{
    let _a_ : dg ()-> void = &A::foo;
    let _b_ : dg (i32)-> void = &A::bar;
    let _c_ : dg (bool, lazy i32)-> void = &A::baz;

    let _a2_ : dg ()-> void = &A::foo;
    let _b2_ : dg (i32)-> void = &A::bar;
    let _c2_ : dg (bool, lazy i32)-> void = &A::baz;

    assert (_a_ == _a2_);
    assert (_b_ == _b2_);

    let _a3_ : dg ()-> void = &B::foo;
    let _b3_ : dg (i32)-> void = &B::bar;
    let _c3_ : dg (bool, lazy i32)-> void = &B::baz;

    assert (_a_ != _a3_);
    assert (_b_ != _b3_);
    assert (_c_ != _c3_);


    _c_ (true, lazy {
        12
    });

}
