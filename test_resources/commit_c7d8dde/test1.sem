frame : test1::A::self (mut ref self : mut test1::A)-> void {
    {
        {
            self.color = test1::X::self(new);
            self.z = 1
        }
    };
    {
        <unit-value>
    }
}
frame : test1::X::self (mut ref self : mut test1::X)-> void {
    {
        {
            self.f = 0
        }
    };
    {
        <unit-value>
    }
}
frame : test1::main ()-> void {
    let mut clearColor : mut [mut test1::A] = copy ({.len = 2us, .ptr = &([test1::A::self(new) ; 2us])});
    #{
        if (clearColor.len <= 0us) panic;
        clearColor [0us]
    #}.color.f = 12;
    #{
        if (clearColor.len <= 0us) panic;
        clearColor [0us]
    #}.z = 24;
    <unit-value>
}
