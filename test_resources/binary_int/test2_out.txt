frame : [weak] std::traits::isIntegral!{usize}::isIntegral ()-> bool return true
frame : [weak] core::math::ipow!{usize}::ipow (base : usize, exp : i32)-> usize return {
    let mut pow : mut usize = base;
    let mut v : mut usize = 1us;
    let mut expV : mut i32 = exp;
    if (exp < 0) {
        return if ((base * base) != 1us) 0us else if ((exp & 1) != 0) base else 1us;
        <unit-value>
    };
    while (expV > 0) {
        if ((expV & 1) != 0) {
            v = (v * pow);
            <unit-value>
        };
        pow = (pow * pow);
        expV = (expV >> 1);
        <unit-value>
    };
    v
}
frame : test2::main ()-> void {
    3u8;
    3u8;
    1u16;
    1u16;
    6u32;
    6u32;
    1u64;
    1u64;
    1us;
    1us;
    81us;
    81us;
    <unit-value>
}
