frame :  [weak] _Y5test24main5_5_23FP9T76S4xi32RxS4xi32Zv (let #{CLOSURE-VARREF} : *(((len-> u64, ptr-> *(i32), blk_info-> *(void)))), let #_REF : *((len-> u64, ptr-> *(i32), blk_info-> *(void))))-> void {
    *#_REF = #{CLOSURE-VARREF}-> _0;
}
frame :  _Y5test24mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, &YI_3, 4);
    YI_5 = YI_4;
    i = YI_5;
    YI_6 = (i);
    _yrt_dup_tuple(&YI_7, &YI_6, 24);
    YI_8 = YI_7;
    YI_9 = (closure-> YI_8, func-> &_Y5test24main5_5_23FP9T76S4xi32RxS4xi32Zv);
    a = (set-> 0, value-> 0, size-> 24, func-> YI_9);
    YI_10 = _yrt_call_lazy(&a);
    b = *YI_10;
    YI_11 = _yrt_call_lazy(&a);
    YI_12 = YI_11-> len <= 0;
#IF YI_12
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_13 = "test_resources/lazyness/test2.yr";
    YI_14 = "test2::main";
    _yrt_exc_panic(YI_13, YI_14, 8);
#LABEL end(#2);
    YI_15 = 4 * 0;
    YI_16 = YI_11-> ptr + YI_15;
    YI_17 = cast!{*(i32)} (YI_16);
    *YI_17 = 9;
    YI_18 = b.len <= 0;
#IF YI_18
#THEN_GOTO then(#3)
#ELSE_GOTO end(#4);
#LABEL then(#3);
    YI_19 = "test_resources/lazyness/test2.yr";
    YI_20 = "test2::main";
    _yrt_exc_panic(YI_19, YI_20, 10);
#LABEL end(#4);
    YI_21 = 4 * 0;
    YI_22 = b.ptr + YI_21;
    YI_23 = cast!{*(i32)} (YI_22);
    YI_24 = *YI_23;
    YI_25 = YI_24 == 9;
#IF ! YI_25
#THEN_GOTO then(#5)
#ELSE_GOTO end(#6);
#LABEL then(#5);
    __self_29 = _yrt_alloc_class(&_Y4core9exception11AssertErrorVT);
    _Y4core9exception11AssertError4selfCTxP29x4core9exception11AssertErrorS2c8Zv(__self_29, (len-> 0, ptr-> 0, blk_info-> 0));
    YI_26 = __self_29;
    YI_27 = "test_resources/lazyness/test2.yr";
    YI_28 = "test2::main";
    _yrt_exc_throw(YI_27, YI_28, 10, YI_26);
#LABEL end(#6);
    YI_29 = i.len <= 0;
#IF YI_29
#THEN_GOTO then(#7)
#ELSE_GOTO end(#8);
#LABEL then(#7);
    YI_30 = "test_resources/lazyness/test2.yr";
    YI_31 = "test2::main";
    _yrt_exc_panic(YI_30, YI_31, 11);
#LABEL end(#8);
    YI_32 = 4 * 0;
    YI_33 = i.ptr + YI_32;
    YI_34 = cast!{*(i32)} (YI_33);
    YI_35 = *YI_34;
    YI_36 = YI_35 == 9;
#IF ! YI_36
#THEN_GOTO then(#9)
#ELSE_GOTO end(#a);
#LABEL then(#9);
    __self_41 = _yrt_alloc_class(&_Y4core9exception11AssertErrorVT);
    _Y4core9exception11AssertError4selfCTxP29x4core9exception11AssertErrorS2c8Zv(__self_41, (len-> 0, ptr-> 0, blk_info-> 0));
    YI_37 = __self_41;
    YI_38 = "test_resources/lazyness/test2.yr";
    YI_39 = "test2::main";
    _yrt_exc_throw(YI_38, YI_39, 11, YI_37);
#LABEL end(#a);
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test24mainFZv);
    return 0;
}
