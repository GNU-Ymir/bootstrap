frame :  [weak] _Y5test54main5_3_23FP9T76S4xi32RxS4xi32Zv (let #{CLOSURE-VARREF} : *(((len-> u64, ptr-> *(i32), blk_info-> *(void)))), let #_REF : *((len-> u64, ptr-> *(i32), blk_info-> *(void))))-> void {
    YI_1 = #{CLOSURE-VARREF}-> _0;
    _yrt_dup_slice(&YI_2, YI_1.ptr, YI_1.len, 4);
    YI_3 = YI_2;
    *#_REF = YI_3;
}
frame :  _Y5test54mainFZv ()-> void {
    YI_1 = [1, 2, 3];
    YI_2 = (len-> 3, ptr-> &YI_1, blk_info-> 0);
    YI_3 = YI_2;
    _yrt_dup_slice(&YI_4, YI_3.ptr, YI_3.len, 4);
    YI_5 = YI_4;
    i = YI_5;
    YI_6 = (i);
    YI_7 = _yrt_dup_tuple(&YI_6, 24);
    YI_8 = (closure-> YI_7, func-> &_Y5test54main5_3_23FP9T76S4xi32RxS4xi32Zv);
    a = (set-> 0, value-> 0, size-> 24, func-> YI_8);
    YI_9 = _yrt_call_lazy(&a);
    b = *YI_9;
    YI_10 = _yrt_call_lazy(&a);
    c = *YI_10;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y5test54mainFZv);
    return 0;
}
