frame : test10::bar ()-> void {
    <unit-value>
}
frame : [weak] test10::main::_13_30 (#{CLOSURE-VARREF} : *(()), mut ref #_REF : mut [mut i32])-> void #_REF = {
    test10::bar ();
    copy ({.len = 3us, .ptr = &([1, 2, 3])})
}
frame : test10::main ()-> void {
    let mut x : mut [mut i32] = test10::foo (false, lazy ({null;(#{CLOSURE-VARREF} : *(()), mut ref #_REF : mut [mut i32])-> void}));
    x;
    <unit-value>
}
frame : test10::foo (z : bool, mut lazy x : mut [mut i32])-> mut [mut i32] return if z {
    #{
        if (x.len <= 0us) panic;
        x [0us]
    #} = 9;
    alias (x)
} else {.len = 0us, .ptr = null}
