frame :  _Y6test103barFZv ()-> void {
}
frame :  [weak] _Y6test104main6_13_30FP2T0RS3i32Zv (let #{CLOSURE-VARREF} : *(()), let #_REF : *((len-> u64, ptr-> *(i32))))-> void {
    let YI_3 : [i32;3];
    let YI_4 : (len-> u64, ptr-> *(i32));
    let YI_5 : (len-> u64, ptr-> *(i32));
    let YI_6 : *(void);
    let YI_7 : (len-> u64, ptr-> *(i32));
    let YI_8 : (len-> u64, ptr-> *(i32));
    _Y6test103barFZv();
    YI_3 = [1, 2, 3];
    YI_4 = (len-> 3, ptr-> &YI_3);
    YI_5 = YI_4;
    YI_6 = _yrt_dup_slice(YI_5.ptr, YI_5.len, 4);
    YI_7 = (len-> YI_5.len, ptr-> YI_6);
    YI_8 = YI_7;
    *#_REF = YI_8;
}
frame :  _Y6test104mainFZv ()-> void {
    let YI_1 : *(());
    let YI_2 : (closure-> *(void), func-> *(void));
    let YI_3 : (len-> u64, ptr-> *(i32));
    let x : (len-> u64, ptr-> *(i32));
    YI_1 = 0;
    YI_2 = (closure-> YI_1, func-> &_Y6test104main6_13_30FP2T0RS3i32Zv);
    YI_3 = _Y6test103fooFbLS3i32ZS3i32(0, (set-> 0, value-> 0, size-> 16, func-> YI_2));
    x = YI_3;
}
frame :  main (let argc : u32, let argv : *(void))-> i32 {
    _yrt_run_main(argc, argc, &_Y6test104mainFZv);
    return 0;
}
frame :  _Y6test103fooFbLS3i32ZS3i32 (let z : u8, let x : (set-> u8, value-> *(void), size-> u32, func-> (closure-> *(void), func-> *(void))))-> (len-> u64, ptr-> *(i32)) {
    let YI_3 : (len-> u64, ptr-> *(i32));
    let YI_4 : u8;
    let YI_5 : *(u8);
    let YI_6 : *(u8);
    let YI_7 : u64;
    let YI_8 : u64;
    let YI_9 : *(i32);
    let YI_10 : (len-> u64, ptr-> *(i32));
    let YI_11 : (len-> u64, ptr-> *(i32));
    let YI_12 : (len-> u64, ptr-> *(i32));
#IF z
#THEN_GOTO then(#3)
#ELSE_GOTO else(#5);
#LABEL then(#3);
    YI_4 = _yrt_call_lazy(&x)-> len <= 0;
#IF YI_4
#THEN_GOTO then(#1)
#ELSE_GOTO end(#2);
#LABEL then(#1);
    YI_5 = "test_resources/lazyness/test10.yr";
    YI_6 = "test10::foo";
    _yrt_exc_panic(YI_5, YI_6, 3);
#LABEL end(#2);
    YI_7 = 4 * 0;
    YI_8 = _yrt_call_lazy(&x)-> ptr + YI_7;
    YI_9 = cast!{*(i32)} (YI_8);
    *YI_9 = 9;
    YI_10 = *_yrt_call_lazy(&x);
    YI_3 = YI_10;
#GOTO end(#4);
#LABEL else(#5);
    YI_11 = (len-> 0, ptr-> 0);
    YI_3 = YI_11;
#LABEL end(#4);
    YI_12 = YI_3;
    return YI_12;
}
