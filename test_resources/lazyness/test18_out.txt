frame : [weak] test18::main::_3_26 (#{CLOSURE-VARREF} : *(()), mut ref #_REF : mut i32)-> void #_REF = {
    test18::foo ();
    1
}
frame : [weak] test18::main::_3_26 (#{CLOSURE-VARREF} : *(()), mut ref #_REF : mut usize)-> void #_REF = {
    test18::foo ();
    1us
}
frame : [weak] test18::main::_8_33 (#{CLOSURE-VARREF} : *(()), mut ref #_REF : mut [void ; 0us])-> void #_REF = []
frame : [weak] core::types::map::hashKey!{i32}::hashKey (a : *i32)-> u64 return core::types::hash::__hash (*(a))
frame : [weak] core::types::map::compareKeys!{i32}::compareKeys (a : *i32, b : *i32)-> bool {
    {
        return (*(a) == *(b));
        <unit-value>
    }
}
frame : [weak] test18::main::_8_33 (#{CLOSURE-VARREF} : *(()), mut ref #_REF : mut [i32 => i32])-> void #_REF = []
frame : test18::main ()-> void {
    let lazy a : usize = lazy ({
                test18::foo ();
                1us
            });
    let lazy b : [i32 => i32] = lazy ([]);
    a;
    b;
    <unit-value>
}
frame : test18::foo ()-> void {
    <unit-value>
}
