pointer P_1 *(void);
pointer P_2 *(P_1);
tuple T_3 (closure-> P_1, func-> P_1);
tuple T_4 (set-> u8, value-> P_1, size-> u32, func-> T_3);
pointer P_8 *(T_4);
pointer P_9 *(i32);
tuple T_10 (i32);
pointer P_11 *(T_10);
pointer P_12 *(P_11);
frame :  _Y5test13fooFLi32Zi32 (let a : T_4)-> i32 {
    YI_1 = _yrt_call_lazy(&a);
    YI_2 = *YI_1 + 1;
    return YI_2;
}
frame :  [weak] _Y5test14main6_10_10FP6T43i32Rxi32Zv (let #{CLOSURE-VARREF} : P_11, let #_REF : P_9)-> void {
    YI_1 = _Y5test13barFi32Zi32(#{CLOSURE-VARREF}-> _0);
    *#_REF = YI_1;
}
frame :  _Y5test14mainFZv ()-> void {
    z = 0;
    YI_1 = (z);
    _yrt_dup_tuple(&YI_2, &YI_1, 4);
    YI_3 = YI_2;
    YI_4 = (closure-> YI_3, func-> &_Y5test14main6_10_10FP6T43i32Rxi32Zv);
    YI_5 = _Y5test13fooFLi32Zi32((set-> 0, value-> 0, size-> 4, func-> YI_4));
}
frame :  main (let argc : u32, let argv : P_1)-> i32 {
    _yrt_run_main(argc, argc, &_Y5test14mainFZv);
    return 0;
}
