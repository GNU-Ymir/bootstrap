frame : test9::main ()-> void {
    let mut a : mut usize = 10us;
    {
        let mut #_iter : usize = 0us;
        let mut #_nb_iter : usize = a;
        while (#_iter < #_nb_iter) {
            {
                <unit-value>
            };
            #_iter = (#_iter + 1us)
        }
    };
    {
        let mut #_iter : usize = 0us;
        let mut #_nb_iter : usize = {
                let #_range : (mut usize, mut usize, isize) = (a, 0us, if (a <= 0us) 1is else -1is);
                let #_val : (mut usize, mut usize, mut usize, mut usize) = if (#_range.2 < 0is) (-#_range.2, #_range.1, #_range.0, (#_range.0 - #_range.1)) else (#_range.2, #_range.0, #_range.1, (#_range.1 - #_range.0));
                let #_nbAll : mut usize = (#_val.3 / #_val.0);
                if (#_nbAll == 18446744073709551615us) #_nbAll else if (((#_nbAll * #_val.0) + #_val.1) != #_val.2) (#_nbAll + 1us) else #_nbAll
            };
        while (#_iter < #_nb_iter) {
            {
                <unit-value>
            };
            #_iter = (#_iter + 1us)
        }
    };
    {
        let mut #_iter : usize = 0us;
        let mut #_nb_iter : usize = a;
        while (#_iter < #_nb_iter) {
            {
                <unit-value>
            };
            #_iter = (#_iter + 1us)
        }
    };
    {
        let mut #_iter : usize = 0us;
        let mut #_nb_iter : usize = {
                let #_range : (mut usize, mut usize, isize) = (a, 0us, if (a <= 0us) 1is else -1is);
                let #_val : (mut usize, mut usize, mut usize, mut usize) = if (#_range.2 < 0is) (-#_range.2, #_range.1, #_range.0, (#_range.0 - #_range.1)) else (#_range.2, #_range.0, #_range.1, (#_range.1 - #_range.0));
                let #_nbAll : mut usize = (#_val.3 / #_val.0);
                if (#_nbAll == 18446744073709551615us) #_nbAll else if (((#_nbAll * #_val.0) + #_val.1) != #_val.2) (#_nbAll + 1us) else #_nbAll
            };
        while (#_iter < #_nb_iter) {
            {
                <unit-value>
            };
            #_iter = (#_iter + 1us)
        }
    }
}
