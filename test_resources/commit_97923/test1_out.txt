frame : [weak] core::math::truncF!{f64}::truncF (a : f64)-> f64 {
    {
        core::math::trunc (a)
    }
}
frame : [weak] core::math::ffmod!{f64}::ffmod (a : f64, b : f64)-> f64 {
    (a - (core::math::truncF!{f64}::truncF!{f64}::truncF ((a / b)) * b))
}
frame : [weak] core::math::truncF!{f32}::truncF (a : f32)-> f32 {
    {
        core::math::truncf (a)
    }
}
frame : [weak] core::math::ffmod!{f32}::ffmod (a : f32, b : f32)-> f32 {
    (a - (core::math::truncF!{f32}::truncF!{f32}::truncF ((a / b)) * b))
}
frame : [weak] core::math::truncF!{f80}::truncF (a : f80)-> f80 {
    {
        core::math::truncl (a)
    }
}
frame : [weak] core::math::ffmod!{f80}::ffmod (a : f80, b : f80)-> f80 {
    (a - (core::math::truncF!{f80}::truncF!{f80}::truncF ((a / b)) * b))
}
frame : [weak] core::math::truncF!{fsize}::truncF (a : fsize)-> fsize {
    {
        core::math::truncl (a)
    }
}
frame : [weak] core::math::ffmod!{fsize}::ffmod (a : fsize, b : fsize)-> fsize {
    (a - (core::math::truncF!{fsize}::truncF!{fsize}::truncF ((a / b)) * b))
}
frame : test1::main ()-> void {
    1.6d;
    core::math::ffmod!{f64}::ffmod (10.8d, 2.3d);
    -1.6d;
    core::math::ffmod!{f64}::ffmod (-10.8d, 2.3d);
    -1.6d;
    core::math::ffmod!{f64}::ffmod (-10.8d, -2.3d);
    1.6f;
    core::math::ffmod!{f32}::ffmod (10.8f, 2.3f);
    -1.6f;
    core::math::ffmod!{f32}::ffmod (-10.8f, 2.3f);
    -1.6f;
    core::math::ffmod!{f32}::ffmod (-10.8f, -2.3f);
    1.6l;
    core::math::ffmod!{f80}::ffmod (10.8l, 2.3l);
    -1.6l;
    core::math::ffmod!{f80}::ffmod (-10.8l, 2.3l);
    -1.6l;
    core::math::ffmod!{f80}::ffmod (-10.8l, -2.3l);
    1.6r;
    core::math::ffmod!{fsize}::ffmod (10.8r, 2.3r);
    -1.6r;
    core::math::ffmod!{fsize}::ffmod (-10.8r, 2.3r);
    -1.6r;
    core::math::ffmod!{fsize}::ffmod (-10.8r, -2.3r);
    <unit-value>
}
