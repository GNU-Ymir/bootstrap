import std::stream;
import std::io; // for println

class A {
    let _i : i32;
    pub self (i : i32) with _i = i {}
    
    // Streamable has a default implementation that stream all fields of the class
    impl Streamable;
} 


def main () {
    let dmut stream = StringStream::new ();
    stream:.writeln ("{");

    // From now on every new line will be preceded by the string "== "
    stream:.entabing (txt-> "== "s8);

    stream:.writeln (A::new (89)); // A is streamable

    // Multiple entabing can be used
    stream:.entabing (txt-> "--"s8);

    // writes are variadic
    stream:.writeln (" ", 12, " ", 3.14f); 

    // Stop the last entabing (only "== " will be used from now on)
    stream:.detabing ();

    // Any type can be written inside a stream
    stream:.writeln ((1, 2, 3));

    // Stop all the entabing
    stream:.detabing ();

    stream:.writeln ("}"s8);

    print (stream[]);
}
