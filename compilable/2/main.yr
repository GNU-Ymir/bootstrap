mod main;

import std::io;

class Foo {
    pub self () {}
    
    __dtor (mut self) {
        println ("Destruct of Foo");
        println ("=============");
    }
}

class Bar over Foo {
    pub self () {}

    __dtor (mut self) {
        println ("Destruct of Bar");
    }
}

pub class Baz over Bar {
    pub self () {}
    
    __dtor (mut self) {
        println ("Destruct of Baz");
    }
    
    impl Streamable;
}

extern (C) def GC_gcollect ();

def foo () {
    for _ in 0 .. 10 {
        let x = Baz::new ();
        println (x);
    }
}

def main () {
    {
        foo ();
    }
    GC_gcollect ();
    GC_gcollect ();
}
