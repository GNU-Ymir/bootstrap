mod main;

// enum : [i32 ; 2]
// | A = [12, 34]
// | B = [98, 87]
//  -> Test;

// class A {}

// class B {T} {
//     pub self () {}
// }

def print {F, T...} (a : F, b : T) {
    a;
    b;
}

def slc {T of [U], U} (a : T) {
    a;
}

def tuple {T of (U, J), U, J} (a : T) {
    a;
}

def tuple {T of (U), U...} (a : T) {
    cte if (is!{T}{Z of (J), J...}) {
        a;
        a;
    } else {
        a;
    }
}

def main () {
    print (1, 2, 3);
    let x = [1, 2, 3];
    slc (x);
    tuple ((1, 'f'));
    tuple ((2, 't'));
    tuple ((1, 2, 3, 't'));
}

