mod main;

aka X = 12;
aka if (is!{T}{class U}) X {T...} = T::init;

class @final X {

    pub self () {}

    pub def foo (mut self) {}

    pub def bar (self) {}

    impl X, Y;
    impl Z::Z {
        pub over foo (mut self)-> i32 {
            720
        }
    }    
}


class if isBar!{T}() U {T} {}

enum : [c8]
| A = 12
| B = 34
 -> A;

enum if (is!{T}{struct U}) : T
| A = T::init
 -> B {T};

/**
 * Some comments
 */
def main () {
    let x = 12 + 32;
    let z = 84;
    let w = "str in multiple words";
}


def a {T...} (a : T)-> U {}
