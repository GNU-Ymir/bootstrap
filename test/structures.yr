mod structures;

import ymirc::utils::_;
import utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 1 start"s8);

    let res = utils::compileFile ("test_resources/struct/test1.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/struct/test1_out.txt"s8);

    logging::success (" Test structures 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 2 start"s8);

    let res = utils::compileFile ("test_resources/struct/test2.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test2_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test2_yil.txt"s8);

    logging::success (" Test structures 2 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 3 start"s8);

    let res = utils::compileFile ("test_resources/struct/test3.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test3_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test3_yil.txt"s8);

    logging::success (" Test structures 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 4 start"s8);

    let res = utils::compileFile ("test_resources/struct/test4.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test4_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test4_yil.txt"s8);

    logging::success (" Test structures 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 5 start"s8);

    let res = utils::compileFile ("test_resources/struct/test5.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/struct/test5_out.txt"s8);

    logging::success (" Test structures 5 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 6 start"s8);

    let res = utils::compileFile ("test_resources/struct/test6.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test6_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test6_yil.txt"s8);

    logging::success (" Test structures 6 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 7 start"s8);

    let res = utils::compileFile ("test_resources/struct/test7.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test7_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test7_yil.txt"s8);

    logging::success (" Test structures 7 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 8 start"s8);

    let res = utils::compileFile ("test_resources/struct/test8.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/struct/test8_out.txt"s8);

    logging::success (" Test structures 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 9 start"s8);

    let res = utils::compileFile ("test_resources/struct/test9.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test9_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test9_yil.txt"s8);

    logging::success (" Test structures 9 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 10 start"s8);

    let res = utils::compileFile ("test_resources/struct/test10.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test10_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test10_yil.txt"s8);

    logging::success (" Test structures 10 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 12 start"s8);

    let res = utils::compileFile ("test_resources/struct/test12.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test12_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test12_yil.txt"s8);

    logging::success (" Test structures 12 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 13 start"s8);

    let res = utils::compileFile ("test_resources/struct/test13.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/struct/test13_out.txt"s8);

    logging::success (" Test structures 13 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 14 start"s8);

    let res = utils::compileFile ("test_resources/struct/test14.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/struct/test14_out.txt"s8);

    logging::success (" Test structures 14 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 15 start"s8);

    let res = utils::compileFile ("test_resources/struct/test15.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test15_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test15_yil.txt"s8);

    logging::success (" Test structures 15 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test structures 16 start"s8);

    let res = utils::compileFile ("test_resources/struct/test16.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/struct/test16_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/struct/test16_yil.txt"s8);

    logging::success (" Test structures 16 finished"s8);
}
