in implicit_cast_complex;

use ymirc::utils::_;
use utils;

use std::io;

// Test for implicit cast
__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast complex 1 start");

    let res = utils::compileFile ("test_resources/implicit_cast/complex/test1.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/implicit_cast/complex/test1_out.txt");

    logging::success (" Test implicit cast complex 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast complex 2 start");

    let res = utils::compileFile ("test_resources/implicit_cast/complex/test2.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/implicit_cast/complex/test2_out.txt");

    logging::success (" Test implicit cast complex 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast complex 3 start");

    let res = utils::compileFile ("test_resources/implicit_cast/complex/test3.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/implicit_cast/complex/test3_out.txt");

    logging::success (" Test implicit cast complex 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast complex 4 start");

    let res = utils::compileFile ("test_resources/implicit_cast/complex/test4.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/implicit_cast/complex/test4_out.txt");

    logging::success (" Test implicit cast complex 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast complex 5 start");

    let res = utils::compileFile ("test_resources/implicit_cast/complex/test5.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/implicit_cast/complex/test5_out.txt");

    logging::success (" Test implicit cast complex 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast complex 6 start");

    let res = utils::compileFile ("test_resources/implicit_cast/complex/test6.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/implicit_cast/complex/test6_out.txt");

    logging::success (" Test implicit cast complex 6 finished");
}
