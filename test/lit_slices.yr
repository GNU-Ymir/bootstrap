in lit_slices;

use ymirc::utils::_;
use utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 1 start");


    let res = utils::compileFile ("test_resources/lit_slices/test1.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test1_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test1_yil.txt");

    logging::success (" Test lit slices 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 2 start");

    let res = utils::compileFile ("test_resources/lit_slices/test2.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test2_out.txt");

    logging::success (" Test lit slices 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 3 start");


    let res = utils::compileFile ("test_resources/lit_slices/test3.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test3_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test3_yil.txt");

    logging::success (" Test lit slices 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 4 start");

    let res = utils::compileFile ("test_resources/lit_slices/test4.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test4_out.txt");

    logging::success (" Test lit slices 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 5 start");


    let res = utils::compileFile ("test_resources/lit_slices/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test5_yil.txt");

    logging::success (" Test lit slices 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 6 start");


    let res = utils::compileFile ("test_resources/lit_slices/test6.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test6_out.txt");

    logging::success (" Test lit slices 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 7 start");


    let res = utils::compileFile ("test_resources/lit_slices/test7.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test7_out.txt");

    logging::success (" Test lit slices 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 8 start");


    let res = utils::compileFile ("test_resources/lit_slices/test8.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test8_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test8_yil.txt");

    logging::success (" Test lit slices 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 9 start");

    let res = utils::compileFile ("test_resources/lit_slices/test9.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test9_out.txt");

    logging::success (" Test lit slices 9 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 10 start");


    let res = utils::compileFile ("test_resources/lit_slices/test10.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test10_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test10_yil.txt");

    logging::success (" Test lit slices 10 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 11 start");


    let res = utils::compileFile ("test_resources/lit_slices/test11.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test11_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test11_yil.txt");

    logging::success (" Test lit slices 11 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 12 start");

    let res = utils::compileFile ("test_resources/lit_slices/test12.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test12_out.txt");

    logging::success (" Test lit slices 12 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 13 start");

    let res = utils::compileFile ("test_resources/lit_slices/test13.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test13_out.txt");

    logging::success (" Test lit slices 13 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 14 start");


    let res = utils::compileFile ("test_resources/lit_slices/test14.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test14_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test14_yil.txt");

    logging::success (" Test lit slices 14 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 15 start");

    let res = utils::compileFile ("test_resources/lit_slices/test15.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test15_out.txt");

    logging::success (" Test lit slices 15 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 16 start");


    let res = utils::compileFile ("test_resources/lit_slices/test16.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test16_out.txt");

    logging::success (" Test lit slices 16 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 17 start");


    let res = utils::compileFile ("test_resources/lit_slices/test17.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test17_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test17_yil.txt");

    logging::success (" Test lit slices 17 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 18 start");

    let res = utils::compileFile ("test_resources/lit_slices/test18.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test18_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test18_yil.txt");

    logging::success (" Test lit slices 18 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 19 start");

    let res = utils::compileFile ("test_resources/lit_slices/test19.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test19_out.txt");

    logging::success (" Test lit slices 19 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 20 start");

    let res = utils::compileFile ("test_resources/lit_slices/test20.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test20_out.txt");

    logging::success (" Test lit slices 20 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 21 start");

    let res = utils::compileFile ("test_resources/lit_slices/test21.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test21_out.txt");

    logging::success (" Test lit slices 21 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 22 start");

    let res = utils::compileFile ("test_resources/lit_slices/test22.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test22_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test22_yil.txt");

    logging::success (" Test lit slices 22 finished");
}
