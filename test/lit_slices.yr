mod lit_slices;

import ymirc::utils::_;
import utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 1 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test1.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test1_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test1_yil.txt"s8);

    logging::success (" Test lit slices 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 2 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test2.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test2_out.txt"s8);

    logging::success (" Test lit slices 2 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 3 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test3.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test3_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test3_yil.txt"s8);

    logging::success (" Test lit slices 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 4 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test4.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test4_out.txt"s8);

    logging::success (" Test lit slices 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 5 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test5.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test5_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test5_yil.txt"s8);

    logging::success (" Test lit slices 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 6 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test6.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test6_out.txt"s8);

    logging::success (" Test lit slices 6 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 7 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test7.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test7_out.txt"s8);

    logging::success (" Test lit slices 7 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 8 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test8.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test8_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test8_yil.txt"s8);

    logging::success (" Test lit slices 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 9 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test9.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test9_out.txt"s8);

    logging::success (" Test lit slices 9 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 10 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test10.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test10_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test10_yil.txt"s8);

    logging::success (" Test lit slices 10 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 11 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test11.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test11_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test11_yil.txt"s8);

    logging::success (" Test lit slices 11 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 12 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test12.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test12_out.txt"s8);

    logging::success (" Test lit slices 12 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 13 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test13.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test13_out.txt"s8);

    logging::success (" Test lit slices 13 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 14 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test14.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test14_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test14_yil.txt"s8);

    logging::success (" Test lit slices 14 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 15 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test15.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test15_out.txt"s8);

    logging::success (" Test lit slices 15 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 16 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test16.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test16_out.txt"s8);

    logging::success (" Test lit slices 16 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 17 start"s8);


    let res = utils::compileFile ("test_resources/lit_slices/test17.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test17_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test17_yil.txt"s8);

    logging::success (" Test lit slices 17 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 18 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test18.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test18_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test18_yil.txt"s8);

    logging::success (" Test lit slices 18 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 19 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test19.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test19_out.txt"s8);

    logging::success (" Test lit slices 19 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 20 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test20.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test20_out.txt"s8);

    logging::success (" Test lit slices 20 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 21 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test21.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_slices/test21_out.txt"s8);

    logging::success (" Test lit slices 21 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit slices 22 start"s8);

    let res = utils::compileFile ("test_resources/lit_slices/test22.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_slices/test22_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_slices/test22_yil.txt"s8);

    logging::success (" Test lit slices 22 finished"s8);
}
