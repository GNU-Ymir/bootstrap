in cast_float;

use ymirc::utils::_;
use utils;

use std::io;

// Test for casting on float to floats
__test {
    logging::setRelativeTime ();
    logging::info (" Test cast float 1 start");

    let res = utils::compileFile ("test_resources/cast_float/test1.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/cast_float/test1_out.txt");

    logging::success (" Test cast float 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test cast float 2 start");

    let res = utils::compileFile ("test_resources/cast_float/test2.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/cast_float/test2_out.txt");

    logging::success (" Test cast float 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test cast float 3 start");

    let res = utils::compileFile ("test_resources/cast_float/test3.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/cast_float/test3_out.txt");

    logging::success (" Test cast float 3 finished");
}
