mod implicit_cast;

import ymirc::utils::_;
import utils;

import std::io;

// Test for implicit cast
__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast 1 start"s8);

    let (gens, errors) = utils::compileFile ("test_resources/implicit_cast/test1.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/implicit_cast/test1_out.txt"s8);

    logging::success (" Test implicit cast 1 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast 2 start"s8);

    let (gens, errors) = utils::compileFile ("test_resources/implicit_cast/test2.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/implicit_cast/test2_out.txt"s8);

    logging::success (" Test implicit cast 2 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast 3 start"s8);

    let (gens, errors) = utils::compileFile ("test_resources/implicit_cast/test3.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/implicit_cast/test3_out.txt"s8);

    logging::success (" Test implicit cast 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast 4 start"s8);

    let (gens, errors) = utils::compileFile ("test_resources/implicit_cast/test4.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/implicit_cast/test4_out.txt"s8);

    logging::success (" Test implicit cast 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test implicit cast 5 start"s8);

    let (gens, errors) = utils::compileFile ("test_resources/implicit_cast/test5.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/implicit_cast/test5_out.txt"s8);

    logging::success (" Test implicit cast 5 finished"s8);
}
