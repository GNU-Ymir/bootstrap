in lit_map;

use ymirc::utils::_;
use utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 1 start");


    let res = utils::compileFile ("test_resources/lit_map/test1.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_map/test1_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_map/test1_yil.txt");

    logging::success (" Test lit map 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 2 start");


    let res = utils::compileFile ("test_resources/lit_map/test2.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_map/test2_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_map/test2_yil.txt");

    logging::success (" Test lit map 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 3 start");

    let res = utils::compileFile ("test_resources/lit_map/test3.yr", withLint-> true);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_map/test3_out.txt");

    logging::success (" Test lit map 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 4 start");

    let res = utils::compileFile ("test_resources/lit_map/test4.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_map/test4_out.txt");

    logging::success (" Test lit map 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 5 start");

    let res = utils::compileFile ("test_resources/lit_map/test5.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_map/test5_out.txt");

    logging::success (" Test lit map 5 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 6 start");

    let res = utils::compileFile ("test_resources/lit_map/test6.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_map/test6_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_map/test6_yil.txt");

    logging::success (" Test lit map 6 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 7 start");

    let res = utils::compileFile ("test_resources/lit_map/test7.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_map/test7_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_map/test7_yil.txt");

    logging::success (" Test lit map 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit map 8 start");

    let res = utils::compileFile ("test_resources/lit_map/test8.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_map/test8_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_map/test8_yil.txt");

    logging::success (" Test lit map 8 finished");
}
