mod char_type;

import ymirc::utils::_;
import utils;

import std::io;

// Test for char type
__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 1 start"s8);

    let res = utils::compileFile ("test_resources/char_type/test1.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test1_out.txt"s8);

    logging::success (" Test cast float 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 2 start"s8);

    let res = utils::compileFile ("test_resources/char_type/test2.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test2_out.txt"s8);

    logging::success (" Test cast float 2 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 3 start"s8);

    let res = utils::compileFile ("test_resources/char_type/test3.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/char_type/test3_out.txt"s8);

    logging::success (" Test cast float 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 4 start"s8);

    let res = utils::compileFile ("test_resources/char_type/test4.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/char_type/test4_out.txt"s8);

    logging::success (" Test cast float 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 5 start"s8);

    let res = utils::compileFile ("test_resources/char_type/test5.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test5_out.txt"s8);

    logging::success (" Test cast float 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 6 start"s8);

    let res = utils::compileFile ("test_resources/char_type/test6.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test6_out.txt"s8);

    logging::success (" Test cast float 6 finished"s8);
}

// __test {
//     logging::setRelativeTime ();
//     logging::info (" Test char type 7 start"s8);

//     let res = utils::compileFile ("test_resources/char_type/test7.yr"s8);
//     utils::ensureErrorEmpty (res.err);
//     utils::compareResultWithFile (res.sem, "test_resources/char_type/test7_out.txt"s8);

//     logging::success (" Test cast float 7 finished"s8);
// }
