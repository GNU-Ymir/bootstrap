in char_type;

use ymirc::utils::_;
use utils;

use std::io;

// Test for char type
__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 1 start");

    let res = utils::compileFile ("test_resources/char_type/test1.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test1_out.txt");

    logging::success (" Test char type 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 2 start");

    let res = utils::compileFile ("test_resources/char_type/test2.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test2_out.txt");

    logging::success (" Test char type 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 3 start");

    let res = utils::compileFile ("test_resources/char_type/test3.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/char_type/test3_out.txt");

    logging::success (" Test char type 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 4 start");

    let res = utils::compileFile ("test_resources/char_type/test4.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/char_type/test4_out.txt");

    logging::success (" Test char type 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 5 start");

    let res = utils::compileFile ("test_resources/char_type/test5.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test5_out.txt");

    logging::success (" Test char type 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test char type 6 start");

    let res = utils::compileFile ("test_resources/char_type/test6.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/char_type/test6_out.txt");

    logging::success (" Test char type 6 finished");
}

// __test {
//     logging::setRelativeTime ();
//     logging::info (" Test char type 7 start");

//     let res = utils::compileFile ("test_resources/char_type/test7.yr");
//     utils::ensureErrorEmpty (res.err);
//     utils::compareResultWithFile (res.sem, "test_resources/char_type/test7_out.txt");

//     logging::success (" Test char type 7 finished");
// }
