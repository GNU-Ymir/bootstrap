in entities;

use ymirc::utils::_;
use utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test entitiess 1 start");

    let res = utils::compileFile ("test_resources/entities/test1.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/entities/test1_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/entities/test1_yil.txt");

    logging::success (" Test entitiess 1 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test entitiess 2 start");

    let res = utils::compileFile ("test_resources/entities/test2.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/entities/test2_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/entities/test2_yil.txt");

    logging::success (" Test entitiess 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test entitiess 3 start");

    let res = utils::compileFile ("test_resources/entities/test3.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/entities/test3_out.txt");

    logging::success (" Test entitiess 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test entitiess 4 start");

    let res = utils::compileFile ("test_resources/entities/test4.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/entities/test4_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/entities/test4_yil.txt");

    logging::success (" Test entitiess 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test entitiess 5 start");

    let res = utils::compileFile ("test_resources/entities/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/entities/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/entities/test5_yil.txt");

    logging::success (" Test entitiess 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test entitiess 6 start");

    let res = utils::compileFile ("test_resources/entities/test6.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/entities/test6_out.txt");

    logging::success (" Test entitiess 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test entitiess 7 start");

    let res = utils::compileFile ("test_resources/entities/test7.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/entities/test7_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/entities/test7_yil.txt");

    logging::success (" Test entitiess 7 finished");
}
