in lit_arrays;

use ymirc::utils::_;
use utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 1 start");


    let res = utils::compileFile ("test_resources/lit_arrays/test1.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test1_out.txt");

    logging::success (" Test lit arrays 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 2 start");


    let res = utils::compileFile ("test_resources/lit_arrays/test2.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test2_out.txt");

    logging::success (" Test lit arrays 2 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 3 start");


    let res = utils::compileFile ("test_resources/lit_arrays/test3.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test3_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_arrays/test3_yil.txt");

    logging::success (" Test lit arrays 3 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 4 start");


    let res = utils::compileFile ("test_resources/lit_arrays/test4.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test4_out.txt");

    logging::success (" Test lit arrays 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 5 start");


    let res = utils::compileFile ("test_resources/lit_arrays/test5.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test5_out.txt");

    logging::success (" Test lit arrays 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 6 start");


    let res = utils::compileFile ("test_resources/lit_arrays/test6.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test6_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_arrays/test6_yil.txt");

    logging::success (" Test lit arrays 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 7 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test7.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_arrays/test7_out.txt");

    logging::success (" Test lit arrays 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 8 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test8.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test8_out.txt");

    logging::success (" Test lit arrays 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 9 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test9.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test9_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_arrays/test9_yil.txt");

    logging::success (" Test lit arrays 9 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 10 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test10.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test10_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_arrays/test10_yil.txt");

    logging::success (" Test lit arrays 10 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 11 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test11.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test11_out.txt");

    logging::success (" Test lit arrays 11 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 12 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test12.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_arrays/test12_out.txt");

    logging::success (" Test lit arrays 12 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 13 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test13.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test13_out.txt");

    logging::success (" Test lit arrays 13 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 14 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test14.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test14_out.txt");

    logging::success (" Test lit arrays 14 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 15 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test15.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test15_out.txt");

    logging::success (" Test lit arrays 15 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 16 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test16.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test16_out.txt");

    logging::success (" Test lit arrays 16 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 17 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test17.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_arrays/test17_out.txt");

    logging::success (" Test lit arrays 17 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 18 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test18.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test18_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_arrays/test18_yil.txt");

    logging::success (" Test lit arrays 18 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit arrays 19 start");

    let res = utils::compileFile ("test_resources/lit_arrays/test19.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_arrays/test19_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_arrays/test19_yil.txt");

    logging::success (" Test lit arrays 19 finished");
}
