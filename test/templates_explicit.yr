mod templates_explicit;

import ymirc::utils::_;
import utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test template explicit 1 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test1.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test1_out.txt"s8);

    logging::success (" Test template explicit 1 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 2 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test2.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/explicit/test2_out.txt"s8);

    logging::success ("Test template explicit 2 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 3 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test3.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test3_out.txt"s8);

    logging::success ("Test template explicit 3 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 4 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test4.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/explicit/test4_out.txt"s8);

    logging::success ("Test template explicit 4 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 5 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test5.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test5_out.txt"s8);

    logging::success ("Test template explicit 5 end"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 6 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test6.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/explicit/test6_out.txt"s8);

    logging::success ("Test template explicit 6 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 7 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test7.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test7_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/explicit/test7_yil.txt"s8);

    logging::success ("Test template explicit 7 end"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 9 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test9.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test9_out.txt"s8);

    logging::success ("Test template explicit 9 end"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 10 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test10.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test10_out.txt"s8);

    logging::success ("Test template explicit 10 end"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 11 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test11.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test11_out.txt"s8);

    logging::success ("Test template explicit 11 end"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 12 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test12.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/explicit/test12_out.txt"s8);

    logging::success ("Test template explicit 12 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 13 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test13.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/explicit/test13_out.txt"s8);

    logging::success ("Test template explicit 13 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 14 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test14.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/explicit/test14_out.txt"s8);

    logging::success ("Test template explicit 14 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 15 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test15.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test15_out.txt"s8);

    logging::success ("Test template explicit 15 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 16 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test16.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test16_out.txt"s8);

    logging::success ("Test template explicit 16 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 17 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test17.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test17_out.txt"s8);

    logging::success ("Test template explicit 17 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 18 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test18.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/explicit/test18_out.txt"s8);

    logging::success ("Test template explicit 18 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test template explicit 19 start"s8);

    let res = utils::compileFile ("test_resources/templates/explicit/test19.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/explicit/test19_out.txt"s8);

    logging::success ("Test template explicit 19 end"s8);
}
