mod lit_tuples;

import ymirc::utils::_;
import utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 1 start"s8);


    let (gens, errors) = utils::compileFile ("test_resources/lit_tuples/test1.yr"s8);
    utils::compareResultWithFile (gens, "test_resources/lit_tuples/test1_out.txt"s8);
    utils::ensureErrorEmpty (errors);

    logging::success (" Test lit tuples 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 2 start"s8);


    let (gens, errors) = utils::compileFile ("test_resources/lit_tuples/test2.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/lit_tuples/test2_out.txt"s8);

    logging::success (" Test lit tuples 2 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 3 start"s8);


    let (_, errors) = utils::compileFile ("test_resources/lit_tuples/test3.yr"s8);
    utils::compareErrorWithFile (errors, "test_resources/lit_tuples/test3_out.txt"s8);


    logging::success (" Test lit tuples 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 4 start"s8);


    let (gens, errors) = utils::compileFile ("test_resources/lit_tuples/test4.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/lit_tuples/test4_out.txt"s8);


    logging::success (" Test lit tuples 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 5 start"s8);


    let (_, errors) = utils::compileFile ("test_resources/lit_tuples/test5.yr"s8);
    utils::compareErrorWithFile (errors, "test_resources/lit_tuples/test5_out.txt"s8);


    logging::success (" Test lit tuples 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 6 start"s8);


    let (gens, errors) = utils::compileFile ("test_resources/lit_tuples/test6.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/lit_tuples/test6_out.txt"s8);


    logging::success (" Test lit tuples 6 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 7 start"s8);


    let (gens, errors) = utils::compileFile ("test_resources/lit_tuples/test7.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/lit_tuples/test7_out.txt"s8);


    logging::success (" Test lit tuples 7 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 8 start"s8);


    let (gens, errors) = utils::compileFile ("test_resources/lit_tuples/test8.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/lit_tuples/test8_out.txt"s8);


    logging::success (" Test lit tuples 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 9 start"s8);


    let (gens, errors) = utils::compileFile ("test_resources/lit_tuples/test9.yr"s8);
    utils::ensureErrorEmpty (errors);
    utils::compareResultWithFile (gens, "test_resources/lit_tuples/test9_out.txt"s8);


    logging::success (" Test lit tuples 9 finished"s8);
}
