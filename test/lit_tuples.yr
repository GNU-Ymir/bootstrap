in lit_tuples;

use ymirc::utils::_;
use utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 1 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test1.yr");
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test1_out.txt");
    utils::ensureErrorEmpty (res.err);

    logging::success (" Test lit tuples 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 2 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test2.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test2_out.txt");

    logging::success (" Test lit tuples 2 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 3 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test3.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_tuples/test3_out.txt");


    logging::success (" Test lit tuples 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 4 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test4.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test4_out.txt");


    logging::success (" Test lit tuples 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 5 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test5.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_tuples/test5_out.txt");


    logging::success (" Test lit tuples 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 6 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test6.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test6_out.txt");


    logging::success (" Test lit tuples 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 7 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test7.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test7_out.txt");


    logging::success (" Test lit tuples 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 8 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test8.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test8_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_tuples/test8_yil.txt");


    logging::success (" Test lit tuples 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 9 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test9.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test9_out.txt");


    logging::success (" Test lit tuples 9 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 10 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test10.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test10_out.txt");


    logging::success (" Test lit tuples 10 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 11 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test11.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test11_out.txt");


    logging::success (" Test lit tuples 11 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 12 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test12.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_tuples/test12_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_tuples/test12_yil.txt");


    logging::success (" Test lit tuples 12 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 13 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test13.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_tuples/test13_out.txt");


    logging::success (" Test lit tuples 13 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 14 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test14.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_tuples/test14_out.txt");


    logging::success (" Test lit tuples 14 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit tuples 15 start");


    let res = utils::compileFile ("test_resources/lit_tuples/test15.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_tuples/test15_out.txt");


    logging::success (" Test lit tuples 15 finished");
}
