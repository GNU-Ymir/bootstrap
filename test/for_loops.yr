in for_loops;

use ymirc::utils::_;
use utils;

mod arrays {
    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 1 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test1.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/arrays/test1_out.txt");

        logging::success (" Test for loops on arrays 1 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 2 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test2.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test2_out.txt");

        logging::success (" Test for loops on arrays 2 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 3 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test3.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test3_out.txt");

        logging::success (" Test for loops on arrays 3 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 4 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test4.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test4_out.txt");

        logging::success (" Test for loops on arrays 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 5 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test5.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/arrays/test5_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/arrays/test5_yil.txt");

        logging::success (" Test for loops on arrays 5 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 6 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test6.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test6_out.txt");

        logging::success (" Test for loops on arrays 6 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 7 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test7.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/arrays/test7_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/arrays/test7_yil.txt");

        logging::success (" Test for loops on arrays 7 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 8 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test8.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test8_out.txt");

        logging::success (" Test for loops on arrays 8 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 9 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test9.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test9_out.txt");

        logging::success (" Test for loops on arrays 9 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 10 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test10.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/arrays/test10_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/arrays/test10_yil.txt");

        logging::success (" Test for loops on arrays 10 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 11 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test11.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/arrays/test11_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/arrays/test11_yil.txt");

        logging::success (" Test for loops on arrays 11 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 12 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test12.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test12_out.txt");

        logging::success (" Test for loops on arrays 12 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 13 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test13.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test13_out.txt");

        logging::success (" Test for loops on arrays 13 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 14 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test14.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test14_out.txt");

        logging::success (" Test for loops on arrays 14 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 15 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test15.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/arrays/test15_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/arrays/test15_yil.txt");

        logging::success (" Test for loops on arrays 15 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 16 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test16.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test16_out.txt");

        logging::success (" Test for loops on arrays 16 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 17 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test17.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test17_out.txt");

        logging::success (" Test for loops on arrays 17 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 18 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test18.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test18_out.txt");

        logging::success (" Test for loops on arrays 18 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on arrays 19 start");


        let res = utils::compileFile ("test_resources/for_loops/arrays/test19.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test19_out.txt");

        logging::success (" Test for loops on arrays 19 finished");
    }

}

/**
 * ======================================================================
 * ======================================================================
 * ==========================      SLICES     ===========================
 * ======================================================================
 * ======================================================================
 */

mod slices {

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 1 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test1.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test1_out.txt");

        logging::success (" Test for loops on slices 1 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 2 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test2.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test2_out.txt");

        logging::success (" Test for loops on slices 2 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 3 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test3.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test3_out.txt");

        logging::success (" Test for loops on slices 3 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 4 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test4.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test4_out.txt");

        logging::success (" Test for loops on slices 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 5 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test5.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test5_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/slices/test5_yil.txt");

        logging::success (" Test for loops on slices 5 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 6 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test6.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test6_out.txt");

        logging::success (" Test for loops on slices 6 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 7 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test7.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test7_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/slices/test7_yil.txt");

        logging::success (" Test for loops on slices 7 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 8 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test8.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test8_out.txt");

        logging::success (" Test for loops on slices 8 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 9 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test9.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test9_out.txt");

        logging::success (" Test for loops on slices 9 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 10 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test10.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test10_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/slices/test10_yil.txt");

        logging::success (" Test for loops on slices 10 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 11 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test11.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test11_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/slices/test11_yil.txt");

        logging::success (" Test for loops on slices 11 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 12 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test12.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test12_out.txt");

        logging::success (" Test for loops on slices 12 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 13 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test13.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test13_out.txt");

        logging::success (" Test for loops on slices 13 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 14 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test14.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test14_out.txt");

        logging::success (" Test for loops on slices 14 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 15 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test15.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test15_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/slices/test15_yil.txt");

        logging::success (" Test for loops on slices 15 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 16 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test16.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test16_out.txt");

        logging::success (" Test for loops on slices 16 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 17 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test17.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test17_out.txt");

        logging::success (" Test for loops on slices 17 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 18 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test18.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test18_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/slices/test18_yil.txt");

        logging::success (" Test for loops on slices 18 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 19 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test19.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/slices/test19_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/slices/test19_yil.txt");

        logging::success (" Test for loops on slices 19 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 20 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test20.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test20_out.txt");

        logging::success (" Test for loops on slices 20 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on slices 21 start");


        let res = utils::compileFile ("test_resources/for_loops/slices/test21.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/slices/test21_out.txt");

        logging::success (" Test for loops on slices 21 finished");
    }

}

/**
 * ======================================================================
 * ======================================================================
 * ==========================      TUPLES     ===========================
 * ======================================================================
 * ======================================================================
 */

mod tuples {

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 1 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test1.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/tuples/test1_out.txt");

        logging::success (" Test for loops on tuples 1 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 2 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test2.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/tuples/test2_out.txt");

        logging::success (" Test for loops on tuples 2 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 3 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test3.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/tuples/test3_out.txt");

        logging::success (" Test for loops on tuples 3 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 4 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test4.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/tuples/test4_out.txt");

        logging::success (" Test for loops on tuples 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 5 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test5.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/tuples/test5_out.txt");

        logging::success (" Test for loops on tuples 5 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 6 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test6.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/tuples/test6_out.txt");

        logging::success (" Test for loops on tuples 6 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 7 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test7.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/tuples/test7_out.txt");

        logging::success (" Test for loops on tuples 7 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 8 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test8.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/tuples/test8_out.txt");

        logging::success (" Test for loops on tuples 8 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 9 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test9.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/tuples/test9_out.txt");

        logging::success (" Test for loops on tuples 9 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test for loops on tuples 10 start");


        let res = utils::compileFile ("test_resources/for_loops/tuples/test10.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/tuples/test10_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/tuples/test10_yil.txt");

        logging::success (" Test for loops on tuples 10 finished");
    }


}


mod lst_compr {
    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 1 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test1.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test1_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test1_yil.txt");

        logging::success (" Test for loops on arrays 1 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 2 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test2.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test2_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test2_yil.txt");

        logging::success (" Test for loops on arrays 2 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 3 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test3.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test3_out.txt");

        logging::success (" Test for loops on arrays 3 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 4 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test4.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test4_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test4_yil.txt");

        logging::success (" Test for loops on arrays 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 5 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test5.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test5_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test5_yil.txt");

        logging::success (" Test for loops on arrays 5 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 6 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test6.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test6_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test6_yil.txt");

        logging::success (" Test for loops on arrays 6 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 7 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test7.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test7_out.txt");

        logging::success (" Test for loops on arrays 7 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 8 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test8.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test8_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test8_yil.txt");

        logging::success (" Test for loops on arrays 8 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 9 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test9.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test9_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test9_yil.txt");

        logging::success (" Test for loops on arrays 9 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 10 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test10.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test10_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test10_yil.txt");

        logging::success (" Test for loops on arrays 10 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 11 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test11.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test11_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test11_yil.txt");

        logging::success (" Test for loops on arrays 11 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 12 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test12.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test12_out.txt");

        logging::success (" Test for loops on arrays 12 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 13 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test13.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test13_out.txt");

        logging::success (" Test for loops on arrays 13 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 14 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test14.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test14_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test14_yil.txt");

        logging::success (" Test for loops on arrays 14 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 15 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test15.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test15_out.txt");

        logging::success (" Test for loops on arrays 15 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 16 start");

        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test16.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr/test16_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr/test16_yil.txt");

        logging::success (" Test for loops on arrays 16 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 17 start");

        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test17.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test17_out.txt");

        logging::success (" Test for loops on arrays 17 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 18 start");

        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test18.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test18_out.txt");

        logging::success (" Test for loops on arrays 18 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test list compr 19 start");

        let res = utils::compileFile ("test_resources/for_loops/lst_compr/test19.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr/test19_out.txt");

        logging::success (" Test for loops on arrays 19 finished");
    }

}

mod override {
    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 1 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test1.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test1_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test1_yil.txt");

        logging::success (" Test override 1 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 2 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test2.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test2_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test2_yil.txt");

        logging::success (" Test override 2 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 3 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test3.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/override/test3_out.txt");

        logging::success (" Test override 3 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 4 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test4.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/override/test4_out.txt");

        logging::success (" Test override 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 5 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test5.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/override/test5_out.txt");

        logging::success (" Test override 5 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 8 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test8.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test8_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test8_yil.txt");

        logging::success (" Test override 8 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 9 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test9.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test9_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test9_yil.txt");

        logging::success (" Test override 9 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 10 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test10.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test10_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test10_yil.txt");

        logging::success (" Test override 10 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 11 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test11.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test11_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test11_yil.txt");

        logging::success (" Test override 11 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 12 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test12.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test12_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test12_yil.txt");

        logging::success (" Test override 12 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 13 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test13.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test13_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test13_yil.txt");

        logging::success (" Test override 13 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test override 14 start");


        let res = utils::compileFile ("test_resources/for_loops/override/test14.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/override/test14_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/override/test14_yil.txt");

        logging::success (" Test override 14 finished");
    }


}


mod override_compr {
    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 1 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test1.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test1_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test1_yil.txt");

        logging::success (" Test lst_compr_class 1 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 2 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test2.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test2_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test2_yil.txt");

        logging::success (" Test lst_compr_class 2 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 3 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test3.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr_class/test3_out.txt");

        logging::success (" Test lst_compr_class 3 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 4 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test4.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr_class/test4_out.txt");

        logging::success (" Test lst_compr_class 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 5 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test5.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/for_loops/lst_compr_class/test5_out.txt");

        logging::success (" Test lst_compr_class 5 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 8 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test8.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test8_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test8_yil.txt");

        logging::success (" Test lst_compr_class 8 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 9 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test9.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test9_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test9_yil.txt");

        logging::success (" Test lst_compr_class 9 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 10 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test10.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test10_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test10_yil.txt");

        logging::success (" Test lst_compr_class 10 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 11 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test11.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test11_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test11_yil.txt");

        logging::success (" Test lst_compr_class 11 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 12 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test12.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test12_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test12_yil.txt");

        logging::success (" Test lst_compr_class 12 finished");
    }


    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 13 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test13.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test13_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test13_yil.txt");

        logging::success (" Test lst_compr_class 13 finished");
    }


    
    __test {
        logging::setRelativeTime ();
        logging::info (" Test lst_compr_class 14 start");


        let res = utils::compileFile ("test_resources/for_loops/lst_compr_class/test14.yr", withLint-> true);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/for_loops/lst_compr_class/test14_out.txt");
        utils::compareResultWithFile (res.exp, "test_resources/for_loops/lst_compr_class/test14_yil.txt");

        logging::success (" Test lst_compr_class 14 finished");
    }


}
