mod for_loops;

import ymirc::utils::_;
import utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test for loops on arrays 1 start"s8);


    let res = utils::compileFile ("test_resources/for_loops/arrays/test1.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/for_loops/arrays/test1_out.txt"s8);

    logging::success (" Test for loops on arrays 1 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test for loops on arrays 2 start"s8);


    let res = utils::compileFile ("test_resources/for_loops/arrays/test2.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test2_out.txt"s8);

    logging::success (" Test for loops on arrays 2 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test for loops on arrays 3 start"s8);


    let res = utils::compileFile ("test_resources/for_loops/arrays/test3.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test3_out.txt"s8);

    logging::success (" Test for loops on arrays 3 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test for loops on arrays 4 start"s8);


    let res = utils::compileFile ("test_resources/for_loops/arrays/test4.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/for_loops/arrays/test4_out.txt"s8);

    logging::success (" Test for loops on arrays 4 finished"s8);
}
