in lit_class;

use ymirc::utils::_;
use utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 1 start");

    let res = utils::compileFile ("test_resources/lit_class/test1.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test1_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test1_yil.txt");

    logging::success (" Test lit class 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 2 start");

    let res = utils::compileFile ("test_resources/lit_class/test2.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test2_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test2_yil.txt");

    logging::success (" Test lit class 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 3 start");

    let res = utils::compileFile ("test_resources/lit_class/test3.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test3_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test3_yil.txt");

    logging::success (" Test lit class 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 4 start");

    let res = utils::compileFile ("test_resources/lit_class/test4.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test4_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test4_yil.txt");

    logging::success (" Test lit class 4 finished");
}


mod errors {

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 1 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test1.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test1_out.txt");

        logging::success (" Test lit class err 1 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 2 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test2.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test2_out.txt");

        logging::success (" Test lit class err 2 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 3 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test3.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test3_out.txt");

        logging::success (" Test lit class err 3 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 4 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test4.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test4_out.txt");

        logging::success (" Test lit class err 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 4 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test4.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test4_out.txt");

        logging::success (" Test lit class err 4 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 5 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test5.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test5_out.txt");

        logging::success (" Test lit class err 5 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 6 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test6.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test6_out.txt");

        logging::success (" Test lit class err 6 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 7 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test7.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test7_out.txt");

        logging::success (" Test lit class err 7 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 8 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test8.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/lit_class/errors/test8_out.txt");

        logging::success (" Test lit class err 8 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 9 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test9.yr");
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/lit_class/errors/test9_out.txt");

        logging::success (" Test lit class err 9 finished");
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 10 start");

        let res = utils::compileFile ("test_resources/lit_class/errors/test10.yr");
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test10_out.txt");

        logging::success (" Test lit class err 10 finished");
    }


}
