
mod lit_class;

import ymirc::utils::_;
import utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 1 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/test1.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test1_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test1_yil.txt"s8);

    logging::success (" Test lit class 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 2 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/test2.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test2_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test2_yil.txt"s8);

    logging::success (" Test lit class 2 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 3 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/test3.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test3_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test3_yil.txt"s8);

    logging::success (" Test lit class 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class 4 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/test4.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/test4_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/test4_yil.txt"s8);

    logging::success (" Test lit class 4 finished"s8);
}


mod errors {

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 1 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test1.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test1_out.txt"s8);

        logging::success (" Test lit class err 1 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 2 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test2.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test2_out.txt"s8);

        logging::success (" Test lit class err 2 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 3 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test3.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test3_out.txt"s8);

        logging::success (" Test lit class err 3 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 4 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test4.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test4_out.txt"s8);

        logging::success (" Test lit class err 4 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 4 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test4.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test4_out.txt"s8);

        logging::success (" Test lit class err 4 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 5 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test5.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test5_out.txt"s8);

        logging::success (" Test lit class err 5 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 6 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test6.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test6_out.txt"s8);

        logging::success (" Test lit class err 6 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 7 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test7.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test7_out.txt"s8);

        logging::success (" Test lit class err 7 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 8 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test8.yr"s8);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/lit_class/errors/test8_out.txt"s8);

        logging::success (" Test lit class err 8 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 9 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test9.yr"s8);
        utils::ensureErrorEmpty (res.err);
        utils::compareResultWithFile (res.sem, "test_resources/lit_class/errors/test9_out.txt"s8);

        logging::success (" Test lit class err 9 finished"s8);
    }

    __test {
        logging::setRelativeTime ();
        logging::info (" Test lit class err 10 start"s8);

        let res = utils::compileFile ("test_resources/lit_class/errors/test10.yr"s8);
        utils::ensureResultEmpty (res.sem);
        utils::compareErrorWithFile (res.err, "test_resources/lit_class/errors/test10_out.txt"s8);

        logging::success (" Test lit class err 10 finished"s8);
    }


}
