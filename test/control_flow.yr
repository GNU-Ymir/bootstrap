mod control_flow;

import ymirc::utils::_;
import utils;

import std::io;


__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 1 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test1.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test1_out.txt"s8);

    logging::success ("Test control flow 1 finished"s8);

}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 2 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test2.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test2_out.txt"s8);

    logging::success ("Test control flow 2 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 3 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test3.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test3_out.txt"s8);

    logging::success ("Test control flow 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 4 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test4.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test4_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test4_yil.txt"s8);

    logging::success ("Test control flow 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 5 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test5.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test5_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test5_yil.txt"s8);

    logging::success ("Test control flow 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 6 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test6.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test6_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test6_yil.txt"s8);

    logging::success ("Test control flow 6 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 7 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test7.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test7_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test7_yil.txt"s8);

    logging::success ("Test control flow 7 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 8 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test8.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test8_out.txt"s8);

    logging::success ("Test control flow 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 9 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test9.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test9_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test9_yil.txt"s8);

    logging::success ("Test control flow 9 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 10 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test10.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test10_out.txt"s8);

    logging::success ("Test control flow 10 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 11 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test11.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test11_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test11_yil.txt"s8);

    logging::success ("Test control flow 11 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 12 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test12.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test12_out.txt"s8);

    logging::success ("Test control flow 12 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 13 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test13.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test13_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test13_yil.txt"s8);

    logging::success ("Test control flow 13 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 14 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test14.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test14_out.txt"s8);

    logging::success ("Test control flow 14 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 15 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test15.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test15_out.txt"s8);

    logging::success ("Test control flow 15 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 16 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test16.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test16_out.txt"s8);

    logging::success ("Test control flow 16 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 17 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test17.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test17_out.txt"s8);

    logging::success ("Test control flow 17 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 18 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test18.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test18_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test18_yil.txt"s8);

    logging::success ("Test control flow 18 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 19 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test19.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test19_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test19_yil.txt"s8);

    logging::success ("Test control flow 19 finished"s8);
}
