in control_flow;

use ymirc::utils::_;
use utils;

use std::io;


__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 1 start");

    let res = utils::compileFile ("test_resources/control_flow/test1.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test1_out.txt");

    logging::success ("Test control flow 1 finished");

}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 2 start");

    let res = utils::compileFile ("test_resources/control_flow/test2.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test2_out.txt");

    logging::success ("Test control flow 2 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 3 start");

    let res = utils::compileFile ("test_resources/control_flow/test3.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test3_out.txt");

    logging::success ("Test control flow 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 4 start");

    let res = utils::compileFile ("test_resources/control_flow/test4.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test4_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test4_yil.txt");

    logging::success ("Test control flow 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 5 start");

    let res = utils::compileFile ("test_resources/control_flow/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test5_yil.txt");

    logging::success ("Test control flow 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 6 start");

    let res = utils::compileFile ("test_resources/control_flow/test6.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test6_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test6_yil.txt");

    logging::success ("Test control flow 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 7 start");

    let res = utils::compileFile ("test_resources/control_flow/test7.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test7_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test7_yil.txt");

    logging::success ("Test control flow 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 8 start");

    let res = utils::compileFile ("test_resources/control_flow/test8.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test8_out.txt");

    logging::success ("Test control flow 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 9 start");

    let res = utils::compileFile ("test_resources/control_flow/test9.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test9_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test9_yil.txt");

    logging::success ("Test control flow 9 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 10 start");

    let res = utils::compileFile ("test_resources/control_flow/test10.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test10_out.txt");

    logging::success ("Test control flow 10 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 11 start");

    let res = utils::compileFile ("test_resources/control_flow/test11.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test11_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test11_yil.txt");

    logging::success ("Test control flow 11 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 12 start");

    let res = utils::compileFile ("test_resources/control_flow/test12.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test12_out.txt");

    logging::success ("Test control flow 12 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 13 start");

    let res = utils::compileFile ("test_resources/control_flow/test13.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test13_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test13_yil.txt");

    logging::success ("Test control flow 13 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 14 start");

    let res = utils::compileFile ("test_resources/control_flow/test14.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test14_out.txt");

    logging::success ("Test control flow 14 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 15 start");

    let res = utils::compileFile ("test_resources/control_flow/test15.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test15_out.txt");

    logging::success ("Test control flow 15 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 16 start");

    let res = utils::compileFile ("test_resources/control_flow/test16.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test16_out.txt");

    logging::success ("Test control flow 16 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 17 start");

    let res = utils::compileFile ("test_resources/control_flow/test17.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test17_out.txt");

    logging::success ("Test control flow 17 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 18 start");

    let res = utils::compileFile ("test_resources/control_flow/test18.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test18_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test18_yil.txt");

    logging::success ("Test control flow 18 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 19 start");

    let res = utils::compileFile ("test_resources/control_flow/test19.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test19_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test19_yil.txt");

    logging::success ("Test control flow 19 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 20 start");

    let res = utils::compileFile ("test_resources/control_flow/test20.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test20_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test20_yil.txt");

    logging::success ("Test control flow 20 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 21 start");

    let res = utils::compileFile ("test_resources/control_flow/test21.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test21_out.txt");

    logging::success ("Test control flow 21 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 22 start");

    let res = utils::compileFile ("test_resources/control_flow/test22.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test22_out.txt");

    logging::success ("Test control flow 22 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 23 start");

    let res = utils::compileFile ("test_resources/control_flow/test23.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test23_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test23_yil.txt");

    logging::success ("Test control flow 23 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 24 start");

    let res = utils::compileFile ("test_resources/control_flow/test24.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test24_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test24_yil.txt");

    logging::success ("Test control flow 24 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 25 start");

    let res = utils::compileFile ("test_resources/control_flow/test25.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test25_out.txt");

    logging::success ("Test control flow 25 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 26 start");

    let res = utils::compileFile ("test_resources/control_flow/test26.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/control_flow/test26_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/control_flow/test26_yil.txt");

    logging::success ("Test control flow 26 finished");
}
