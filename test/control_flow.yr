mod control_flow;

import ymirc::utils::_;
import utils;

import std::io;


__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 1 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test1.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test1_out.txt"s8);

    logging::success ("Test control flow 1 finished"s8);

}

__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 2 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test2.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test2_out.txt"s8);

    logging::success ("Test control flow 2 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info ("Test control flow 3 start"s8);

    let res = utils::compileFile ("test_resources/control_flow/test3.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/control_flow/test3_out.txt"s8);

    logging::success ("Test control flow 3 finished"s8);
}
