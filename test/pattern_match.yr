mod pattern_match;

import ymirc::utils::_;
import utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 1 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test1.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test1_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test1_yil.txt"s8);

    logging::success (" Test pattern match 1 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 2 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test2.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test2_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test2_yil.txt"s8);

    logging::success (" Test pattern match 2 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 3 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test3.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test3_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test3_yil.txt"s8);

    logging::success (" Test pattern match 3 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 4 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test4.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test4_out.txt"s8);

    logging::success (" Test pattern match 4 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 5 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test5.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test5_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test5_yil.txt"s8);

    logging::success (" Test pattern match 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 6 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test6.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test6_out.txt"s8);

    logging::success (" Test pattern match 6 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 7 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test7.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test7_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test7_yil.txt"s8);

    logging::success (" Test pattern match 7 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 8 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test8.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test8_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test8_yil.txt"s8);

    logging::success (" Test pattern match 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 9 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test9.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test9_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test9_yil.txt"s8);

    logging::success (" Test pattern match 9 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 10 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test10.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test10_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test10_yil.txt"s8);

    logging::success (" Test pattern match 10 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 11 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test11.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test11_out.txt"s8);

    logging::success (" Test pattern match 11 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 12 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test12.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test12_out.txt"s8);

    logging::success (" Test pattern match 12 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 13 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test13.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test13_out.txt"s8);

    logging::success (" Test pattern match 13 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 14 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test14.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test14_out.txt"s8);

    logging::success (" Test pattern match 14 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 15 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test15.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test15_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test15_yil.txt"s8);

    logging::success (" Test pattern match 15 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 16 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test16.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test16_out.txt"s8);

    logging::success (" Test pattern match 16 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 17 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test17.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test17_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test17_yil.txt"s8);

    logging::success (" Test pattern match 17 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 18 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test18.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test18_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test18_yil.txt"s8);

    logging::success (" Test pattern match 18 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 19 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test19.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test19_out.txt"s8);

    logging::success (" Test pattern match 19 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 20 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test20.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test20_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test20_yil.txt"s8);

    logging::success (" Test pattern match 20 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 21 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test21.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test21_out.txt"s8);

    logging::success (" Test pattern match 21 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 22 start"s8);

    let res = utils::compileFile ("test_resources/pattern_match/test22.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test22_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test22_yil.txt"s8);

    logging::success (" Test pattern match 22 finished"s8);
}
