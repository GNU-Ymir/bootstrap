in pattern_match;

use ymirc::utils::_;
use utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 1 start");

    let res = utils::compileFile ("test_resources/pattern_match/test1.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test1_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test1_yil.txt");

    logging::success (" Test pattern match 1 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 2 start");

    let res = utils::compileFile ("test_resources/pattern_match/test2.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test2_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test2_yil.txt");

    logging::success (" Test pattern match 2 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 3 start");

    let res = utils::compileFile ("test_resources/pattern_match/test3.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test3_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test3_yil.txt");

    logging::success (" Test pattern match 3 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 4 start");

    let res = utils::compileFile ("test_resources/pattern_match/test4.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test4_out.txt");

    logging::success (" Test pattern match 4 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 5 start");

    let res = utils::compileFile ("test_resources/pattern_match/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test5_yil.txt");

    logging::success (" Test pattern match 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 6 start");

    let res = utils::compileFile ("test_resources/pattern_match/test6.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test6_out.txt");

    logging::success (" Test pattern match 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 7 start");

    let res = utils::compileFile ("test_resources/pattern_match/test7.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test7_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test7_yil.txt");

    logging::success (" Test pattern match 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 8 start");

    let res = utils::compileFile ("test_resources/pattern_match/test8.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test8_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test8_yil.txt");

    logging::success (" Test pattern match 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 9 start");

    let res = utils::compileFile ("test_resources/pattern_match/test9.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test9_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test9_yil.txt");

    logging::success (" Test pattern match 9 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 10 start");

    let res = utils::compileFile ("test_resources/pattern_match/test10.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test10_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test10_yil.txt");

    logging::success (" Test pattern match 10 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 11 start");

    let res = utils::compileFile ("test_resources/pattern_match/test11.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test11_out.txt");

    logging::success (" Test pattern match 11 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 12 start");

    let res = utils::compileFile ("test_resources/pattern_match/test12.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test12_out.txt");

    logging::success (" Test pattern match 12 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 13 start");

    let res = utils::compileFile ("test_resources/pattern_match/test13.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test13_out.txt");

    logging::success (" Test pattern match 13 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 14 start");

    let res = utils::compileFile ("test_resources/pattern_match/test14.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test14_out.txt");

    logging::success (" Test pattern match 14 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 15 start");

    let res = utils::compileFile ("test_resources/pattern_match/test15.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test15_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test15_yil.txt");

    logging::success (" Test pattern match 15 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 16 start");

    let res = utils::compileFile ("test_resources/pattern_match/test16.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test16_out.txt");

    logging::success (" Test pattern match 16 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 17 start");

    let res = utils::compileFile ("test_resources/pattern_match/test17.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test17_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test17_yil.txt");

    logging::success (" Test pattern match 17 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 18 start");

    let res = utils::compileFile ("test_resources/pattern_match/test18.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test18_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test18_yil.txt");

    logging::success (" Test pattern match 18 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 19 start");

    let res = utils::compileFile ("test_resources/pattern_match/test19.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test19_out.txt");

    logging::success (" Test pattern match 19 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 20 start");

    let res = utils::compileFile ("test_resources/pattern_match/test20.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test20_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test20_yil.txt");

    logging::success (" Test pattern match 20 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 21 start");

    let res = utils::compileFile ("test_resources/pattern_match/test21.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/pattern_match/test21_out.txt");

    logging::success (" Test pattern match 21 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 22 start");

    let res = utils::compileFile ("test_resources/pattern_match/test22.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test22_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test22_yil.txt");

    logging::success (" Test pattern match 22 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 23 start");

    let res = utils::compileFile ("test_resources/pattern_match/test23.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test23_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test23_yil.txt");

    logging::success (" Test pattern match 23 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 24 start");

    let res = utils::compileFile ("test_resources/pattern_match/test24.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test24_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test24_yil.txt");

    logging::success (" Test pattern match 24 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test pattern match 25 start");

    let res = utils::compileFile ("test_resources/pattern_match/test25.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/pattern_match/test25_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/pattern_match/test25_yil.txt");

    logging::success (" Test pattern match 25 finished");
}
