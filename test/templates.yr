mod templates;

import ymirc::utils::_;
import utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 1 start"s8);

    let res = utils::compileFile ("test_resources/templates/test1.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test1_out.txt"s8);
    
    logging::success (" Test template 1 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 2 start"s8);

    let res = utils::compileFile ("test_resources/templates/test2.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test2_out.txt"s8);

    logging::success (" Test template 2 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 3 start"s8);

    let res = utils::compileFile ("test_resources/templates/test3.yr"s8);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test3_out.txt"s8);

    logging::success (" Test template 3 end"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test template 4 start"s8);

    let res = utils::compileFile ("test_resources/templates/test4.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test4_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test4_yil.txt"s8);

    logging::success (" Test template 4 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 5 start"s8);

    let res = utils::compileFile ("test_resources/templates/test5.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test5_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test5_yil.txt"s8);

    logging::success (" Test template 5 end"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test template 6 start"s8);

    let res = utils::compileFile ("test_resources/templates/test6.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test6_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test6_yil.txt"s8);

    logging::success (" Test template 6 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 7 start"s8);

    let res = utils::compileFile ("test_resources/templates/test7.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test7_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test7_yil.txt"s8);

    logging::success (" Test template 7 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 8 start"s8);

    let res = utils::compileFile ("test_resources/templates/test8.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test8_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test8_yil.txt"s8);

    logging::success (" Test template 8 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 9 start"s8);

    let res = utils::compileFile ("test_resources/templates/test9.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test9_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test9_yil.txt"s8);

    logging::success (" Test template 9 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 10 start"s8);

    let res = utils::compileFile ("test_resources/templates/test10.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test10_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test10_yil.txt"s8);

    logging::success (" Test template 10 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 11 start"s8);

    let res = utils::compileFile ("test_resources/templates/test11.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test11_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test11_yil.txt"s8);

    logging::success (" Test template 11 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 12 start"s8);

    let res = utils::compileFile ("test_resources/templates/test12.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test12_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test12_yil.txt"s8);

    logging::success (" Test template 12 end"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 13 start"s8);

    let res = utils::compileFile ("test_resources/templates/test13.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test13_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/templates/test13_yil.txt"s8);

    logging::success (" Test template 13 end"s8);
}
