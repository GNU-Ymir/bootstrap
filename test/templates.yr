in templates;

use ymirc::utils::_;
use utils;

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 1 start");

    let res = utils::compileFile ("test_resources/templates/test1.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test1_out.txt");

    logging::success (" Test template 1 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 2 start");

    let res = utils::compileFile ("test_resources/templates/test2.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test2_out.txt");

    logging::success (" Test template 2 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 3 start");

    let res = utils::compileFile ("test_resources/templates/test3.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test3_out.txt");

    logging::success (" Test template 3 end");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test template 4 start");

    let res = utils::compileFile ("test_resources/templates/test4.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test4_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test4_yil.txt");

    logging::success (" Test template 4 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 5 start");

    let res = utils::compileFile ("test_resources/templates/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test5_yil.txt");

    logging::success (" Test template 5 end");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test template 6 start");

    let res = utils::compileFile ("test_resources/templates/test6.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test6_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test6_yil.txt");

    logging::success (" Test template 6 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 7 start");

    let res = utils::compileFile ("test_resources/templates/test7.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test7_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test7_yil.txt");

    logging::success (" Test template 7 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 8 start");

    let res = utils::compileFile ("test_resources/templates/test8.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test8_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test8_yil.txt");

    logging::success (" Test template 8 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 9 start");

    let res = utils::compileFile ("test_resources/templates/test9.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test9_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test9_yil.txt");

    logging::success (" Test template 9 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 10 start");

    let res = utils::compileFile ("test_resources/templates/test10.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test10_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test10_yil.txt");

    logging::success (" Test template 10 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 11 start");

    let res = utils::compileFile ("test_resources/templates/test11.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test11_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test11_yil.txt");

    logging::success (" Test template 11 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 12 start");

    let res = utils::compileFile ("test_resources/templates/test12.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test12_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test12_yil.txt");

    logging::success (" Test template 12 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 13 start");

    let res = utils::compileFile ("test_resources/templates/test13.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test13_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test13_yil.txt");

    logging::success (" Test template 13 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 14 start");

    let res = utils::compileFile ("test_resources/templates/test14.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test14_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test14_yil.txt");

    logging::success (" Test template 14 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 15 start");

    let res = utils::compileFile ("test_resources/templates/test15.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/test15_out.txt");

    logging::success (" Test template 15 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 16 start");

    let res = utils::compileFile ("test_resources/templates/test16.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/test16_out.txt");

    logging::success (" Test template 16 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 17 start");

    let res = utils::compileFile ("test_resources/templates/test17.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/templates/test17_out.txt");

    logging::success (" Test template 17 end");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test template 18 start");

    let res = utils::compileFile ("test_resources/templates/test18.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/templates/test18_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/templates/test18_yil.txt");

    logging::success (" Test template 18 end");
}
