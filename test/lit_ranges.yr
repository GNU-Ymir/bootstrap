in lit_ranges;

use ymirc::utils::_;
use utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 1 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test1.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test1_out.txt");

    logging::success (" Test lit ranges 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 2 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test2.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test2_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_ranges/test2_yil.txt");

    logging::success (" Test lit ranges 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 3 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test3.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test3_out.txt");

    logging::success (" Test lit ranges 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 4 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test4.yr");
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test4_out.txt");

    logging::success (" Test lit ranges 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 5 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_ranges/test5_yil.txt");

    logging::success (" Test lit ranges 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 6 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test6.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test6_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_ranges/test6_yil.txt");

    logging::success (" Test lit ranges 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 7 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test7.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test7_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_ranges/test7_yil.txt");

    logging::success (" Test lit ranges 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 8 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test8.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test8_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_ranges/test8_yil.txt");

    logging::success (" Test lit ranges 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit ranges 9 start");


    let res = utils::compileFile ("test_resources/lit_ranges/test9.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_ranges/test9_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_ranges/test9_yil.txt");

    logging::success (" Test lit ranges 9 finished");
}
