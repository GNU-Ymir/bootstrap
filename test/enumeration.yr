mod enumeration;

import ymirc::utils::_;
import utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 1 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test1.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test1_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test1_yil.txt"s8);

    logging::success (" Test enumeration 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 2 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test2.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test2_out.txt"s8);

    logging::success (" Test enumeration 2 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 3 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test3.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test3_out.txt"s8);

    logging::success (" Test enumeration 3 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 4 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test4.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test4_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test4_yil.txt"s8);

    logging::success (" Test enumeration 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 5 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test5.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test5_out.txt"s8);

    logging::success (" Test enumeration 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 6 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test6.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test6_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test6_yil.txt"s8);

    logging::success (" Test enumeration 6 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 7 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test7.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test7_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test7_yil.txt"s8);

    logging::success (" Test enumeration 7 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 8 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test8.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test8_out.txt"s8);

    logging::success (" Test enumeration 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 9 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test9.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test9_out.txt"s8);

    logging::success (" Test enumeration 9 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 10 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test10.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test10_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test10_yil.txt"s8);

    logging::success (" Test enumeration 10 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 11 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test11.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test11_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test11_yil.txt"s8);

    logging::success (" Test enumeration 11 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 12 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test12.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test12_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test12_yil.txt"s8);

    logging::success (" Test enumeration 12 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 13 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test13.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test13_out.txt"s8);

    logging::success (" Test enumeration 13 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 14 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test14.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test14_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test14_yil.txt"s8);

    logging::success (" Test enumeration 14 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 14 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test14.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test14_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test14_yil.txt"s8);

    logging::success (" Test enumeration 14 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 15 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test15.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test15_out.txt"s8);

    logging::success (" Test enumeration 15 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 16 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test16.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/enumeration/test16_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/enumeration/test16_yil.txt"s8);

    logging::success (" Test enumeration 16 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test enumeration 17 start"s8);

    let res = utils::compileFile ("test_resources/enumeration/test17.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/enumeration/test17_out.txt"s8);

    logging::success (" Test enumeration 17 finished"s8);
}
