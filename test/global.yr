in global;

use ymirc::utils::_;
use utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test global 1 start");

    let res = utils::compileFile ("test_resources/global/test1.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test1_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/global/test1_yil.txt");

    logging::success (" Test global 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 2 start");

    let res = utils::compileFile ("test_resources/global/test2.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test2_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/global/test2_yil.txt");

    logging::success (" Test global 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 3 start");

    let res = utils::compileFile ("test_resources/global/test3.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test3_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/global/test3_yil.txt");

    logging::success (" Test global 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 4 start");

    let res = utils::compileFile ("test_resources/global/test4.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test4_out.txt");

    logging::success (" Test global 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 5 start");

    let res = utils::compileFile ("test_resources/global/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/global/test5_yil.txt");

    logging::success (" Test global 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 6 start");

    let res = utils::compileFile ("test_resources/global/test6.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test6_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/global/test6_yil.txt");

    logging::success (" Test global 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 7 start");

    let res = utils::compileFile ("test_resources/global/test7.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test7_out.txt");

    logging::success (" Test global 7 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test global 8 start");

    let res = utils::compileFile ("test_resources/global/test8.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test8_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/global/test8_yil.txt");

    logging::success (" Test global 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 9 start");

    let res = utils::compileFile ("test_resources/global/test9.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test9_out.txt");

    logging::success (" Test global 9 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 10 start");

    let res = utils::compileFile ("test_resources/global/test10.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test10_out.txt");

    logging::success (" Test global 10 finished");
}
