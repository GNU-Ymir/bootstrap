mod global;

import ymirc::utils::_;
import utils;


__test {
    logging::setRelativeTime ();
    logging::info (" Test global 1 start"s8);

    let res = utils::compileFile ("test_resources/global/test1.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test1_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/global/test1_yil.txt"s8);

    logging::success (" Test global 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 2 start"s8);

    let res = utils::compileFile ("test_resources/global/test2.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test2_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/global/test2_yil.txt"s8);

    logging::success (" Test global 2 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 3 start"s8);

    let res = utils::compileFile ("test_resources/global/test3.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test3_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/global/test3_yil.txt"s8);

    logging::success (" Test global 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 4 start"s8);

    let res = utils::compileFile ("test_resources/global/test4.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test4_out.txt"s8);

    logging::success (" Test global 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 5 start"s8);

    let res = utils::compileFile ("test_resources/global/test5.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test5_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/global/test5_yil.txt"s8);

    logging::success (" Test global 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 6 start"s8);

    let res = utils::compileFile ("test_resources/global/test6.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test6_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/global/test6_yil.txt"s8);

    logging::success (" Test global 6 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 7 start"s8);

    let res = utils::compileFile ("test_resources/global/test7.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test7_out.txt"s8);

    logging::success (" Test global 7 finished"s8);
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test global 8 start"s8);

    let res = utils::compileFile ("test_resources/global/test8.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/global/test8_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/global/test8_yil.txt"s8);

    logging::success (" Test global 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 9 start"s8);

    let res = utils::compileFile ("test_resources/global/test9.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test9_out.txt"s8);

    logging::success (" Test global 9 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test global 10 start"s8);

    let res = utils::compileFile ("test_resources/global/test10.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/global/test10_out.txt"s8);

    logging::success (" Test global 10 finished"s8);
}
