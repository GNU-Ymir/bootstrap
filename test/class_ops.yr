in class_ops;

use ymirc::utils::_;
use utils;

use std::io;

// Test for operators on classes
__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 1 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test1.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test1_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test1_yil.txt");

    logging::success (" Test lit class operators 1 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 2 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test2.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test2_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test2_yil.txt");

    logging::success (" Test lit class operators 2 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 3 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test3.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test3_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test3_yil.txt");

    logging::success (" Test lit class operators 3 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 4 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test4.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test4_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test4_yil.txt");

    logging::success (" Test lit class operators 4 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 5 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test5.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test5_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test5_yil.txt");

    logging::success (" Test lit class operators 5 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 6 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test6.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test6_out.txt");

    logging::success (" Test lit class operators 6 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 7 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test7.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test7_out.txt");

    logging::success (" Test lit class operators 7 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 8 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test8.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test8_out.txt");

    logging::success (" Test lit class operators 8 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 9 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test9.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test9_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test9_yil.txt");

    logging::success (" Test lit class operators 9 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 10 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test10.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test10_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test10_yil.txt");

    logging::success (" Test lit class operators 10 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 11 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test11.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test11_out.txt");

    logging::success (" Test lit class operators 11 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 12 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test12.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test12_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test12_yil.txt");

    logging::success (" Test lit class operators 12 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 13 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test13.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test13_out.txt");

    logging::success (" Test lit class operators 13 finished");
}


__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 14 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test14.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test14_out.txt");

    logging::success (" Test lit class operators 14 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 15 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test15.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test15_out.txt");

    logging::success (" Test lit class operators 15 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 16 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test16.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test16_out.txt");

    logging::success (" Test lit class operators 16 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 17 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test17.yr");
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test17_out.txt");

    logging::success (" Test lit class operators 17 finished");
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 18 start");

    let res = utils::compileFile ("test_resources/lit_class/operators/test18.yr", withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test18_out.txt");
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test18_yil.txt");

    logging::success (" Test lit class operators 18 finished");
}
