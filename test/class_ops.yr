mod class_ops;

import ymirc::utils::_;
import utils;

import std::io;

// Test for operators on classes
__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 1 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test1.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test1_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test1_yil.txt"s8);

    logging::success (" Test lit class operators 1 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 2 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test2.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test2_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test2_yil.txt"s8);

    logging::success (" Test lit class operators 2 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 3 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test3.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test3_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test3_yil.txt"s8);

    logging::success (" Test lit class operators 3 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 4 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test4.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test4_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test4_yil.txt"s8);

    logging::success (" Test lit class operators 4 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 5 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test5.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test5_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test5_yil.txt"s8);

    logging::success (" Test lit class operators 5 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 6 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test6.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test6_out.txt"s8);

    logging::success (" Test lit class operators 6 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 7 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test7.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test7_out.txt"s8);

    logging::success (" Test lit class operators 7 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 8 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test8.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test8_out.txt"s8);

    logging::success (" Test lit class operators 8 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 9 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test9.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test9_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test9_yil.txt"s8);

    logging::success (" Test lit class operators 9 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 10 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test10.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test10_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test10_yil.txt"s8);

    logging::success (" Test lit class operators 10 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 11 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test11.yr"s8);
    utils::ensureResultEmpty (res.sem);
    utils::compareErrorWithFile (res.err, "test_resources/lit_class/operators/test11_out.txt"s8);

    logging::success (" Test lit class operators 11 finished"s8);
}

__test {
    logging::setRelativeTime ();
    logging::info (" Test lit class operators 12 start"s8);

    let res = utils::compileFile ("test_resources/lit_class/operators/test12.yr"s8, withLint-> true);
    utils::ensureErrorEmpty (res.err);
    utils::compareResultWithFile (res.sem, "test_resources/lit_class/operators/test12_out.txt"s8);
    utils::compareResultWithFile (res.exp, "test_resources/lit_class/operators/test12_yil.txt"s8);

    logging::success (" Test lit class operators 12 finished"s8);
}
